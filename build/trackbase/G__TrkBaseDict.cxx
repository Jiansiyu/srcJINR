//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:02:52 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddItrackbasedIG__TrkBaseDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__TrkBaseDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void FairTrackPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairTrackPar(void *p = 0);
   static void *newArray_FairTrackPar(Long_t size, void *p);
   static void delete_FairTrackPar(void *p);
   static void deleteArray_FairTrackPar(void *p);
   static void destruct_FairTrackPar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairTrackPar*)
   {
      ::FairTrackPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairTrackPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairTrackPar", ::FairTrackPar::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/trackbase/FairTrackPar.h", 8,
                  typeid(::FairTrackPar), DefineBehavior(ptr, ptr),
                  &::FairTrackPar::Dictionary, isa_proxy, 4,
                  sizeof(::FairTrackPar) );
      instance.SetNew(&new_FairTrackPar);
      instance.SetNewArray(&newArray_FairTrackPar);
      instance.SetDelete(&delete_FairTrackPar);
      instance.SetDeleteArray(&deleteArray_FairTrackPar);
      instance.SetDestructor(&destruct_FairTrackPar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairTrackPar*)
   {
      return GenerateInitInstanceLocal((::FairTrackPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairTrackPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairTrackParP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairTrackParP(void *p = 0);
   static void *newArray_FairTrackParP(Long_t size, void *p);
   static void delete_FairTrackParP(void *p);
   static void deleteArray_FairTrackParP(void *p);
   static void destruct_FairTrackParP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairTrackParP*)
   {
      ::FairTrackParP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairTrackParP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairTrackParP", ::FairTrackParP::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/trackbase/FairTrackParP.h", 19,
                  typeid(::FairTrackParP), DefineBehavior(ptr, ptr),
                  &::FairTrackParP::Dictionary, isa_proxy, 4,
                  sizeof(::FairTrackParP) );
      instance.SetNew(&new_FairTrackParP);
      instance.SetNewArray(&newArray_FairTrackParP);
      instance.SetDelete(&delete_FairTrackParP);
      instance.SetDeleteArray(&deleteArray_FairTrackParP);
      instance.SetDestructor(&destruct_FairTrackParP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairTrackParP*)
   {
      return GenerateInitInstanceLocal((::FairTrackParP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairTrackParP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairTrackParH_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairTrackParH(void *p = 0);
   static void *newArray_FairTrackParH(Long_t size, void *p);
   static void delete_FairTrackParH(void *p);
   static void deleteArray_FairTrackParH(void *p);
   static void destruct_FairTrackParH(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairTrackParH*)
   {
      ::FairTrackParH *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairTrackParH >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairTrackParH", ::FairTrackParH::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/trackbase/FairTrackParH.h", 21,
                  typeid(::FairTrackParH), DefineBehavior(ptr, ptr),
                  &::FairTrackParH::Dictionary, isa_proxy, 4,
                  sizeof(::FairTrackParH) );
      instance.SetNew(&new_FairTrackParH);
      instance.SetNewArray(&newArray_FairTrackParH);
      instance.SetDelete(&delete_FairTrackParH);
      instance.SetDeleteArray(&deleteArray_FairTrackParH);
      instance.SetDestructor(&destruct_FairTrackParH);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairTrackParH*)
   {
      return GenerateInitInstanceLocal((::FairTrackParH*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairTrackParH*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairGeaneUtil_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairGeaneUtil(void *p = 0);
   static void *newArray_FairGeaneUtil(Long_t size, void *p);
   static void delete_FairGeaneUtil(void *p);
   static void deleteArray_FairGeaneUtil(void *p);
   static void destruct_FairGeaneUtil(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairGeaneUtil*)
   {
      ::FairGeaneUtil *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairGeaneUtil >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairGeaneUtil", ::FairGeaneUtil::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/trackbase/FairGeaneUtil.h", 9,
                  typeid(::FairGeaneUtil), DefineBehavior(ptr, ptr),
                  &::FairGeaneUtil::Dictionary, isa_proxy, 4,
                  sizeof(::FairGeaneUtil) );
      instance.SetNew(&new_FairGeaneUtil);
      instance.SetNewArray(&newArray_FairGeaneUtil);
      instance.SetDelete(&delete_FairGeaneUtil);
      instance.SetDeleteArray(&deleteArray_FairGeaneUtil);
      instance.SetDestructor(&destruct_FairGeaneUtil);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairGeaneUtil*)
   {
      return GenerateInitInstanceLocal((::FairGeaneUtil*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairGeaneUtil*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *FairTrackPar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairTrackPar::Class_Name()
{
   return "FairTrackPar";
}

//______________________________________________________________________________
const char *FairTrackPar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairTrackPar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairTrackPar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairTrackPar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackPar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairTrackParP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairTrackParP::Class_Name()
{
   return "FairTrackParP";
}

//______________________________________________________________________________
const char *FairTrackParP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairTrackParP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairTrackParP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairTrackParP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairTrackParH::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairTrackParH::Class_Name()
{
   return "FairTrackParH";
}

//______________________________________________________________________________
const char *FairTrackParH::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParH*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairTrackParH::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParH*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairTrackParH::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParH*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairTrackParH::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairTrackParH*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairGeaneUtil::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairGeaneUtil::Class_Name()
{
   return "FairGeaneUtil";
}

//______________________________________________________________________________
const char *FairGeaneUtil::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGeaneUtil*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairGeaneUtil::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGeaneUtil*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairGeaneUtil::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGeaneUtil*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairGeaneUtil::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGeaneUtil*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void FairTrackPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairTrackPar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairTrackPar::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairTrackPar::Class(),this);
   }
}

//______________________________________________________________________________
void FairTrackPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairTrackPar.
      TClass *R__cl = ::FairTrackPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDX", &fDX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDY", &fDY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDZ", &fDZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx", &fPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy", &fPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz", &fPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPx", &fDPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPy", &fDPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPz", &fDPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQp", &fQp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDQp", &fDQp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fq", &fq);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairTrackPar(void *p) {
      return  p ? new(p) ::FairTrackPar : new ::FairTrackPar;
   }
   static void *newArray_FairTrackPar(Long_t nElements, void *p) {
      return p ? new(p) ::FairTrackPar[nElements] : new ::FairTrackPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairTrackPar(void *p) {
      delete ((::FairTrackPar*)p);
   }
   static void deleteArray_FairTrackPar(void *p) {
      delete [] ((::FairTrackPar*)p);
   }
   static void destruct_FairTrackPar(void *p) {
      typedef ::FairTrackPar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairTrackPar

//______________________________________________________________________________
void FairTrackParP::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairTrackParP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairTrackParP::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairTrackParP::Class(),this);
   }
}

//______________________________________________________________________________
void FairTrackParP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairTrackParP.
      TClass *R__cl = ::FairTrackParP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fU", &fU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV", &fV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTV", &fTV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTW", &fTW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx_sd", &fPx_sd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy_sd", &fPy_sd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz_sd", &fPz_sd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDU", &fDU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDV", &fDV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDW", &fDW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTV", &fDTV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTW", &fDTW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCovMatrix[15]", fCovMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCovMatrix66[6][6]", fCovMatrix66);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forigin", &forigin);
      R__insp.InspectMember(forigin, "forigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiver", &fiver);
      R__insp.InspectMember(fiver, "fiver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fjver", &fjver);
      R__insp.InspectMember(fjver, "fjver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkver", &fkver);
      R__insp.InspectMember(fkver, "fkver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDI[3]", fDI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDJ[3]", fDJ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDK[3]", fDK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSPU", &fSPU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftrmat[5][5]", ftrmat);
      FairTrackPar::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairTrackParP(void *p) {
      return  p ? new(p) ::FairTrackParP : new ::FairTrackParP;
   }
   static void *newArray_FairTrackParP(Long_t nElements, void *p) {
      return p ? new(p) ::FairTrackParP[nElements] : new ::FairTrackParP[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairTrackParP(void *p) {
      delete ((::FairTrackParP*)p);
   }
   static void deleteArray_FairTrackParP(void *p) {
      delete [] ((::FairTrackParP*)p);
   }
   static void destruct_FairTrackParP(void *p) {
      typedef ::FairTrackParP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairTrackParP

//______________________________________________________________________________
void FairTrackParH::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairTrackParH.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairTrackParH::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairTrackParH::Class(),this);
   }
}

//______________________________________________________________________________
void FairTrackParH::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairTrackParH.
      TClass *R__cl = ::FairTrackParH::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLm", &fLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDLm", &fDLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPhi", &fDPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX_sc", &fX_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY_sc", &fY_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ_sc", &fZ_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDX_sc", &fDX_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDY_sc", &fDY_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDZ_sc", &fDZ_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCovMatrix[15]", fCovMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCovMatrix66[6][6]", fCovMatrix66);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cLm", &cLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sLm", &sLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cphi", &cphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sphi", &sphi);
      FairTrackPar::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairTrackParH(void *p) {
      return  p ? new(p) ::FairTrackParH : new ::FairTrackParH;
   }
   static void *newArray_FairTrackParH(Long_t nElements, void *p) {
      return p ? new(p) ::FairTrackParH[nElements] : new ::FairTrackParH[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairTrackParH(void *p) {
      delete ((::FairTrackParH*)p);
   }
   static void deleteArray_FairTrackParH(void *p) {
      delete [] ((::FairTrackParH*)p);
   }
   static void destruct_FairTrackParH(void *p) {
      typedef ::FairTrackParH current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairTrackParH

//______________________________________________________________________________
void FairGeaneUtil::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairGeaneUtil.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairGeaneUtil::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairGeaneUtil::Class(),this);
   }
}

//______________________________________________________________________________
void FairGeaneUtil::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairGeaneUtil.
      TClass *R__cl = ::FairGeaneUtil::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairGeaneUtil(void *p) {
      return  p ? new(p) ::FairGeaneUtil : new ::FairGeaneUtil;
   }
   static void *newArray_FairGeaneUtil(Long_t nElements, void *p) {
      return p ? new(p) ::FairGeaneUtil[nElements] : new ::FairGeaneUtil[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairGeaneUtil(void *p) {
      delete ((::FairGeaneUtil*)p);
   }
   static void deleteArray_FairGeaneUtil(void *p) {
      delete [] ((::FairGeaneUtil*)p);
   }
   static void destruct_FairGeaneUtil(void *p) {
      typedef ::FairGeaneUtil current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairGeaneUtil

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/trackbase/G__TrkBaseDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__TrkBaseDict();

extern "C" void G__set_cpp_environmentG__TrkBaseDict() {
  G__cpp_reset_tagtableG__TrkBaseDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__TrkBaseDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FairTrackPar */
static int G__G__TrkBaseDict_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackPar[n];
     } else {
       p = new((void*) gvp) FairTrackPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackPar;
     } else {
       p = new((void*) gvp) FairTrackPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) FairTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const FairTrackPar*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackPar*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackPar*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackPar*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FairTrackPar*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const FairTrackPar*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetQp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FairTrackPar*) G__getstructoffset())->GetDQp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetPx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetPy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDPx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDPy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetDPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->SetQp((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairTrackPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairTrackPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairTrackPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_220_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TrkBaseDict_220_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairTrackPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairTrackPar(*(FairTrackPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairTrackPar G__TFairTrackPar;
static int G__G__TrkBaseDict_220_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairTrackPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairTrackPar*) (soff+(sizeof(FairTrackPar)*i)))->~G__TFairTrackPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairTrackPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairTrackPar*) (soff))->~G__TFairTrackPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TrkBaseDict_220_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackPar* dest = (FairTrackPar*) G__getstructoffset();
   *dest = *(FairTrackPar*) libp->para[0].ref;
   const FairTrackPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairTrackParP */
static int G__G__TrkBaseDict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackParP[n];
     } else {
       p = new((void*) gvp) FairTrackParP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackParP;
     } else {
       p = new((void*) gvp) FairTrackParP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParP(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, *((TVector3*) G__int(libp->para[8])));
   } else {
     p = new((void*) gvp) FairTrackParP(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, *((TVector3*) G__int(libp->para[8])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParP(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, *((TVector3*) G__int(libp->para[8])), (Double_t) G__double(libp->para[9]));
   } else {
     p = new((void*) gvp) FairTrackParP(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, *((TVector3*) G__int(libp->para[8])), (Double_t) G__double(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParP(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
   } else {
     p = new((void*) gvp) FairTrackParP(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
  struct G__aRyp2 { Double_t a[1][6]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParP(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, G__Ap2->a, (Int_t) G__int(libp->para[3])
, *((TVector3*) G__int(libp->para[4])), *((TVector3*) G__int(libp->para[5]))
, *((TVector3*) G__int(libp->para[6])));
   } else {
     p = new((void*) gvp) FairTrackParP(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, G__Ap2->a, (Int_t) G__int(libp->para[3])
, *((TVector3*) G__int(libp->para[4])), *((TVector3*) G__int(libp->para[5]))
, *((TVector3*) G__int(libp->para[6])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParP(
(FairTrackParH*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *(Int_t*) G__Intref(&libp->para[3]));
   } else {
     p = new((void*) gvp) FairTrackParP(
(FairTrackParH*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *(Int_t*) G__Intref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->SetTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, *((TVector3*) G__int(libp->para[8])), *((TVector3*) G__int(libp->para[9]))
, *((TVector3*) G__int(libp->para[10])), *((TVector3*) G__int(libp->para[11])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->SetTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, *((TVector3*) G__int(libp->para[8])), *((TVector3*) G__int(libp->para[9]))
, (Double_t) G__double(libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->SetTV((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->SetTW((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairTrackParP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairTrackParP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairTrackParP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackParP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackParP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][6]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairTrackParP*) G__getstructoffset())->GetMARSCov(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((FairTrackParP*) G__getstructoffset())->GetCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->GetCov((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->GetCovQ((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetTV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetTW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetDV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetDW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetDTV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetDTW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairTrackParP*) G__getstructoffset())->GetSDMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairTrackParP*) G__getstructoffset())->GetOrigin();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairTrackParP*) G__getstructoffset())->GetIVer();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairTrackParP*) G__getstructoffset())->GetJVer();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairTrackParP*) G__getstructoffset())->GetKVer();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParP*) G__getstructoffset())->SetPlane(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParP*) G__getstructoffset())->GetSPU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][5]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairTrackParP*) G__getstructoffset())->SetTransportMatrix(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_221_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][5]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairTrackParP*) G__getstructoffset())->GetTransportMatrix(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TrkBaseDict_221_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairTrackParP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairTrackParP(*(FairTrackParP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairTrackParP G__TFairTrackParP;
static int G__G__TrkBaseDict_221_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairTrackParP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairTrackParP*) (soff+(sizeof(FairTrackParP)*i)))->~G__TFairTrackParP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairTrackParP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairTrackParP*) (soff))->~G__TFairTrackParP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TrkBaseDict_221_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParP* dest = (FairTrackParP*) G__getstructoffset();
   *dest = *(FairTrackParP*) libp->para[0].ref;
   const FairTrackParP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairTrackParH */
static int G__G__TrkBaseDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackParH[n];
     } else {
       p = new((void*) gvp) FairTrackParH[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairTrackParH;
     } else {
       p = new((void*) gvp) FairTrackParH;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParH(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) FairTrackParH(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParH(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) FairTrackParH(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParH(*(FairTrackPar*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) FairTrackParH(*(FairTrackPar*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairTrackParH((FairTrackParP*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
   } else {
     p = new((void*) gvp) FairTrackParH((FairTrackParP*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetDLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetDPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->GetCov((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->GetCovQ((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][6]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairTrackParH*) G__getstructoffset())->GetMARSCov(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetDX_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetDY_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetDZ_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetX_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetY_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FairTrackParH*) G__getstructoffset())->GetZ_sc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetLambda((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetDLambda((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetDPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetX_sc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetY_sc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetZ_sc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetCov((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->SetTrackPar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairTrackParH::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParH::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairTrackParH::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairTrackParH::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairTrackParH*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParH::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackParH::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairTrackParH::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_222_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairTrackParH::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TrkBaseDict_222_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairTrackParH* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairTrackParH(*(FairTrackParH*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairTrackParH G__TFairTrackParH;
static int G__G__TrkBaseDict_222_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairTrackParH*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairTrackParH*) (soff+(sizeof(FairTrackParH)*i)))->~G__TFairTrackParH();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairTrackParH*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairTrackParH*) (soff))->~G__TFairTrackParH();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TrkBaseDict_222_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairTrackParH* dest = (FairTrackParH*) G__getstructoffset();
   *dest = *(FairTrackParH*) libp->para[0].ref;
   const FairTrackParH& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairGeaneUtil */
static int G__G__TrkBaseDict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGeaneUtil* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGeaneUtil[n];
     } else {
       p = new((void*) gvp) FairGeaneUtil[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGeaneUtil;
     } else {
       p = new((void*) gvp) FairGeaneUtil;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromPtToSC((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromPtToSD(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSCToPt((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSCToSD(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSD1ToSD2(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]), *(Int_t*) G__Intref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Double_t*) G__int(libp->para[12]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSDToPt(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSDToSC(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSCToMars((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), libp->para[5].ref ? *(FairGeaneUtil::sixMat*) libp->para[5].ref : *(FairGeaneUtil::sixMat*) (void*) (&G__Mlong(libp->para[5])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][6]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      ((FairGeaneUtil*) G__getstructoffset())->FromMarsToSC((Double_t*) G__int(libp->para[0]), G__Ap1->a
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromSDToMars(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, libp->para[8].ref ? *(FairGeaneUtil::sixMat*) libp->para[8].ref : *(FairGeaneUtil::sixMat*) (void*) (&G__Mlong(libp->para[8])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][6]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      ((FairGeaneUtil*) G__getstructoffset())->FromMarsToSD(
(Double_t*) G__int(libp->para[0]), G__Ap1->a
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][5]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairGeaneUtil*) G__getstructoffset())->FromMat25ToVec15(G__Ap0->a, (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][5]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((FairGeaneUtil*) G__getstructoffset())->FromMatToVec(G__Ap0->a, (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromVec15ToMat25((Double_t*) G__int(libp->para[0]), libp->para[1].ref ? *(FairGeaneUtil::fiveMat*) libp->para[1].ref : *(FairGeaneUtil::fiveMat*) (void*) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->FromVecToMat(libp->para[0].ref ? *(FairGeaneUtil::fiveMat*) libp->para[0].ref : *(FairGeaneUtil::fiveMat*) (void*) (&G__Mlong(libp->para[0])), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->SymmProd((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairGeaneUtil*) G__getstructoffset())->FromMARSToSDCoord(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FairGeaneUtil*) G__getstructoffset())->FromSDToMARSCoord(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairGeaneUtil::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGeaneUtil::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairGeaneUtil::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairGeaneUtil::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGeaneUtil*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGeaneUtil::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGeaneUtil::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGeaneUtil::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TrkBaseDict_223_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGeaneUtil::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TrkBaseDict_223_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairGeaneUtil* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairGeaneUtil(*(FairGeaneUtil*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairGeaneUtil G__TFairGeaneUtil;
static int G__G__TrkBaseDict_223_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairGeaneUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairGeaneUtil*) (soff+(sizeof(FairGeaneUtil)*i)))->~G__TFairGeaneUtil();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairGeaneUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairGeaneUtil*) (soff))->~G__TFairGeaneUtil();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TrkBaseDict_223_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGeaneUtil* dest = (FairGeaneUtil*) G__getstructoffset();
   *dest = *(FairGeaneUtil*) libp->para[0].ref;
   const FairGeaneUtil& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FairTrackPar */

/* FairTrackParP */

/* FairTrackParH */

/* FairGeaneUtil */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__TrkBaseDict {
 public:
  G__Sizep2memfuncG__TrkBaseDict(): p(&G__Sizep2memfuncG__TrkBaseDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__TrkBaseDict::*p)();
};

size_t G__get_sizep2memfuncG__TrkBaseDict()
{
  G__Sizep2memfuncG__TrkBaseDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__TrkBaseDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar))) {
     FairTrackPar *G__Lderived;
     G__Lderived=(FairTrackPar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar),G__get_linked_tagnum(&G__G__TrkBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP))) {
     FairTrackParP *G__Lderived;
     G__Lderived=(FairTrackParP*)0x1000;
     {
       FairTrackPar *G__Lpbase=(FairTrackPar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP),G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP),G__get_linked_tagnum(&G__G__TrkBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH))) {
     FairTrackParH *G__Lderived;
     G__Lderived=(FairTrackParH*)0x1000;
     {
       FairTrackPar *G__Lpbase=(FairTrackPar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH),G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH),G__get_linked_tagnum(&G__G__TrkBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil))) {
     FairGeaneUtil *G__Lderived;
     G__Lderived=(FairGeaneUtil*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil),G__get_linked_tagnum(&G__G__TrkBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__TrkBaseDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("sixMat",100,-1,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   G__setnewtype(-1,NULL,2);
   G__setnewtypeindex(0,6);
   G__setnewtypeindex(1,6);
   G__search_typename2("fiveMat",100,-1,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   G__setnewtype(-1,NULL,2);
   G__setnewtypeindex(0,5);
   G__setnewtypeindex(1,5);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FairTrackPar */
static void G__setup_memvarFairTrackPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar));
   { FairTrackPar *p; p=(FairTrackPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDQp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairTrackParP */
static void G__setup_memvarFairTrackParP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   { FairTrackParP *p; p=(FairTrackParP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fU=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPx_sd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPy_sd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPz_sd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDU=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovMatrix[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovMatrix66[6][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3),-1,-1,4,"forigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3),-1,-1,4,"fiver=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3),-1,-1,4,"fjver=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3),-1,-1,4,"fkver=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDI[3]=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDJ[3]=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDK[3]=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSPU=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ftrmat[5][5]=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* FairTrackParH */
static void G__setup_memvarFairTrackParH(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   { FairTrackParH *p; p=(FairTrackParH*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDLm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDX_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDY_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDZ_sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovMatrix[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovMatrix66[6][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cLm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"sLm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cphi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"sphi=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* FairGeaneUtil */
static void G__setup_memvarFairGeaneUtil(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   { FairGeaneUtil *p; p=(FairGeaneUtil*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__TrkBaseDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFairTrackPar(void) {
   /* FairTrackPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar));
   G__memfunc_setup("FairTrackPar",1178,G__G__TrkBaseDict_220_0_1, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackPar",1178,G__G__TrkBaseDict_220_0_2, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - fx "
"d - 'Double_t' 0 - fy d - 'Double_t' 0 - fz "
"i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__G__TrkBaseDict_220_0_4, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX",376,G__G__TrkBaseDict_220_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY",377,G__G__TrkBaseDict_220_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__G__TrkBaseDict_220_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ",369,G__G__TrkBaseDict_220_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDX",444,G__G__TrkBaseDict_220_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDY",445,G__G__TrkBaseDict_220_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDZ",446,G__G__TrkBaseDict_220_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__G__TrkBaseDict_220_0_12, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPx",488,G__G__TrkBaseDict_220_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPy",489,G__G__TrkBaseDict_220_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPz",490,G__G__TrkBaseDict_220_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQp",481,G__G__TrkBaseDict_220_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDPx",556,G__G__TrkBaseDict_220_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDPy",557,G__G__TrkBaseDict_220_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDPz",558,G__G__TrkBaseDict_220_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDQp",549,G__G__TrkBaseDict_220_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetX",388,G__G__TrkBaseDict_220_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetY",389,G__G__TrkBaseDict_220_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZ",390,G__G__TrkBaseDict_220_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDX",456,G__G__TrkBaseDict_220_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDY",457,G__G__TrkBaseDict_220_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDZ",458,G__G__TrkBaseDict_220_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPx",500,G__G__TrkBaseDict_220_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - px", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPy",501,G__G__TrkBaseDict_220_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPz",502,G__G__TrkBaseDict_220_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDPx",568,G__G__TrkBaseDict_220_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dpx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDPy",569,G__G__TrkBaseDict_220_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dpy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDPz",570,G__G__TrkBaseDict_220_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dpz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQp",493,G__G__TrkBaseDict_220_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TrkBaseDict_220_0_34, 85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairTrackPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TrkBaseDict_220_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TrkBaseDict_220_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairTrackPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TrkBaseDict_220_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairTrackPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TrkBaseDict_220_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TrkBaseDict_220_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TrkBaseDict_220_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TrkBaseDict_220_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TrkBaseDict_220_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FairTrackPar", 1178, G__G__TrkBaseDict_220_0_46, (int) ('i'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar), -1, 0, 1, 1, 1, 0, "u 'FairTrackPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairTrackPar", 1304, G__G__TrkBaseDict_220_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TrkBaseDict_220_0_48, (int) ('u'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackPar), -1, 1, 1, 1, 1, 0, "u 'FairTrackPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairTrackParP(void) {
   /* FairTrackParP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP));
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_1, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_2, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - v d - 'Double_t' 0 - w "
"d - 'Double_t' 0 - Tv d - 'Double_t' 0 - Tw "
"d - 'Double_t' 0 - qp D - 'Double_t' 0 - CovMatrix "
"u 'TVector3' - 0 - o u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_3, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - v d - 'Double_t' 0 - w "
"d - 'Double_t' 0 - Tv d - 'Double_t' 0 - Tw "
"d - 'Double_t' 0 - qp D - 'Double_t' 0 - CovMatrix "
"u 'TVector3' - 0 - o u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk d - 'Double_t' 0 - spu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_4, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 8, 1, 1, 0, 
"u 'TVector3' - 0 - pos u 'TVector3' - 0 - Mom "
"u 'TVector3' - 0 - posErr u 'TVector3' - 0 - MomErr "
"i - 'Int_t' 0 - q u 'TVector3' - 0 - o "
"u 'TVector3' - 0 - dj u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_5, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 7, 1, 1, 0, 
"u 'TVector3' - 0 - pos u 'TVector3' - 0 - Mom "
"D - 'Double_t' 2 - covMARS i - 'Int_t' 0 - q "
"u 'TVector3' - 0 - o u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParP",1258,G__G__TrkBaseDict_221_0_6, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 4, 1, 1, 0, 
"U 'FairTrackParH' - 0 - helix u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk i - 'Int_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackPar",1092,G__G__TrkBaseDict_221_0_8, 121, -1, -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - X d - 'Double_t' 0 - Y "
"d - 'Double_t' 0 - Z d - 'Double_t' 0 - Px "
"d - 'Double_t' 0 - Py d - 'Double_t' 0 - Pz "
"i - 'Int_t' 0 - Q D - 'Double_t' 0 - CovMatrix "
"u 'TVector3' - 0 - o u 'TVector3' - 0 - di "
"u 'TVector3' - 0 - dj u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackPar",1092,G__G__TrkBaseDict_221_0_9, 121, -1, -1, 0, 11, 1, 1, 0, 
"d - 'Double_t' 0 - v d - 'Double_t' 0 - w "
"d - 'Double_t' 0 - Tv d - 'Double_t' 0 - Tw "
"d - 'Double_t' 0 - qp D - 'Double_t' 0 - CovMatrix "
"u 'TVector3' - 0 - o u 'TVector3' - 0 - di "
"u 'TVector3' - 0 - dj u 'TVector3' - 0 - dk "
"d - 'Double_t' 0 - spu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTV",470,G__G__TrkBaseDict_221_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTW",471,G__G__TrkBaseDict_221_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - tw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__TrkBaseDict_221_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TrkBaseDict_221_0_13, 85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairTrackParP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TrkBaseDict_221_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TrkBaseDict_221_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairTrackParP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TrkBaseDict_221_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairTrackParP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TrkBaseDict_221_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TrkBaseDict_221_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TrkBaseDict_221_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackParP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TrkBaseDict_221_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TrkBaseDict_221_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackParP::DeclFileLine) ), 0);
   G__memfunc_setup("GetMARSCov",891,G__G__TrkBaseDict_221_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 2 - Cov66", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__G__TrkBaseDict_221_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__G__TrkBaseDict_221_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - Cov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovQ",665,G__G__TrkBaseDict_221_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - CovQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV",374,G__G__TrkBaseDict_221_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetW",375,G__G__TrkBaseDict_221_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV",458,G__G__TrkBaseDict_221_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTW",459,G__G__TrkBaseDict_221_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDV",442,G__G__TrkBaseDict_221_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDW",443,G__G__TrkBaseDict_221_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTV",526,G__G__TrkBaseDict_221_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTW",527,G__G__TrkBaseDict_221_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSDMomentum",1289,G__G__TrkBaseDict_221_0_37, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrigin",904,G__G__TrkBaseDict_221_0_38, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVer",662,G__G__TrkBaseDict_221_0_39, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJVer",663,G__G__TrkBaseDict_221_0_40, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKVer",664,G__G__TrkBaseDict_221_0_41, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlane",796,G__G__TrkBaseDict_221_0_42, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 0 - o u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSPU",536,G__G__TrkBaseDict_221_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTransportMatrix",1902,G__G__TrkBaseDict_221_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 2 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransportMatrix",1890,G__G__TrkBaseDict_221_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 2 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalCov",568,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FairTrackParP", 1258, G__G__TrkBaseDict_221_0_47, (int) ('i'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 0, 1, 1, 1, 0, "u 'FairTrackParP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairTrackParP", 1384, G__G__TrkBaseDict_221_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TrkBaseDict_221_0_49, (int) ('u'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParP), -1, 1, 1, 1, 1, 0, "u 'FairTrackParP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairTrackParH(void) {
   /* FairTrackParH */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH));
   G__memfunc_setup("FairTrackParH",1250,G__G__TrkBaseDict_222_0_1, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParH",1250,G__G__TrkBaseDict_222_0_2, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - lambda "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - qp "
"D - 'Double_t' 0 - CovMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParH",1250,G__G__TrkBaseDict_222_0_3, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 5, 1, 1, 0, 
"u 'TVector3' - 0 - pos u 'TVector3' - 0 - Mom "
"u 'TVector3' - 0 - posErr u 'TVector3' - 0 - MomErr "
"i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParH",1250,G__G__TrkBaseDict_222_0_4, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 1, 1, 1, 0, "u 'FairTrackPar' - 1 - Trkbase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairTrackParH",1250,G__G__TrkBaseDict_222_0_5, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 2, 1, 1, 0, 
"U 'FairTrackParP' - 0 - parab i - 'Int_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLambda",865,G__G__TrkBaseDict_222_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__TrkBaseDict_222_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDLambda",933,G__G__TrkBaseDict_222_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get Error in Lambda*/", (void*) NULL, 0);
   G__memfunc_setup("GetDPhi",645,G__G__TrkBaseDict_222_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get Error in Phi*/", (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__G__TrkBaseDict_222_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - Cov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovQ",665,G__G__TrkBaseDict_222_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - CovQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMARSCov",891,G__G__TrkBaseDict_222_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 2 - Cov66", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDX_sc",753,G__G__TrkBaseDict_222_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get dx in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetDY_sc",754,G__G__TrkBaseDict_222_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get dy in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetDZ_sc",755,G__G__TrkBaseDict_222_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get dz in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetX_sc",685,G__G__TrkBaseDict_222_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get x in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetY_sc",686,G__G__TrkBaseDict_222_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get y in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetZ_sc",687,G__G__TrkBaseDict_222_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get z in SC*/", (void*) NULL, 0);
   G__memfunc_setup("GetX",376,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get X in Lab*/", (void*) NULL, 1);
   G__memfunc_setup("GetY",377,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get Y in Lab*/", (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "*Get Z in Lab*/", (void*) NULL, 1);
   G__memfunc_setup("SetLambda",877,G__G__TrkBaseDict_222_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Lm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__TrkBaseDict_222_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDLambda",945,G__G__TrkBaseDict_222_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - DLm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDPhi",657,G__G__TrkBaseDict_222_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - DPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX_sc",697,G__G__TrkBaseDict_222_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", "*Set x in SC*/", (void*) NULL, 0);
   G__memfunc_setup("SetY_sc",698,G__G__TrkBaseDict_222_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", "*Set y in SC*/", (void*) NULL, 0);
   G__memfunc_setup("SetZ_sc",699,G__G__TrkBaseDict_222_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", "*Set z in SC*/", (void*) NULL, 0);
   G__memfunc_setup("SetCov",596,G__G__TrkBaseDict_222_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - Cov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackPar",1092,G__G__TrkBaseDict_222_0_31, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - Px "
"d - 'Double_t' 0 - Py d - 'Double_t' 0 - Pz "
"i - 'Int_t' 0 - Q D - 'Double_t' 0 - CovMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackPar",1092,G__G__TrkBaseDict_222_0_32, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - pq "
"d - 'Double_t' 0 - lm d - 'Double_t' 0 - phi "
"D - 'Double_t' 0 - CovMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__TrkBaseDict_222_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TrkBaseDict_222_0_34, 85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairTrackParH::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TrkBaseDict_222_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParH::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TrkBaseDict_222_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairTrackParH::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TrkBaseDict_222_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairTrackParH::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TrkBaseDict_222_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TrkBaseDict_222_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParH::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TrkBaseDict_222_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackParH::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TrkBaseDict_222_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairTrackParH::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TrkBaseDict_222_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairTrackParH::DeclFileLine) ), 0);
   G__memfunc_setup("CalCov",568,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FairTrackParH", 1250, G__G__TrkBaseDict_222_0_47, (int) ('i'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 0, 1, 1, 1, 0, "u 'FairTrackParH' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairTrackParH", 1376, G__G__TrkBaseDict_222_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TrkBaseDict_222_0_49, (int) ('u'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairTrackParH), -1, 1, 1, 1, 1, 0, "u 'FairTrackParH' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairGeaneUtil(void) {
   /* FairGeaneUtil */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil));
   G__memfunc_setup("FairGeaneUtil",1280,G__G__TrkBaseDict_223_0_1, 105, G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromPtToSC",945,G__G__TrkBaseDict_223_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC "
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD "
"i - 'Int_t' 1 - IERR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromPtToSD",946,G__G__TrkBaseDict_223_0_3, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"d - 'Double_t' 0 - SPU D - 'Double_t' 0 - DJ "
"D - 'Double_t' 0 - DK i - 'Int_t' 1 - IERR "
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSCToPt",945,G__G__TrkBaseDict_223_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC "
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD "
"i - 'Int_t' 1 - IERR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSCToSD",900,G__G__TrkBaseDict_223_0_5, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"D - 'Double_t' 0 - DJ D - 'Double_t' 0 - DK "
"i - 'Int_t' 1 - IERR d - 'Double_t' 1 - SPU "
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSD1ToSD2",1000,G__G__TrkBaseDict_223_0_6, 121, -1, -1, 0, 13, 1, 1, 0, 
"D - 'Double_t' 0 - PD1 D - 'Double_t' 0 - RD1 "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"d - 'Double_t' 0 - SP1 D - 'Double_t' 0 - DJ1 "
"D - 'Double_t' 0 - DK1 D - 'Double_t' 0 - DJ2 "
"D - 'Double_t' 0 - DK2 i - 'Int_t' 1 - IERR "
"d - 'Double_t' 1 - SP2 D - 'Double_t' 0 - PD2 "
"D - 'Double_t' 0 - RD2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSDToPt",946,G__G__TrkBaseDict_223_0_7, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"d - 'Double_t' 0 - SPU D - 'Double_t' 0 - DJ "
"D - 'Double_t' 0 - DK i - 'Int_t' 1 - IERR "
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSDToSC",900,G__G__TrkBaseDict_223_0_8, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 0 - PD D - 'Double_t' 0 - RD "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"d - 'Double_t' 0 - SPU D - 'Double_t' 0 - DJ "
"D - 'Double_t' 0 - DK i - 'Int_t' 1 - IERR "
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSCToMars",1152,G__G__TrkBaseDict_223_0_9, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"D - 'Double_t' 0 - PD D - 'FairGeaneUtil::sixMat' 102 - RD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromMarsToSC",1152,G__G__TrkBaseDict_223_0_10, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 0 - PD D - 'Double_t' 2 - RD "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSDToMars",1153,G__G__TrkBaseDict_223_0_11, 121, -1, -1, 0, 9, 1, 1, 0, 
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"d - 'Double_t' 0 - SP1 D - 'Double_t' 0 - DJ1 "
"D - 'Double_t' 0 - DK1 D - 'Double_t' 0 - PD "
"D - 'FairGeaneUtil::sixMat' 102 - RD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromMarsToSD",1153,G__G__TrkBaseDict_223_0_12, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 0 - PD D - 'Double_t' 2 - RD "
"D - 'Double_t' 0 - H i - 'Int_t' 0 - CH "
"D - 'Double_t' 0 - DJ1 D - 'Double_t' 0 - DK1 "
"i - 'Int_t' 1 - IERR d - 'Double_t' 1 - SP1 "
"D - 'Double_t' 0 - PC D - 'Double_t' 0 - RC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromMat25ToVec15",1380,G__G__TrkBaseDict_223_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 2 - A D - 'Double_t' 0 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromMatToVec",1175,G__G__TrkBaseDict_223_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 2 - A D - 'Double_t' 0 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromVec15ToMat25",1380,G__G__TrkBaseDict_223_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - V D - 'FairGeaneUtil::fiveMat' 102 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromVecToMat",1175,G__G__TrkBaseDict_223_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'FairGeaneUtil::fiveMat' 102 - A D - 'Double_t' 0 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SymmProd",827,G__G__TrkBaseDict_223_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - A D - 'Double_t' 0 - S "
"D - 'Double_t' 0 - R", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromMARSToSDCoord",1560,G__G__TrkBaseDict_223_0_18, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 5, 1, 1, 0, 
"u 'TVector3' - 0 - xyz u 'TVector3' - 0 - o "
"u 'TVector3' - 0 - di u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSDToMARSCoord",1560,G__G__TrkBaseDict_223_0_19, 117, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TVector3), -1, 0, 5, 1, 1, 0, 
"u 'TVector3' - 0 - uvw u 'TVector3' - 0 - o "
"u 'TVector3' - 0 - di u 'TVector3' - 0 - dj "
"u 'TVector3' - 0 - dk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TrkBaseDict_223_0_20, 85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairGeaneUtil::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TrkBaseDict_223_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGeaneUtil::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TrkBaseDict_223_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairGeaneUtil::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TrkBaseDict_223_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairGeaneUtil::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TrkBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TrkBaseDict_223_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TrkBaseDict_223_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGeaneUtil::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TrkBaseDict_223_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGeaneUtil::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TrkBaseDict_223_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGeaneUtil::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TrkBaseDict_223_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGeaneUtil::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FairGeaneUtil", 1280, G__G__TrkBaseDict_223_0_32, (int) ('i'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil), -1, 0, 1, 1, 1, 0, "u 'FairGeaneUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairGeaneUtil", 1406, G__G__TrkBaseDict_223_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TrkBaseDict_223_0_34, (int) ('u'), G__get_linked_tagnum(&G__G__TrkBaseDictLN_FairGeaneUtil), -1, 1, 1, 1, 1, 0, "u 'FairGeaneUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__TrkBaseDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__TrkBaseDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__TrkBaseDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__TrkBaseDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_FairTrackPar = { "FairTrackPar" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_FairTrackParP = { "FairTrackParP" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_FairTrackParH = { "FairTrackParH" , 99 , -1 };
G__linked_taginfo G__G__TrkBaseDictLN_FairGeaneUtil = { "FairGeaneUtil" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__TrkBaseDict() {
  G__G__TrkBaseDictLN_TClass.tagnum = -1 ;
  G__G__TrkBaseDictLN_TBuffer.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMemberInspector.tagnum = -1 ;
  G__G__TrkBaseDictLN_TObject.tagnum = -1 ;
  G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__TrkBaseDictLN_TVector3.tagnum = -1 ;
  G__G__TrkBaseDictLN_FairTrackPar.tagnum = -1 ;
  G__G__TrkBaseDictLN_FairTrackParP.tagnum = -1 ;
  G__G__TrkBaseDictLN_FairTrackParH.tagnum = -1 ;
  G__G__TrkBaseDictLN_FairGeaneUtil.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__TrkBaseDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_FairTrackPar),sizeof(FairTrackPar),-1,324864,(char*)NULL,G__setup_memvarFairTrackPar,G__setup_memfuncFairTrackPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_FairTrackParP),sizeof(FairTrackParP),-1,324864,(char*)NULL,G__setup_memvarFairTrackParP,G__setup_memfuncFairTrackParP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_FairTrackParH),sizeof(FairTrackParH),-1,324864,(char*)NULL,G__setup_memvarFairTrackParH,G__setup_memfuncFairTrackParH);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__TrkBaseDictLN_FairGeaneUtil),sizeof(FairGeaneUtil),-1,292096,(char*)NULL,G__setup_memvarFairGeaneUtil,G__setup_memfuncFairGeaneUtil);
}
extern "C" void G__cpp_setupG__TrkBaseDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__TrkBaseDict()");
  G__set_cpp_environmentG__TrkBaseDict();
  G__cpp_setup_tagtableG__TrkBaseDict();

  G__cpp_setup_inheritanceG__TrkBaseDict();

  G__cpp_setup_typetableG__TrkBaseDict();

  G__cpp_setup_memvarG__TrkBaseDict();

  G__cpp_setup_memfuncG__TrkBaseDict();
  G__cpp_setup_globalG__TrkBaseDict();
  G__cpp_setup_funcG__TrkBaseDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__TrkBaseDict();
  return;
}
class G__cpp_setup_initG__TrkBaseDict {
  public:
    G__cpp_setup_initG__TrkBaseDict() { G__add_setup_func("G__TrkBaseDict",(G__incsetup)(&G__cpp_setupG__TrkBaseDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__TrkBaseDict() { G__remove_setup_func("G__TrkBaseDict"); }
};
G__cpp_setup_initG__TrkBaseDict G__cpp_setup_initializerG__TrkBaseDict;

