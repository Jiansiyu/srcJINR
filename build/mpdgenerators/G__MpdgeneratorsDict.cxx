//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:02:35 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddImpdgeneratorsdIG__MpdgeneratorsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MpdgeneratorsDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MpdMCEventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdMCEventHeader(void *p = 0);
   static void *newArray_MpdMCEventHeader(Long_t size, void *p);
   static void delete_MpdMCEventHeader(void *p);
   static void deleteArray_MpdMCEventHeader(void *p);
   static void destruct_MpdMCEventHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdMCEventHeader*)
   {
      ::MpdMCEventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdMCEventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdMCEventHeader", ::MpdMCEventHeader::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdMCEventHeader.h", 13,
                  typeid(::MpdMCEventHeader), DefineBehavior(ptr, ptr),
                  &::MpdMCEventHeader::Dictionary, isa_proxy, 4,
                  sizeof(::MpdMCEventHeader) );
      instance.SetNew(&new_MpdMCEventHeader);
      instance.SetNewArray(&newArray_MpdMCEventHeader);
      instance.SetDelete(&delete_MpdMCEventHeader);
      instance.SetDeleteArray(&deleteArray_MpdMCEventHeader);
      instance.SetDestructor(&destruct_MpdMCEventHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdMCEventHeader*)
   {
      return GenerateInitInstanceLocal((::MpdMCEventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdMCEventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdLAQGSMGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdLAQGSMGenerator(void *p = 0);
   static void *newArray_MpdLAQGSMGenerator(Long_t size, void *p);
   static void delete_MpdLAQGSMGenerator(void *p);
   static void deleteArray_MpdLAQGSMGenerator(void *p);
   static void destruct_MpdLAQGSMGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdLAQGSMGenerator*)
   {
      ::MpdLAQGSMGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdLAQGSMGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdLAQGSMGenerator", ::MpdLAQGSMGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdLAQGSMGenerator.h", 27,
                  typeid(::MpdLAQGSMGenerator), DefineBehavior(ptr, ptr),
                  &::MpdLAQGSMGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdLAQGSMGenerator) );
      instance.SetNew(&new_MpdLAQGSMGenerator);
      instance.SetNewArray(&newArray_MpdLAQGSMGenerator);
      instance.SetDelete(&delete_MpdLAQGSMGenerator);
      instance.SetDeleteArray(&deleteArray_MpdLAQGSMGenerator);
      instance.SetDestructor(&destruct_MpdLAQGSMGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdLAQGSMGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdLAQGSMGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdLAQGSMGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdHypYPtGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdHypYPtGenerator(void *p = 0);
   static void *newArray_MpdHypYPtGenerator(Long_t size, void *p);
   static void delete_MpdHypYPtGenerator(void *p);
   static void deleteArray_MpdHypYPtGenerator(void *p);
   static void destruct_MpdHypYPtGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdHypYPtGenerator*)
   {
      ::MpdHypYPtGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdHypYPtGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdHypYPtGenerator", ::MpdHypYPtGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdHypYPtGenerator.h", 28,
                  typeid(::MpdHypYPtGenerator), DefineBehavior(ptr, ptr),
                  &::MpdHypYPtGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdHypYPtGenerator) );
      instance.SetNew(&new_MpdHypYPtGenerator);
      instance.SetNewArray(&newArray_MpdHypYPtGenerator);
      instance.SetDelete(&delete_MpdHypYPtGenerator);
      instance.SetDeleteArray(&deleteArray_MpdHypYPtGenerator);
      instance.SetDestructor(&destruct_MpdHypYPtGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdHypYPtGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdHypYPtGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdHypYPtGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdRainGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdRainGenerator(void *p = 0);
   static void *newArray_MpdRainGenerator(Long_t size, void *p);
   static void delete_MpdRainGenerator(void *p);
   static void deleteArray_MpdRainGenerator(void *p);
   static void destruct_MpdRainGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdRainGenerator*)
   {
      ::MpdRainGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdRainGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdRainGenerator", ::MpdRainGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdRainGenerator.h", 12,
                  typeid(::MpdRainGenerator), DefineBehavior(ptr, ptr),
                  &::MpdRainGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdRainGenerator) );
      instance.SetNew(&new_MpdRainGenerator);
      instance.SetNewArray(&newArray_MpdRainGenerator);
      instance.SetDelete(&delete_MpdRainGenerator);
      instance.SetDeleteArray(&deleteArray_MpdRainGenerator);
      instance.SetDestructor(&destruct_MpdRainGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdRainGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdRainGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdRainGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdPlutoGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdPlutoGenerator(void *p = 0);
   static void *newArray_MpdPlutoGenerator(Long_t size, void *p);
   static void delete_MpdPlutoGenerator(void *p);
   static void deleteArray_MpdPlutoGenerator(void *p);
   static void destruct_MpdPlutoGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdPlutoGenerator*)
   {
      ::MpdPlutoGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdPlutoGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdPlutoGenerator", ::MpdPlutoGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdPlutoGenerator.h", 32,
                  typeid(::MpdPlutoGenerator), DefineBehavior(ptr, ptr),
                  &::MpdPlutoGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdPlutoGenerator) );
      instance.SetNew(&new_MpdPlutoGenerator);
      instance.SetNewArray(&newArray_MpdPlutoGenerator);
      instance.SetDelete(&delete_MpdPlutoGenerator);
      instance.SetDeleteArray(&deleteArray_MpdPlutoGenerator);
      instance.SetDestructor(&destruct_MpdPlutoGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdPlutoGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdPlutoGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdPlutoGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdPHSDGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdPHSDGenerator(void *p = 0);
   static void *newArray_MpdPHSDGenerator(Long_t size, void *p);
   static void delete_MpdPHSDGenerator(void *p);
   static void deleteArray_MpdPHSDGenerator(void *p);
   static void destruct_MpdPHSDGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdPHSDGenerator*)
   {
      ::MpdPHSDGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdPHSDGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdPHSDGenerator", ::MpdPHSDGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdPHSDGenerator.h", 19,
                  typeid(::MpdPHSDGenerator), DefineBehavior(ptr, ptr),
                  &::MpdPHSDGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdPHSDGenerator) );
      instance.SetNew(&new_MpdPHSDGenerator);
      instance.SetNewArray(&newArray_MpdPHSDGenerator);
      instance.SetDelete(&delete_MpdPHSDGenerator);
      instance.SetDeleteArray(&deleteArray_MpdPHSDGenerator);
      instance.SetDestructor(&destruct_MpdPHSDGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdPHSDGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdPHSDGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdPHSDGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdUrqmdGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdUrqmdGenerator(void *p = 0);
   static void *newArray_MpdUrqmdGenerator(Long_t size, void *p);
   static void delete_MpdUrqmdGenerator(void *p);
   static void deleteArray_MpdUrqmdGenerator(void *p);
   static void destruct_MpdUrqmdGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdUrqmdGenerator*)
   {
      ::MpdUrqmdGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdUrqmdGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdUrqmdGenerator", ::MpdUrqmdGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdUrqmdGenerator.h", 34,
                  typeid(::MpdUrqmdGenerator), DefineBehavior(ptr, ptr),
                  &::MpdUrqmdGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdUrqmdGenerator) );
      instance.SetNew(&new_MpdUrqmdGenerator);
      instance.SetNewArray(&newArray_MpdUrqmdGenerator);
      instance.SetDelete(&delete_MpdUrqmdGenerator);
      instance.SetDeleteArray(&deleteArray_MpdUrqmdGenerator);
      instance.SetDestructor(&destruct_MpdUrqmdGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdUrqmdGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdUrqmdGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdUrqmdGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdLibZ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MpdLibZ(void *p);
   static void deleteArray_MpdLibZ(void *p);
   static void destruct_MpdLibZ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdLibZ*)
   {
      ::MpdLibZ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdLibZ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdLibZ", ::MpdLibZ::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdGetNumEvents.h", 6,
                  typeid(::MpdLibZ), DefineBehavior(ptr, ptr),
                  &::MpdLibZ::Dictionary, isa_proxy, 4,
                  sizeof(::MpdLibZ) );
      instance.SetDelete(&delete_MpdLibZ);
      instance.SetDeleteArray(&deleteArray_MpdLibZ);
      instance.SetDestructor(&destruct_MpdLibZ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdLibZ*)
   {
      return GenerateInitInstanceLocal((::MpdLibZ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdLibZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdGetNumEvents_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdGetNumEvents*)
   {
      ::MpdGetNumEvents *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdGetNumEvents >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdGetNumEvents", ::MpdGetNumEvents::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdGetNumEvents.h", 29,
                  typeid(::MpdGetNumEvents), DefineBehavior(ptr, ptr),
                  &::MpdGetNumEvents::Dictionary, isa_proxy, 4,
                  sizeof(::MpdGetNumEvents) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdGetNumEvents*)
   {
      return GenerateInitInstanceLocal((::MpdGetNumEvents*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdGetNumEvents*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MpdHistoGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MpdHistoGenerator(void *p = 0);
   static void *newArray_MpdHistoGenerator(Long_t size, void *p);
   static void delete_MpdHistoGenerator(void *p);
   static void deleteArray_MpdHistoGenerator(void *p);
   static void destruct_MpdHistoGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MpdHistoGenerator*)
   {
      ::MpdHistoGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MpdHistoGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MpdHistoGenerator", ::MpdHistoGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/mpdgenerators/MpdHistoGenerator.h", 26,
                  typeid(::MpdHistoGenerator), DefineBehavior(ptr, ptr),
                  &::MpdHistoGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MpdHistoGenerator) );
      instance.SetNew(&new_MpdHistoGenerator);
      instance.SetNewArray(&newArray_MpdHistoGenerator);
      instance.SetDelete(&delete_MpdHistoGenerator);
      instance.SetDeleteArray(&deleteArray_MpdHistoGenerator);
      instance.SetDestructor(&destruct_MpdHistoGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MpdHistoGenerator*)
   {
      return GenerateInitInstanceLocal((::MpdHistoGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MpdHistoGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MpdMCEventHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdMCEventHeader::Class_Name()
{
   return "MpdMCEventHeader";
}

//______________________________________________________________________________
const char *MpdMCEventHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdMCEventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdMCEventHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdMCEventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdMCEventHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdMCEventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdMCEventHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdMCEventHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdLAQGSMGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdLAQGSMGenerator::Class_Name()
{
   return "MpdLAQGSMGenerator";
}

//______________________________________________________________________________
const char *MpdLAQGSMGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdLAQGSMGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdLAQGSMGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdLAQGSMGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdLAQGSMGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdLAQGSMGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdLAQGSMGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdLAQGSMGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdHypYPtGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdHypYPtGenerator::Class_Name()
{
   return "MpdHypYPtGenerator";
}

//______________________________________________________________________________
const char *MpdHypYPtGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdHypYPtGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdHypYPtGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdHypYPtGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdHypYPtGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdHypYPtGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdHypYPtGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdHypYPtGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdRainGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdRainGenerator::Class_Name()
{
   return "MpdRainGenerator";
}

//______________________________________________________________________________
const char *MpdRainGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdRainGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdRainGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdRainGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdRainGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdRainGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdRainGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdRainGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdPlutoGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdPlutoGenerator::Class_Name()
{
   return "MpdPlutoGenerator";
}

//______________________________________________________________________________
const char *MpdPlutoGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdPlutoGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdPlutoGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdPlutoGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdPlutoGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdPlutoGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdPlutoGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdPlutoGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdPHSDGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdPHSDGenerator::Class_Name()
{
   return "MpdPHSDGenerator";
}

//______________________________________________________________________________
const char *MpdPHSDGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdPHSDGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdPHSDGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdPHSDGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdPHSDGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdPHSDGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdPHSDGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdPHSDGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdUrqmdGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdUrqmdGenerator::Class_Name()
{
   return "MpdUrqmdGenerator";
}

//______________________________________________________________________________
const char *MpdUrqmdGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdUrqmdGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdUrqmdGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdUrqmdGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdUrqmdGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdUrqmdGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdUrqmdGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdUrqmdGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdLibZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdLibZ::Class_Name()
{
   return "MpdLibZ";
}

//______________________________________________________________________________
const char *MpdLibZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdLibZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdLibZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdLibZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdLibZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdLibZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdLibZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdLibZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdGetNumEvents::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdGetNumEvents::Class_Name()
{
   return "MpdGetNumEvents";
}

//______________________________________________________________________________
const char *MpdGetNumEvents::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdGetNumEvents*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdGetNumEvents::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdGetNumEvents*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdGetNumEvents::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdGetNumEvents*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdGetNumEvents::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdGetNumEvents*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MpdHistoGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MpdHistoGenerator::Class_Name()
{
   return "MpdHistoGenerator";
}

//______________________________________________________________________________
const char *MpdHistoGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdHistoGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MpdHistoGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MpdHistoGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MpdHistoGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdHistoGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MpdHistoGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MpdHistoGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MpdMCEventHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdMCEventHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdMCEventHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdMCEventHeader::Class(),this);
   }
}

//______________________________________________________________________________
void MpdMCEventHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdMCEventHeader.
      TClass *R__cl = ::MpdMCEventHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      FairMCEventHeader::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdMCEventHeader(void *p) {
      return  p ? new(p) ::MpdMCEventHeader : new ::MpdMCEventHeader;
   }
   static void *newArray_MpdMCEventHeader(Long_t nElements, void *p) {
      return p ? new(p) ::MpdMCEventHeader[nElements] : new ::MpdMCEventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdMCEventHeader(void *p) {
      delete ((::MpdMCEventHeader*)p);
   }
   static void deleteArray_MpdMCEventHeader(void *p) {
      delete [] ((::MpdMCEventHeader*)p);
   }
   static void destruct_MpdMCEventHeader(void *p) {
      typedef ::MpdMCEventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdMCEventHeader

//______________________________________________________________________________
void MpdLAQGSMGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdLAQGSMGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdLAQGSMGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdLAQGSMGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdLAQGSMGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdLAQGSMGenerator.
      TClass *R__cl = ::MpdLAQGSMGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQGSM_format_ID", &fQGSM_format_ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseColliderSystem", &fUseColliderSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLa_tab", (void*)&fLa_tab);
      R__insp.InspectMember("vector<la_tab_t*>", (void*)&fLa_tab, "fLa_tab.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIonMap", (void*)&fIonMap);
      R__insp.InspectMember("map<TString,FairIon*>", (void*)&fIonMap, "fIonMap.", true);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdLAQGSMGenerator(void *p) {
      return  p ? new(p) ::MpdLAQGSMGenerator : new ::MpdLAQGSMGenerator;
   }
   static void *newArray_MpdLAQGSMGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdLAQGSMGenerator[nElements] : new ::MpdLAQGSMGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdLAQGSMGenerator(void *p) {
      delete ((::MpdLAQGSMGenerator*)p);
   }
   static void deleteArray_MpdLAQGSMGenerator(void *p) {
      delete [] ((::MpdLAQGSMGenerator*)p);
   }
   static void destruct_MpdLAQGSMGenerator(void *p) {
      typedef ::MpdLAQGSMGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdLAQGSMGenerator

//______________________________________________________________________________
void MpdHypYPtGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdHypYPtGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdHypYPtGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdHypYPtGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdHypYPtGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdHypYPtGenerator.
      TClass *R__cl = ::MpdHypYPtGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGType", &fPDGType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY0", &fY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigma", &fSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtMin", &fPtMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtMax", &fPtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGMass", &fPDGMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDistPt", &fDistPt);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdHypYPtGenerator(void *p) {
      return  p ? new(p) ::MpdHypYPtGenerator : new ::MpdHypYPtGenerator;
   }
   static void *newArray_MpdHypYPtGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdHypYPtGenerator[nElements] : new ::MpdHypYPtGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdHypYPtGenerator(void *p) {
      delete ((::MpdHypYPtGenerator*)p);
   }
   static void deleteArray_MpdHypYPtGenerator(void *p) {
      delete [] ((::MpdHypYPtGenerator*)p);
   }
   static void destruct_MpdHypYPtGenerator(void *p) {
      typedef ::MpdHypYPtGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdHypYPtGenerator

//______________________________________________________________________________
void MpdPlutoGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdPlutoGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdPlutoGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdPlutoGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdPlutoGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdPlutoGenerator.
      TClass *R__cl = ::MpdPlutoGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEkin", &fEkin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputTree", &fInputTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdPlutoGenerator(void *p) {
      return  p ? new(p) ::MpdPlutoGenerator : new ::MpdPlutoGenerator;
   }
   static void *newArray_MpdPlutoGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdPlutoGenerator[nElements] : new ::MpdPlutoGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdPlutoGenerator(void *p) {
      delete ((::MpdPlutoGenerator*)p);
   }
   static void deleteArray_MpdPlutoGenerator(void *p) {
      delete [] ((::MpdPlutoGenerator*)p);
   }
   static void destruct_MpdPlutoGenerator(void *p) {
      typedef ::MpdPlutoGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdPlutoGenerator

//______________________________________________________________________________
void MpdRainGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdRainGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdRainGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdRainGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdRainGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdRainGenerator.
      TClass *R__cl = ::MpdRainGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PDGType", &_PDGType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_N", &_N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_p", &_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_theta", &_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_phi", &_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_height", &_height);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_d", &_d);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdRainGenerator(void *p) {
      return  p ? new(p) ::MpdRainGenerator : new ::MpdRainGenerator;
   }
   static void *newArray_MpdRainGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdRainGenerator[nElements] : new ::MpdRainGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdRainGenerator(void *p) {
      delete ((::MpdRainGenerator*)p);
   }
   static void deleteArray_MpdRainGenerator(void *p) {
      delete [] ((::MpdRainGenerator*)p);
   }
   static void destruct_MpdRainGenerator(void *p) {
      typedef ::MpdRainGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdRainGenerator

//______________________________________________________________________________
void MpdPHSDGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdPHSDGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdPHSDGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdPHSDGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdPHSDGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdPHSDGenerator.
      TClass *R__cl = ::MpdPHSDGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fntr", &fntr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fb", &fb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fgzFile", &fgzFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbuffer[256]", fbuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*frandom", &frandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsiRP", &fPsiRP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisRP", &fisRP);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdPHSDGenerator(void *p) {
      return  p ? new(p) ::MpdPHSDGenerator : new ::MpdPHSDGenerator;
   }
   static void *newArray_MpdPHSDGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdPHSDGenerator[nElements] : new ::MpdPHSDGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdPHSDGenerator(void *p) {
      delete ((::MpdPHSDGenerator*)p);
   }
   static void deleteArray_MpdPHSDGenerator(void *p) {
      delete [] ((::MpdPHSDGenerator*)p);
   }
   static void destruct_MpdPHSDGenerator(void *p) {
      typedef ::MpdPHSDGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdPHSDGenerator

//______________________________________________________________________________
void MpdUrqmdGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdUrqmdGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdUrqmdGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdUrqmdGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdUrqmdGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdUrqmdGenerator.
      TClass *R__cl = ::MpdUrqmdGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParticleTable", (void*)&fParticleTable);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&fParticleTable, "fParticleTable.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdUrqmdGenerator(void *p) {
      return  p ? new(p) ::MpdUrqmdGenerator : new ::MpdUrqmdGenerator;
   }
   static void *newArray_MpdUrqmdGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdUrqmdGenerator[nElements] : new ::MpdUrqmdGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdUrqmdGenerator(void *p) {
      delete ((::MpdUrqmdGenerator*)p);
   }
   static void deleteArray_MpdUrqmdGenerator(void *p) {
      delete [] ((::MpdUrqmdGenerator*)p);
   }
   static void destruct_MpdUrqmdGenerator(void *p) {
      typedef ::MpdUrqmdGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdUrqmdGenerator

//______________________________________________________________________________
void MpdLibZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdLibZ.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdLibZ::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdLibZ::Class(),this);
   }
}

//______________________________________________________________________________
void MpdLibZ::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdLibZ.
      TClass *R__cl = ::MpdLibZ::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileName", &fileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MpdLibZ(void *p) {
      delete ((::MpdLibZ*)p);
   }
   static void deleteArray_MpdLibZ(void *p) {
      delete [] ((::MpdLibZ*)p);
   }
   static void destruct_MpdLibZ(void *p) {
      typedef ::MpdLibZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdLibZ

//______________________________________________________________________________
void MpdGetNumEvents::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdGetNumEvents.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdGetNumEvents::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdGetNumEvents::Class(),this);
   }
}

//______________________________________________________________________________
void MpdGetNumEvents::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdGetNumEvents.
      TClass *R__cl = ::MpdGetNumEvents::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOT {
} // end of namespace ROOT for class ::MpdGetNumEvents

//______________________________________________________________________________
void MpdHistoGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MpdHistoGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MpdHistoGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MpdHistoGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MpdHistoGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MpdHistoGenerator.
      TClass *R__cl = ::MpdHistoGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdgCode", &fPdgCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHist", &fHist);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MpdHistoGenerator(void *p) {
      return  p ? new(p) ::MpdHistoGenerator : new ::MpdHistoGenerator;
   }
   static void *newArray_MpdHistoGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MpdHistoGenerator[nElements] : new ::MpdHistoGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MpdHistoGenerator(void *p) {
      delete ((::MpdHistoGenerator*)p);
   }
   static void deleteArray_MpdHistoGenerator(void *p) {
      delete [] ((::MpdHistoGenerator*)p);
   }
   static void destruct_MpdHistoGenerator(void *p) {
      typedef ::MpdHistoGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MpdHistoGenerator

namespace ROOT {
   void maplETStringcOFairIonmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOFairIonmUgR_Dictionary();
   static void *new_maplETStringcOFairIonmUgR(void *p = 0);
   static void *newArray_maplETStringcOFairIonmUgR(Long_t size, void *p);
   static void delete_maplETStringcOFairIonmUgR(void *p);
   static void deleteArray_maplETStringcOFairIonmUgR(void *p);
   static void destruct_maplETStringcOFairIonmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,FairIon*>*)
   {
      map<TString,FairIon*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,FairIon*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,FairIon*>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,FairIon*>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOFairIonmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,FairIon*>) );
      instance.SetNew(&new_maplETStringcOFairIonmUgR);
      instance.SetNewArray(&newArray_maplETStringcOFairIonmUgR);
      instance.SetDelete(&delete_maplETStringcOFairIonmUgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOFairIonmUgR);
      instance.SetDestructor(&destruct_maplETStringcOFairIonmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,FairIon*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,FairIon*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOFairIonmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,FairIon*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOFairIonmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,FairIon*> : new map<TString,FairIon*>;
   }
   static void *newArray_maplETStringcOFairIonmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,FairIon*>[nElements] : new map<TString,FairIon*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOFairIonmUgR(void *p) {
      delete ((map<TString,FairIon*>*)p);
   }
   static void deleteArray_maplETStringcOFairIonmUgR(void *p) {
      delete [] ((map<TString,FairIon*>*)p);
   }
   static void destruct_maplETStringcOFairIonmUgR(void *p) {
      typedef map<TString,FairIon*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,FairIon*>

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/mpdgenerators/G__MpdgeneratorsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MpdgeneratorsDict();

extern "C" void G__set_cpp_environmentG__MpdgeneratorsDict() {
  G__cpp_reset_tagtableG__MpdgeneratorsDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__MpdgeneratorsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MpdMCEventHeader */
static int G__G__MpdgeneratorsDict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdMCEventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdMCEventHeader[n];
     } else {
       p = new((void*) gvp) MpdMCEventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdMCEventHeader;
     } else {
       p = new((void*) gvp) MpdMCEventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdMCEventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdMCEventHeader(
(UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) MpdMCEventHeader(
(UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdMCEventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdMCEventHeader((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MpdMCEventHeader((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MpdMCEventHeader*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdMCEventHeader*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdMCEventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdMCEventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdMCEventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdMCEventHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdMCEventHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdMCEventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdMCEventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdMCEventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdMCEventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MpdgeneratorsDict_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MpdMCEventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MpdMCEventHeader(*(MpdMCEventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdMCEventHeader G__TMpdMCEventHeader;
static int G__G__MpdgeneratorsDict_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdMCEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdMCEventHeader*) (soff+(sizeof(MpdMCEventHeader)*i)))->~G__TMpdMCEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdMCEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdMCEventHeader*) (soff))->~G__TMpdMCEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MpdgeneratorsDict_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdMCEventHeader* dest = (MpdMCEventHeader*) G__getstructoffset();
   *dest = *(MpdMCEventHeader*) libp->para[0].ref;
   const MpdMCEventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdLAQGSMGenerator */
static int G__G__MpdgeneratorsDict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdLAQGSMGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdLAQGSMGenerator[n];
     } else {
       p = new((void*) gvp) MpdLAQGSMGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdLAQGSMGenerator;
     } else {
       p = new((void*) gvp) MpdLAQGSMGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdLAQGSMGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdLAQGSMGenerator(
(const char*) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MpdLAQGSMGenerator(
(const char*) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdLAQGSMGenerator((const char*) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MpdLAQGSMGenerator((const char*) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdLAQGSMGenerator((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MpdLAQGSMGenerator((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MpdLAQGSMGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MpdLAQGSMGenerator*) G__getstructoffset())->Init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MpdLAQGSMGenerator*) G__getstructoffset())->GetEventHeader((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MpdLAQGSMGenerator*) G__getstructoffset())->SkipEvents((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdLAQGSMGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLAQGSMGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdLAQGSMGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdLAQGSMGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdLAQGSMGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLAQGSMGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdLAQGSMGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLAQGSMGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_461_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdLAQGSMGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdLAQGSMGenerator G__TMpdLAQGSMGenerator;
static int G__G__MpdgeneratorsDict_461_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdLAQGSMGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdLAQGSMGenerator*) (soff+(sizeof(MpdLAQGSMGenerator)*i)))->~G__TMpdLAQGSMGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdLAQGSMGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdLAQGSMGenerator*) (soff))->~G__TMpdLAQGSMGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > */
static int G__G__MpdgeneratorsDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >[n];
     } else {
       p = new((void*) gvp) map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >;
     } else {
       p = new((void*) gvp) map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >(*(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >& obj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->operator=(*(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->begin();
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->end();
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->rbegin();
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->rend();
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         FairIon*& obj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->operator[](*(TString*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator,bool>* pobj;
         pair<map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator,bool> xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->insert(*(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->insert(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])), *(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::value_type*) libp->para[1].ref);
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->insert(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->insert(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->erase(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->erase(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->erase(*((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[0])), *((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->swap(*(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->count(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->lower_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_471_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator* pobj;
         map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator xobj = ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) G__getstructoffset())->upper_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > G__TmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR;
static int G__G__MpdgeneratorsDict_471_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) (soff+(sizeof(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >)*i)))->~G__TmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*) (soff))->~G__TmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdHypYPtGenerator */
static int G__G__MpdgeneratorsDict_505_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdHypYPtGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHypYPtGenerator[n];
     } else {
       p = new((void*) gvp) MpdHypYPtGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHypYPtGenerator;
     } else {
       p = new((void*) gvp) MpdHypYPtGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdHypYPtGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHypYPtGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MpdHypYPtGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHypYPtGenerator((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MpdHypYPtGenerator((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetPDGType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetDistributionPt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetDistributionPt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetDistributionY((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetDistributionY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetDistributionY();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetRangePt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetRangePt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MpdHypYPtGenerator*) G__getstructoffset())->SetRangePt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdHypYPtGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHypYPtGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdHypYPtGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdHypYPtGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdHypYPtGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHypYPtGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdHypYPtGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHypYPtGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_505_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdHypYPtGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdHypYPtGenerator G__TMpdHypYPtGenerator;
static int G__G__MpdgeneratorsDict_505_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdHypYPtGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdHypYPtGenerator*) (soff+(sizeof(MpdHypYPtGenerator)*i)))->~G__TMpdHypYPtGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdHypYPtGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdHypYPtGenerator*) (soff))->~G__TMpdHypYPtGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdRainGenerator */
static int G__G__MpdgeneratorsDict_506_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdRainGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdRainGenerator[n];
     } else {
       p = new((void*) gvp) MpdRainGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdRainGenerator;
     } else {
       p = new((void*) gvp) MpdRainGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdRainGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdRainGenerator(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) MpdRainGenerator(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdRainGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdRainGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdRainGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdRainGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdRainGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdRainGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdRainGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdRainGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_506_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdRainGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdRainGenerator G__TMpdRainGenerator;
static int G__G__MpdgeneratorsDict_506_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdRainGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdRainGenerator*) (soff+(sizeof(MpdRainGenerator)*i)))->~G__TMpdRainGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdRainGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdRainGenerator*) (soff))->~G__TMpdRainGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdPlutoGenerator */
static int G__G__MpdgeneratorsDict_510_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdPlutoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdPlutoGenerator[n];
     } else {
       p = new((void*) gvp) MpdPlutoGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdPlutoGenerator;
     } else {
       p = new((void*) gvp) MpdPlutoGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdPlutoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdPlutoGenerator((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) MpdPlutoGenerator((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MpdPlutoGenerator*) G__getstructoffset())->SkipEvents((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdPlutoGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPlutoGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdPlutoGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdPlutoGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdPlutoGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPlutoGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdPlutoGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPlutoGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_510_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdPlutoGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdPlutoGenerator G__TMpdPlutoGenerator;
static int G__G__MpdgeneratorsDict_510_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdPlutoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdPlutoGenerator*) (soff+(sizeof(MpdPlutoGenerator)*i)))->~G__TMpdPlutoGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdPlutoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdPlutoGenerator*) (soff))->~G__TMpdPlutoGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdPHSDGenerator */
static int G__G__MpdgeneratorsDict_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdPHSDGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdPHSDGenerator[n];
     } else {
       p = new((void*) gvp) MpdPHSDGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdPHSDGenerator;
     } else {
       p = new((void*) gvp) MpdPHSDGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdPHSDGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdPHSDGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MpdPHSDGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MpdPHSDGenerator*) G__getstructoffset())->SkipEvents((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdPHSDGenerator*) G__getstructoffset())->SetPsiRP((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdPHSDGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPHSDGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdPHSDGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdPHSDGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdPHSDGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPHSDGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdPHSDGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdPHSDGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_525_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdPHSDGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdPHSDGenerator G__TMpdPHSDGenerator;
static int G__G__MpdgeneratorsDict_525_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdPHSDGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdPHSDGenerator*) (soff+(sizeof(MpdPHSDGenerator)*i)))->~G__TMpdPHSDGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdPHSDGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdPHSDGenerator*) (soff))->~G__TMpdPHSDGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdUrqmdGenerator */
static int G__G__MpdgeneratorsDict_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdUrqmdGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdUrqmdGenerator[n];
     } else {
       p = new((void*) gvp) MpdUrqmdGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdUrqmdGenerator;
     } else {
       p = new((void*) gvp) MpdUrqmdGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdUrqmdGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdUrqmdGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MpdUrqmdGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MpdUrqmdGenerator*) G__getstructoffset())->SkipEvents((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdUrqmdGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdUrqmdGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdUrqmdGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdUrqmdGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdUrqmdGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdUrqmdGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdUrqmdGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdUrqmdGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_526_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdUrqmdGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdUrqmdGenerator G__TMpdUrqmdGenerator;
static int G__G__MpdgeneratorsDict_526_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdUrqmdGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdUrqmdGenerator*) (soff+(sizeof(MpdUrqmdGenerator)*i)))->~G__TMpdUrqmdGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdUrqmdGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdUrqmdGenerator*) (soff))->~G__TMpdUrqmdGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdLibZ */
static int G__G__MpdgeneratorsDict_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdLibZ* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MpdLibZ((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MpdLibZ((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->eof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->write((voidpc) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->read((voidp) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((MpdLibZ*) G__getstructoffset())->gets((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MpdLibZ*) G__getstructoffset())->puts((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((MpdLibZ*) G__getstructoffset())->tell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((MpdLibZ*) G__getstructoffset())->seek((off_t) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdLibZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLibZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdLibZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdLibZ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MpdLibZ*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdLibZ*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdLibZ*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdLibZ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLibZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdLibZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdLibZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_552_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdLibZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MpdgeneratorsDict_552_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MpdLibZ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MpdLibZ(*(MpdLibZ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdLibZ G__TMpdLibZ;
static int G__G__MpdgeneratorsDict_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdLibZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdLibZ*) (soff+(sizeof(MpdLibZ)*i)))->~G__TMpdLibZ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdLibZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdLibZ*) (soff))->~G__TMpdLibZ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MpdgeneratorsDict_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdLibZ* dest = (MpdLibZ*) G__getstructoffset();
   *dest = *(MpdLibZ*) libp->para[0].ref;
   const MpdLibZ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdGetNumEvents */
static int G__G__MpdgeneratorsDict_553_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::GetNumROOTEvents((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::GetNumPHSDEvents((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::GetNumQGSMEvents((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::GetNumURQMDEvents((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdGetNumEvents::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdGetNumEvents::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdGetNumEvents::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdGetNumEvents::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MpdGetNumEvents*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdGetNumEvents*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdGetNumEvents*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdGetNumEvents*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdGetNumEvents::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdGetNumEvents::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_553_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdGetNumEvents::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MpdgeneratorsDict_553_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MpdGetNumEvents* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MpdGetNumEvents(*(MpdGetNumEvents*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MpdgeneratorsDict_553_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdGetNumEvents* dest = (MpdGetNumEvents*) G__getstructoffset();
   *dest = *(MpdGetNumEvents*) libp->para[0].ref;
   const MpdGetNumEvents& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MpdHistoGenerator */
static int G__G__MpdgeneratorsDict_582_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdHistoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHistoGenerator[n];
     } else {
       p = new((void*) gvp) MpdHistoGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHistoGenerator;
     } else {
       p = new((void*) gvp) MpdHistoGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MpdHistoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHistoGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MpdHistoGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MpdHistoGenerator((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MpdHistoGenerator((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MpdHistoGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHistoGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MpdHistoGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MpdHistoGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MpdHistoGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHistoGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdHistoGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MpdHistoGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MpdgeneratorsDict_582_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MpdHistoGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MpdHistoGenerator G__TMpdHistoGenerator;
static int G__G__MpdgeneratorsDict_582_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MpdHistoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MpdHistoGenerator*) (soff+(sizeof(MpdHistoGenerator)*i)))->~G__TMpdHistoGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MpdHistoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MpdHistoGenerator*) (soff))->~G__TMpdHistoGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MpdMCEventHeader */

/* MpdLAQGSMGenerator */

/* map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > */

/* MpdHypYPtGenerator */

/* MpdRainGenerator */

/* MpdPlutoGenerator */

/* MpdPHSDGenerator */

/* MpdUrqmdGenerator */

/* MpdLibZ */

/* MpdGetNumEvents */

/* MpdHistoGenerator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MpdgeneratorsDict {
 public:
  G__Sizep2memfuncG__MpdgeneratorsDict(): p(&G__Sizep2memfuncG__MpdgeneratorsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MpdgeneratorsDict::*p)();
};

size_t G__get_sizep2memfuncG__MpdgeneratorsDict()
{
  G__Sizep2memfuncG__MpdgeneratorsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MpdgeneratorsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader))) {
     MpdMCEventHeader *G__Lderived;
     G__Lderived=(MpdMCEventHeader*)0x1000;
     {
       FairMCEventHeader *G__Lpbase=(FairMCEventHeader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairMCEventHeader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator))) {
     MpdLAQGSMGenerator *G__Lderived;
     G__Lderived=(MpdLAQGSMGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator))) {
     MpdHypYPtGenerator *G__Lderived;
     G__Lderived=(MpdHypYPtGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator))) {
     MpdRainGenerator *G__Lderived;
     G__Lderived=(MpdRainGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator))) {
     MpdPlutoGenerator *G__Lderived;
     G__Lderived=(MpdPlutoGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator))) {
     MpdPHSDGenerator *G__Lderived;
     G__Lderived=(MpdPHSDGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator))) {
     MpdUrqmdGenerator *G__Lderived;
     G__Lderived=(MpdUrqmdGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator))) {
     MpdHistoGenerator *G__Lderived;
     G__Lderived=(MpdHistoGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator),G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MpdgeneratorsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<la_tab_t*>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MpdLAQGSMGenerator::la_tab_t*>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairIon*>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TString),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",85,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairIon),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_pairlETStringcOFairIonmUgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_lesslETStringgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_allocatorlEpairlEconstsPTStringcOFairIonmUgRsPgR),0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairIon*,less<TString> >",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("voidpc",89,-1,1024,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("voidp",89,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("off_t",108,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MpdMCEventHeader */
static void G__setup_memvarMpdMCEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   { MpdMCEventHeader *p; p=(MpdMCEventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPhi=",0,"Event plane angle [rad] (if relevant)");
   }
   G__tag_memvar_reset();
}


   /* MpdLAQGSMGenerator */
static void G__setup_memvarMpdLAQGSMGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator));
   { MpdLAQGSMGenerator *p; p=(MpdLAQGSMGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fInputFile=",0,"!  Input file");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file Name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TDatabasePDG),-1,-1,4,"fPDG=",0,"!  PDG database");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQGSM_format_ID=",0,"Reflect format changes");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseColliderSystem=",0,"kTRUE- for NICA/MPD, kFALSE - for lab system (CBM)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR),G__defined_typename("vector<la_tab_t*>"),-1,4,"fLa_tab=",0,"!  list of light particles known for MpdLAQGSMGenerator");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),G__defined_typename("map<TString,FairIon*>"),-1,4,"fIonMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > */
static void G__setup_memvarmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   { map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > *p; p=(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* MpdHypYPtGenerator */
static void G__setup_memvarMpdHypYPtGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator));
   { MpdHypYPtGenerator *p; p=(MpdHypYPtGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGType=",0,"/< Particle type (PDG encoding)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"/< Multiplicity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT=",0,"/< Temperature in the Pt distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY0=",0,"/< Mean rapidity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigma=",0,"/< Simga in the rapidity distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtMin=",0,"/< Max value of Pt");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPtMax=",0,"/< Min value of Pt");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPDGMass=",0,"/< Particle mass [GeV]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TF1),-1,-1,4,"fDistPt=",0,"! Pointer to the Pt function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdRainGenerator */
static void G__setup_memvarMpdRainGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator));
   { MpdRainGenerator *p; p=(MpdRainGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_PDGType=",0,"Particle type (PDG encoding)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_N=",0,"Size of shower");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_p=",0,"Momentum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_theta=",0,"angle from z axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_phi=",0,"angle in XoY plain");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_height=",0,"Height at which rain starts");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_d=",0,"distance between tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdPlutoGenerator */
static void G__setup_memvarMpdPlutoGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator));
   { MpdPlutoGenerator *p; p=(MpdPlutoGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,"! Event number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEkin=",0,"! Target energy in lab system ");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TFile),-1,-1,4,"fInputFile=",0,"! Pointer to input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TTree),-1,-1,4,"fInputTree=",0,"! Pointer to input tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClonesArray),-1,-1,4,"fParticles=",0,"! Particle array from PLUTO");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdPHSDGenerator */
static void G__setup_memvarMpdPHSDGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator));
   { MpdPHSDGenerator *p; p=(MpdPHSDGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fntr=",0,"! number of tracks in given event");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fb=",0,"! impact parameter in given event");
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("gzFile"),-1,4,"fgzFile=",0,"! file");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fbuffer[256]=",0,"! reading buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TRandom2),-1,-1,4,"frandom=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPsiRP=",0,"! reaction plane angle");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fisRP=",0,"! random/fixed reaction plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdUrqmdGenerator */
static void G__setup_memvarMpdUrqmdGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator));
   { MpdUrqmdGenerator *p; p=(MpdUrqmdGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("gzFile"),-1,4,"fInputFile=",0,"!  Input file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,4,"fParticleTable=",0,"!  Map from UrQMD PID to PDGPID");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"!  Input file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdLibZ */
static void G__setup_memvarMpdLibZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ));
   { MpdLibZ *p; p=(MpdLibZ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("gzFile"),-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdGetNumEvents */
static void G__setup_memvarMpdGetNumEvents(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents));
   { MpdGetNumEvents *p; p=(MpdGetNumEvents*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MpdHistoGenerator */
static void G__setup_memvarMpdHistoGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator));
   { MpdHistoGenerator *p; p=(MpdHistoGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPdgCode=",0,"! particle PDG code");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"! particle multiplicity");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TH2D),-1,-1,4,"fHist=",0,"! Pointer to the histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MpdgeneratorsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMpdMCEventHeader(void) {
   /* MpdMCEventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader));
   G__memfunc_setup("MpdMCEventHeader",1532,G__G__MpdgeneratorsDict_221_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdMCEventHeader",1532,G__G__MpdgeneratorsDict_221_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader), -1, 0, 9, 1, 1, 0, 
"h - 'UInt_t' 0 - runId i - 'Int_t' 0 - iEvent "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - b d - 'Double_t' 0 - phi "
"i - 'Int_t' 0 - nPrim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdMCEventHeader",1532,G__G__MpdgeneratorsDict_221_0_3, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - runId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__MpdgeneratorsDict_221_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "event plane angle [rad]", (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__MpdgeneratorsDict_221_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Register",837,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_221_0_8, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdMCEventHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_221_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdMCEventHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_221_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdMCEventHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_221_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdMCEventHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_221_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_221_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdMCEventHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_221_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdMCEventHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_221_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdMCEventHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_221_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdMCEventHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MpdMCEventHeader", 1532, G__G__MpdgeneratorsDict_221_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader), -1, 0, 1, 1, 1, 0, "u 'MpdMCEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MpdMCEventHeader", 1658, G__G__MpdgeneratorsDict_221_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MpdgeneratorsDict_221_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader), -1, 1, 1, 1, 1, 0, "u 'MpdMCEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdLAQGSMGenerator(void) {
   /* MpdLAQGSMGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator));
   G__memfunc_setup("MpdLAQGSMGenerator",1677,G__G__MpdgeneratorsDict_461_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdLAQGSMGenerator",1677,G__G__MpdgeneratorsDict_461_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator), -1, 0, 3, 1, 1, 0, 
"C - - 10 - fileName g - 'Bool_t' 10 'kTRUE' use_collider_system "
"i - 'Int_t' 0 '0' QGSM_format_ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__MpdgeneratorsDict_461_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' light_particles_filename", "fill list of known light particles", (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventHeader",1387,G__G__MpdgeneratorsDict_461_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 0 - ss", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipEvents",1036,G__G__MpdgeneratorsDict_461_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nSkip", "AZ", (void*) NULL, 0);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterIons",1246,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterIons1",1295,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", "AZ", (void*) NULL, 0);
   G__memfunc_setup("CreatePdgCode",1258,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - A "
"i - 'Int_t' 0 - Strange i - 'Int_t' 0 '0' user", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindParticle",1205,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 4, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - strange "
"i - 'Int_t' 0 - lepton i - 'Int_t' 0 - A "
"f - 'Float_t' 0 - mass i - 'Int_t' 1 - PDG "
"C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateNucleus",1331,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - Z f - 'Float_t' 0 - mass "
"i - 'Int_t' 0 - pdgCode C - - 0 - pdgName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_461_0_13, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdLAQGSMGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_461_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLAQGSMGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_461_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdLAQGSMGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_461_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdLAQGSMGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_461_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_461_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLAQGSMGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_461_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdLAQGSMGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_461_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLAQGSMGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_461_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdLAQGSMGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdLAQGSMGenerator", 1803, G__G__MpdgeneratorsDict_461_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR(void) {
   /* map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR));
   G__memfunc_setup("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >",7046,G__G__MpdgeneratorsDict_471_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >",7046,G__G__MpdgeneratorsDict_471_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - first u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >",7046,G__G__MpdgeneratorsDict_471_0_3, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator' - 0 - first u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >",7046,G__G__MpdgeneratorsDict_471_0_4, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__MpdgeneratorsDict_471_0_5, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__MpdgeneratorsDict_471_0_6, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__MpdgeneratorsDict_471_0_7, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__G__MpdgeneratorsDict_471_0_8, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__G__MpdgeneratorsDict_471_0_9, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__G__MpdgeneratorsDict_471_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__G__MpdgeneratorsDict_471_0_11, 107, -1, G__defined_typename("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__G__MpdgeneratorsDict_471_0_12, 107, -1, G__defined_typename("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__MpdgeneratorsDict_471_0_13, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_FairIon), -1, 1, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__MpdgeneratorsDict_471_0_14, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_pairlEmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<TString,FairIon*>' 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__MpdgeneratorsDict_471_0_15, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - position u 'pair<TString,FairIon*>' 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__MpdgeneratorsDict_471_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - first u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__MpdgeneratorsDict_471_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator' - 0 - first u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__MpdgeneratorsDict_471_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__MpdgeneratorsDict_471_0_19, 107, -1, G__defined_typename("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::size_type"), 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__MpdgeneratorsDict_471_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - first u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__G__MpdgeneratorsDict_471_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__G__MpdgeneratorsDict_471_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__G__MpdgeneratorsDict_471_0_23, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__G__MpdgeneratorsDict_471_0_24, 107, -1, G__defined_typename("map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::size_type"), 0, 1, 1, 1, 8, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__G__MpdgeneratorsDict_471_0_25, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__G__MpdgeneratorsDict_471_0_26, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >", 7172, G__G__MpdgeneratorsDict_471_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdHypYPtGenerator(void) {
   /* MpdHypYPtGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator));
   G__memfunc_setup("MpdHypYPtGenerator",1814,G__G__MpdgeneratorsDict_505_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdHypYPtGenerator",1814,G__G__MpdgeneratorsDict_505_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid i - 'Int_t' 0 '1' mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGType",937,G__G__MpdgeneratorsDict_505_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultiplicity",1589,G__G__MpdgeneratorsDict_505_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDistributionPt",1776,G__G__MpdgeneratorsDict_505_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.223' T", "AZ - for Omega- @ 9 GeV/n AuAu UrQMD", (void*) NULL, 0);
   G__memfunc_setup("SetDistributionY",1669,G__G__MpdgeneratorsDict_505_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' y0 d - 'Double_t' 0 '0.72' sigma", "AZ - for Omega- @ 9 GeV/n AuAu UrQMD", (void*) NULL, 0);
   G__memfunc_setup("SetRangePt",989,G__G__MpdgeneratorsDict_505_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' ptMin d - 'Double_t' 0 '3' ptMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "EL", (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_505_0_10, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdHypYPtGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_505_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHypYPtGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_505_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdHypYPtGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_505_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdHypYPtGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_505_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_505_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHypYPtGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_505_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdHypYPtGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_505_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHypYPtGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_505_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdHypYPtGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdHypYPtGenerator", 1940, G__G__MpdgeneratorsDict_505_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdRainGenerator(void) {
   /* MpdRainGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator));
   G__memfunc_setup("MpdRainGenerator",1618,G__G__MpdgeneratorsDict_506_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdRainGenerator",1618,G__G__MpdgeneratorsDict_506_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdRainGenerator), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid d - 'Double_t' 0 - p "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - d d - 'Double_t' 0 - height "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_506_0_4, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdRainGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_506_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdRainGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_506_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdRainGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_506_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdRainGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_506_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_506_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdRainGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_506_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdRainGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_506_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdRainGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_506_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdRainGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdRainGenerator", 1744, G__G__MpdgeneratorsDict_506_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdPlutoGenerator(void) {
   /* MpdPlutoGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator));
   G__memfunc_setup("MpdPlutoGenerator",1756,G__G__MpdgeneratorsDict_510_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdPlutoGenerator",1756,G__G__MpdgeneratorsDict_510_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - fileName d - 'Double_t' 0 - ekin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipEvents",1036,G__G__MpdgeneratorsDict_510_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_510_0_6, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdPlutoGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_510_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPlutoGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_510_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdPlutoGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_510_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdPlutoGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_510_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_510_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPlutoGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_510_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdPlutoGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_510_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPlutoGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_510_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdPlutoGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdPlutoGenerator", 1882, G__G__MpdgeneratorsDict_510_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdPHSDGenerator(void) {
   /* MpdPHSDGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator));
   G__memfunc_setup("MpdPHSDGenerator",1527,G__G__MpdgeneratorsDict_525_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdPHSDGenerator",1527,G__G__MpdgeneratorsDict_525_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipEvents",1036,G__G__MpdgeneratorsDict_525_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPsiRP",762,G__G__MpdgeneratorsDict_525_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - PsiRP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", "! read event header, return kTRUE if successful", (void*) NULL, 0);
   G__memfunc_setup("SkipTrack",908,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "! skip one track", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_525_0_8, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdPHSDGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_525_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPHSDGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_525_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdPHSDGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_525_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdPHSDGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_525_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_525_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPHSDGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_525_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdPHSDGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_525_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdPHSDGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_525_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdPHSDGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdPHSDGenerator", 1653, G__G__MpdgeneratorsDict_525_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdUrqmdGenerator(void) {
   /* MpdUrqmdGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator));
   G__memfunc_setup("MpdUrqmdGenerator",1745,G__G__MpdgeneratorsDict_526_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdUrqmdGenerator",1745,G__G__MpdgeneratorsDict_526_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipEvents",1036,G__G__MpdgeneratorsDict_526_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConversionTable",1930,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdUrqmdGenerator",1745,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator), -1, 0, 1, 1, 4, 0, "u 'MpdUrqmdGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator), -1, 1, 1, 1, 4, 0, "u 'MpdUrqmdGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_526_0_8, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdUrqmdGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_526_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdUrqmdGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_526_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdUrqmdGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_526_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdUrqmdGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_526_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_526_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdUrqmdGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_526_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdUrqmdGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_526_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdUrqmdGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_526_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdUrqmdGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdUrqmdGenerator", 1871, G__G__MpdgeneratorsDict_526_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdLibZ(void) {
   /* MpdLibZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ));
   G__memfunc_setup("MpdLibZ",658,G__G__MpdgeneratorsDict_552_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ), -1, 0, 1, 1, 1, 0, "C - - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__G__MpdgeneratorsDict_552_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eof",314,G__G__MpdgeneratorsDict_552_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__G__MpdgeneratorsDict_552_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__G__MpdgeneratorsDict_552_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'voidpc' 40 - buf h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__G__MpdgeneratorsDict_552_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'voidp' 0 - buf h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gets",435,G__G__MpdgeneratorsDict_552_0_7, 67, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - buf i - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("puts",460,G__G__MpdgeneratorsDict_552_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tell",433,G__G__MpdgeneratorsDict_552_0_9, 108, -1, G__defined_typename("off_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seek",424,G__G__MpdgeneratorsDict_552_0_10, 108, -1, G__defined_typename("off_t"), 0, 2, 1, 1, 0, 
"l - 'off_t' 0 - pos i - - 0 - whence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_552_0_11, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdLibZ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_552_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLibZ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_552_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdLibZ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_552_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdLibZ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__MpdgeneratorsDict_552_0_15, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__MpdgeneratorsDict_552_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__MpdgeneratorsDict_552_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_552_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_552_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLibZ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_552_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdLibZ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_552_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdLibZ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_552_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdLibZ::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MpdLibZ", 658, G__G__MpdgeneratorsDict_552_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ), -1, 0, 1, 1, 1, 0, "u 'MpdLibZ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MpdLibZ", 784, G__G__MpdgeneratorsDict_552_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MpdgeneratorsDict_552_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdLibZ), -1, 1, 1, 1, 1, 0, "u 'MpdLibZ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdGetNumEvents(void) {
   /* MpdGetNumEvents */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents));
   G__memfunc_setup("MpdGetNumEvents",1510,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQGSMEventHeader",1699,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 3, 4, 0, 
"C - - 0 - ss U 'MpdLibZ' - 0 - libz "
"I - 'Int_t' 0 - fQGSM_format_ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumROOTEvents",1545,G__G__MpdgeneratorsDict_553_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 0 - filename", (char*)NULL, (void*) G__func2void( (Int_t (*)(char*))(&MpdGetNumEvents::GetNumROOTEvents) ), 0);
   G__memfunc_setup("GetNumPHSDEvents",1524,G__G__MpdgeneratorsDict_553_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 0 - filename", (char*)NULL, (void*) G__func2void( (Int_t (*)(char*))(&MpdGetNumEvents::GetNumPHSDEvents) ), 0);
   G__memfunc_setup("GetNumQGSMEvents",1533,G__G__MpdgeneratorsDict_553_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 0 - fileName", (char*)NULL, (void*) G__func2void( (Int_t (*)(char*))(&MpdGetNumEvents::GetNumQGSMEvents) ), 0);
   G__memfunc_setup("GetNumURQMDEvents",1614,G__G__MpdgeneratorsDict_553_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 0 - fileName", (char*)NULL, (void*) G__func2void( (Int_t (*)(char*))(&MpdGetNumEvents::GetNumURQMDEvents) ), 0);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_553_0_7, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdGetNumEvents::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_553_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdGetNumEvents::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_553_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdGetNumEvents::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_553_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdGetNumEvents::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__MpdgeneratorsDict_553_0_11, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__MpdgeneratorsDict_553_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__MpdgeneratorsDict_553_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_553_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_553_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdGetNumEvents::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_553_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdGetNumEvents::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_553_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdGetNumEvents::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_553_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdGetNumEvents::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MpdGetNumEvents", 1510, G__G__MpdgeneratorsDict_553_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents), -1, 0, 1, 1, 1, 0, "u 'MpdGetNumEvents' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MpdgeneratorsDict_553_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents), -1, 1, 1, 1, 1, 0, "u 'MpdGetNumEvents' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMpdHistoGenerator(void) {
   /* MpdHistoGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator));
   G__memfunc_setup("MpdHistoGenerator",1743,G__G__MpdgeneratorsDict_582_0_1, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MpdHistoGenerator",1743,G__G__MpdgeneratorsDict_582_0_2, 105, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid i - 'Int_t' 0 '1' mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MpdgeneratorsDict_582_0_4, 85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MpdHistoGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MpdgeneratorsDict_582_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHistoGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MpdgeneratorsDict_582_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MpdHistoGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MpdgeneratorsDict_582_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MpdHistoGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MpdgeneratorsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MpdgeneratorsDict_582_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MpdgeneratorsDict_582_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHistoGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MpdgeneratorsDict_582_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdHistoGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MpdgeneratorsDict_582_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MpdHistoGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MpdgeneratorsDict_582_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MpdHistoGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MpdHistoGenerator", 1869, G__G__MpdgeneratorsDict_582_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MpdgeneratorsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MpdgeneratorsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MpdgeneratorsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MpdgeneratorsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_FairMCEventHeader = { "FairMCEventHeader" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdMCEventHeader = { "MpdMCEventHeader" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_FairPrimaryGenerator = { "FairPrimaryGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_FairGenerator = { "FairGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_FairIon = { "FairIon" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator = { "MpdLAQGSMGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR = { "vector<MpdLAQGSMGenerator::la_tab_t*,allocator<MpdLAQGSMGenerator::la_tab_t*> >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MpdLAQGSMGenerator::la_tab_t*,allocator<MpdLAQGSMGenerator::la_tab_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_lesslETStringgR = { "less<TString>" , 115 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_allocatorlEpairlEconstsPTStringcOFairIonmUgRsPgR = { "allocator<pair<const TString,FairIon*> >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR = { "map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_pairlETStringcOFairIonmUgR = { "pair<TString,FairIon*>" , 115 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator = { "map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator = { "map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_pairlEmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator = { "MpdHypYPtGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdRainGenerator = { "MpdRainGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdPlutoGenerator = { "MpdPlutoGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TRandom2 = { "TRandom2" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdPHSDGenerator = { "MpdPHSDGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator = { "MpdUrqmdGenerator" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdLibZ = { "MpdLibZ" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdGetNumEvents = { "MpdGetNumEvents" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__G__MpdgeneratorsDictLN_MpdHistoGenerator = { "MpdHistoGenerator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MpdgeneratorsDict() {
  G__G__MpdgeneratorsDictLN_TClass.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TBuffer.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMemberInspector.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TObject.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TNamed.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TString.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TClonesArray.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_FairMCEventHeader.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdMCEventHeader.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_FairPrimaryGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_FairGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TDatabasePDG.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_FairIon.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_lesslETStringgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_allocatorlEpairlEconstsPTStringcOFairIonmUgRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_pairlETStringcOFairIonmUgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_pairlEmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TF1.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdRainGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TFile.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TTree.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdPlutoGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TRandom2.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdPHSDGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdLibZ.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdGetNumEvents.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_TH2D.tagnum = -1 ;
  G__G__MpdgeneratorsDictLN_MpdHistoGenerator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MpdgeneratorsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_FairMCEventHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdMCEventHeader),sizeof(MpdMCEventHeader),-1,324864,(char*)NULL,G__setup_memvarMpdMCEventHeader,G__setup_memfuncMpdMCEventHeader);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_FairPrimaryGenerator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_FairGenerator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TDatabasePDG);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_FairIon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdLAQGSMGenerator),sizeof(MpdLAQGSMGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdLAQGSMGenerator,G__setup_memfuncMpdLAQGSMGenerator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_vectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_reverse_iteratorlEvectorlEMpdLAQGSMGeneratorcLcLla_tab_tmUcOallocatorlEMpdLAQGSMGeneratorcLcLla_tab_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_lesslETStringgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_allocatorlEpairlEconstsPTStringcOFairIonmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),sizeof(map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >),-1,36608,(char*)NULL,G__setup_memvarmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR,G__setup_memfuncmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_pairlETStringcOFairIonmUgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_pairlEmaplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdHypYPtGenerator),sizeof(MpdHypYPtGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdHypYPtGenerator,G__setup_memfuncMpdHypYPtGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdRainGenerator),sizeof(MpdRainGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdRainGenerator,G__setup_memfuncMpdRainGenerator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdPlutoGenerator),sizeof(MpdPlutoGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdPlutoGenerator,G__setup_memfuncMpdPlutoGenerator);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TRandom2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdPHSDGenerator),sizeof(MpdPHSDGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdPHSDGenerator,G__setup_memfuncMpdPHSDGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdUrqmdGenerator),sizeof(MpdUrqmdGenerator),-1,327424,(char*)NULL,G__setup_memvarMpdUrqmdGenerator,G__setup_memfuncMpdUrqmdGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdLibZ),sizeof(MpdLibZ),-1,295936,(char*)NULL,G__setup_memvarMpdLibZ,G__setup_memfuncMpdLibZ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdGetNumEvents),sizeof(MpdGetNumEvents),-1,263424,(char*)NULL,G__setup_memvarMpdGetNumEvents,G__setup_memfuncMpdGetNumEvents);
   G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MpdgeneratorsDictLN_MpdHistoGenerator),sizeof(MpdHistoGenerator),-1,324864,(char*)NULL,G__setup_memvarMpdHistoGenerator,G__setup_memfuncMpdHistoGenerator);
}
extern "C" void G__cpp_setupG__MpdgeneratorsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MpdgeneratorsDict()");
  G__set_cpp_environmentG__MpdgeneratorsDict();
  G__cpp_setup_tagtableG__MpdgeneratorsDict();

  G__cpp_setup_inheritanceG__MpdgeneratorsDict();

  G__cpp_setup_typetableG__MpdgeneratorsDict();

  G__cpp_setup_memvarG__MpdgeneratorsDict();

  G__cpp_setup_memfuncG__MpdgeneratorsDict();
  G__cpp_setup_globalG__MpdgeneratorsDict();
  G__cpp_setup_funcG__MpdgeneratorsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MpdgeneratorsDict();
  return;
}
class G__cpp_setup_initG__MpdgeneratorsDict {
  public:
    G__cpp_setup_initG__MpdgeneratorsDict() { G__add_setup_func("G__MpdgeneratorsDict",(G__incsetup)(&G__cpp_setupG__MpdgeneratorsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MpdgeneratorsDict() { G__remove_setup_func("G__MpdgeneratorsDict"); }
};
G__cpp_setup_initG__MpdgeneratorsDict G__cpp_setup_initializerG__MpdgeneratorsDict;

