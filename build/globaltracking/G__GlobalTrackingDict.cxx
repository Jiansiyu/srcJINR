//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:03:17 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddIglobaltrackingdIG__GlobalTrackingDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__GlobalTrackingDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnDetectorSetup BmnDetectorSetup;
      #else
      class BmnDetectorSetup  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnDetectorSetup() throw() {};
         map< ::DetectorId, Bool_t > fDet; //Map DetectorId to detector presence
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackFinder BmnTrackFinder;
      #else
      class BmnTrackFinder  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackFinder() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnMaterialInfo BmnMaterialInfo;
      #else
      class BmnMaterialInfo  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnMaterialInfo() throw() {};
         float fLength; //Length of the material [cm]
         float fRL; //Radiation length [cm]
         float fRho; //Density [g/cm^3]
         float fZ; //Atomic number
         float fA; //Atomic mass
         float fZpos; //Z position of the material
         string fName; //Name of material
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnGeoNavigator BmnGeoNavigator;
      #else
      class BmnGeoNavigator  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnGeoNavigator() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackExtrapolator BmnTrackExtrapolator;
      #else
      class BmnTrackExtrapolator  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackExtrapolator() throw() {};
         ::FairField* fField; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnMaterialEffects BmnMaterialEffects;
      #else
      class BmnMaterialEffects  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnMaterialEffects() throw() {};
         bool fDownstream; //Propagation direction
         float fMass; //Hypothesis on particle mass
         bool fIsElectron; //True if particle is an electron or positron
         bool fIsMuon; //True if particle is muon
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackPropagator BmnTrackPropagator;
      #else
      class BmnTrackPropagator  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackPropagator() throw() {};
         ::BmnGeoNavigator* fNavigator; //
         ::BmnTrackExtrapolator* fExtrapolator; //
         ::BmnMaterialEffects* fMaterial; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnKalmanFilter BmnKalmanFilter;
      #else
      class BmnKalmanFilter  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnKalmanFilter() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnHitToTrackMerger BmnHitToTrackMerger;
      #else
      class BmnHitToTrackMerger  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnHitToTrackMerger() throw() {};
         ::BmnTrackPropagator* fPropagator; //Track propagation tool
         ::BmnKalmanFilter* fFilter; //Track update tool
         int fPDG; //PDG hypothesis
         float fChiSqCut; //Chi square cut for hit to be attached to track.
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackFitter BmnTrackFitter;
      #else
      class BmnTrackFitter  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackFitter() throw() {};
         ::BmnTrackPropagator* fPropagator; //
         ::BmnKalmanFilter* fUpdate; //
         int fNofIterations; //
         float fChiSqCut; //
         int fMinNofHits; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackingGeometryConstructor BmnTrackingGeometryConstructor;
      #else
      class BmnTrackingGeometryConstructor  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackingGeometryConstructor() throw() {};
         ::TGeoManager* fGeo; //Pointer to full geometry
         int fNofTrdStations; //Number of TRD stations
         int fNofMuchStations; //Number of MUCH stations
         int fNofMvdStations; //Number of MVD stations
         int fNofStsStations; //Number of STS stations
         int fNofMuchAbsorbers; //Number of MUCH absorbers
         ::BmnDetectorSetup fDet; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::BmnTrackSelector BmnTrackSelector;
      #else
      class BmnTrackSelector  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BmnTrackSelector() throw() {};
         float fMaxChiSq; //
         int fMinLastPlaneId; //
         int fMinNofHits; //
         float fMinMomentum; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BmnDetectorSetup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnDetectorSetup_Dictionary();
   static void *new_BmnDetectorSetup(void *p = 0);
   static void *newArray_BmnDetectorSetup(Long_t size, void *p);
   static void delete_BmnDetectorSetup(void *p);
   static void deleteArray_BmnDetectorSetup(void *p);
   static void destruct_BmnDetectorSetup(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnDetectorSetup*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnDetectorSetup) == sizeof(::ROOT::Shadow::BmnDetectorSetup));
      ::BmnDetectorSetup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnDetectorSetup),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnDetectorSetup", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnDetectorSetup.h", 25,
                  typeid(::BmnDetectorSetup), DefineBehavior(ptr, ptr),
                  &BmnDetectorSetup_ShowMembers, &BmnDetectorSetup_Dictionary, isa_proxy, 4,
                  sizeof(::BmnDetectorSetup) );
      instance.SetNew(&new_BmnDetectorSetup);
      instance.SetNewArray(&newArray_BmnDetectorSetup);
      instance.SetDelete(&delete_BmnDetectorSetup);
      instance.SetDeleteArray(&deleteArray_BmnDetectorSetup);
      instance.SetDestructor(&destruct_BmnDetectorSetup);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnDetectorSetup*)
   {
      return GenerateInitInstanceLocal((::BmnDetectorSetup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnDetectorSetup*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnDetectorSetup_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnDetectorSetup*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnGlobalTrackingQA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnGlobalTrackingQA(void *p = 0);
   static void *newArray_BmnGlobalTrackingQA(Long_t size, void *p);
   static void delete_BmnGlobalTrackingQA(void *p);
   static void deleteArray_BmnGlobalTrackingQA(void *p);
   static void destruct_BmnGlobalTrackingQA(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnGlobalTrackingQA*)
   {
      ::BmnGlobalTrackingQA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnGlobalTrackingQA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnGlobalTrackingQA", ::BmnGlobalTrackingQA::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnGlobalTrackingQA.h", 27,
                  typeid(::BmnGlobalTrackingQA), DefineBehavior(ptr, ptr),
                  &::BmnGlobalTrackingQA::Dictionary, isa_proxy, 4,
                  sizeof(::BmnGlobalTrackingQA) );
      instance.SetNew(&new_BmnGlobalTrackingQA);
      instance.SetNewArray(&newArray_BmnGlobalTrackingQA);
      instance.SetDelete(&delete_BmnGlobalTrackingQA);
      instance.SetDeleteArray(&deleteArray_BmnGlobalTrackingQA);
      instance.SetDestructor(&destruct_BmnGlobalTrackingQA);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnGlobalTrackingQA*)
   {
      return GenerateInitInstanceLocal((::BmnGlobalTrackingQA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnGlobalTrackingQA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnTrackFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackFinder_Dictionary();
   static void *new_BmnTrackFinder(void *p = 0);
   static void *newArray_BmnTrackFinder(Long_t size, void *p);
   static void delete_BmnTrackFinder(void *p);
   static void deleteArray_BmnTrackFinder(void *p);
   static void destruct_BmnTrackFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackFinder*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackFinder) == sizeof(::ROOT::Shadow::BmnTrackFinder));
      ::BmnTrackFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackFinder),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackFinder", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackFinder.h", 23,
                  typeid(::BmnTrackFinder), DefineBehavior(ptr, ptr),
                  &BmnTrackFinder_ShowMembers, &BmnTrackFinder_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackFinder) );
      instance.SetNew(&new_BmnTrackFinder);
      instance.SetNewArray(&newArray_BmnTrackFinder);
      instance.SetDelete(&delete_BmnTrackFinder);
      instance.SetDeleteArray(&deleteArray_BmnTrackFinder);
      instance.SetDestructor(&destruct_BmnTrackFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackFinder*)
   {
      return GenerateInitInstanceLocal((::BmnTrackFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackFinder_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackFinder*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnMaterialInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnMaterialInfo_Dictionary();
   static void *new_BmnMaterialInfo(void *p = 0);
   static void *newArray_BmnMaterialInfo(Long_t size, void *p);
   static void delete_BmnMaterialInfo(void *p);
   static void deleteArray_BmnMaterialInfo(void *p);
   static void destruct_BmnMaterialInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnMaterialInfo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnMaterialInfo) == sizeof(::ROOT::Shadow::BmnMaterialInfo));
      ::BmnMaterialInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnMaterialInfo),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnMaterialInfo", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnMaterialInfo.h", 19,
                  typeid(::BmnMaterialInfo), DefineBehavior(ptr, ptr),
                  &BmnMaterialInfo_ShowMembers, &BmnMaterialInfo_Dictionary, isa_proxy, 4,
                  sizeof(::BmnMaterialInfo) );
      instance.SetNew(&new_BmnMaterialInfo);
      instance.SetNewArray(&newArray_BmnMaterialInfo);
      instance.SetDelete(&delete_BmnMaterialInfo);
      instance.SetDeleteArray(&deleteArray_BmnMaterialInfo);
      instance.SetDestructor(&destruct_BmnMaterialInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnMaterialInfo*)
   {
      return GenerateInitInstanceLocal((::BmnMaterialInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnMaterialInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnMaterialInfo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnMaterialInfo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnGeoNavigator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnGeoNavigator_Dictionary();
   static void *new_BmnGeoNavigator(void *p = 0);
   static void *newArray_BmnGeoNavigator(Long_t size, void *p);
   static void delete_BmnGeoNavigator(void *p);
   static void deleteArray_BmnGeoNavigator(void *p);
   static void destruct_BmnGeoNavigator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnGeoNavigator*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnGeoNavigator) == sizeof(::ROOT::Shadow::BmnGeoNavigator));
      ::BmnGeoNavigator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnGeoNavigator),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnGeoNavigator", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnGeoNavigator.h", 21,
                  typeid(::BmnGeoNavigator), DefineBehavior(ptr, ptr),
                  &BmnGeoNavigator_ShowMembers, &BmnGeoNavigator_Dictionary, isa_proxy, 4,
                  sizeof(::BmnGeoNavigator) );
      instance.SetNew(&new_BmnGeoNavigator);
      instance.SetNewArray(&newArray_BmnGeoNavigator);
      instance.SetDelete(&delete_BmnGeoNavigator);
      instance.SetDeleteArray(&deleteArray_BmnGeoNavigator);
      instance.SetDestructor(&destruct_BmnGeoNavigator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnGeoNavigator*)
   {
      return GenerateInitInstanceLocal((::BmnGeoNavigator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnGeoNavigator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnGeoNavigator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnGeoNavigator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnTrackExtrapolator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackExtrapolator_Dictionary();
   static void *new_BmnTrackExtrapolator(void *p = 0);
   static void *newArray_BmnTrackExtrapolator(Long_t size, void *p);
   static void delete_BmnTrackExtrapolator(void *p);
   static void deleteArray_BmnTrackExtrapolator(void *p);
   static void destruct_BmnTrackExtrapolator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackExtrapolator*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackExtrapolator) == sizeof(::ROOT::Shadow::BmnTrackExtrapolator));
      ::BmnTrackExtrapolator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackExtrapolator),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackExtrapolator", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackExtrapolator.h", 34,
                  typeid(::BmnTrackExtrapolator), DefineBehavior(ptr, ptr),
                  &BmnTrackExtrapolator_ShowMembers, &BmnTrackExtrapolator_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackExtrapolator) );
      instance.SetNew(&new_BmnTrackExtrapolator);
      instance.SetNewArray(&newArray_BmnTrackExtrapolator);
      instance.SetDelete(&delete_BmnTrackExtrapolator);
      instance.SetDeleteArray(&deleteArray_BmnTrackExtrapolator);
      instance.SetDestructor(&destruct_BmnTrackExtrapolator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackExtrapolator*)
   {
      return GenerateInitInstanceLocal((::BmnTrackExtrapolator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackExtrapolator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackExtrapolator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackExtrapolator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnMaterialEffects_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnMaterialEffects_Dictionary();
   static void *new_BmnMaterialEffects(void *p = 0);
   static void *newArray_BmnMaterialEffects(Long_t size, void *p);
   static void delete_BmnMaterialEffects(void *p);
   static void deleteArray_BmnMaterialEffects(void *p);
   static void destruct_BmnMaterialEffects(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnMaterialEffects*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnMaterialEffects) == sizeof(::ROOT::Shadow::BmnMaterialEffects));
      ::BmnMaterialEffects *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnMaterialEffects),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnMaterialEffects", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnMaterialEffects.h", 24,
                  typeid(::BmnMaterialEffects), DefineBehavior(ptr, ptr),
                  &BmnMaterialEffects_ShowMembers, &BmnMaterialEffects_Dictionary, isa_proxy, 4,
                  sizeof(::BmnMaterialEffects) );
      instance.SetNew(&new_BmnMaterialEffects);
      instance.SetNewArray(&newArray_BmnMaterialEffects);
      instance.SetDelete(&delete_BmnMaterialEffects);
      instance.SetDeleteArray(&deleteArray_BmnMaterialEffects);
      instance.SetDestructor(&destruct_BmnMaterialEffects);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnMaterialEffects*)
   {
      return GenerateInitInstanceLocal((::BmnMaterialEffects*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnMaterialEffects*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnMaterialEffects_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnMaterialEffects*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnTrackPropagator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackPropagator_Dictionary();
   static void *new_BmnTrackPropagator(void *p = 0);
   static void *newArray_BmnTrackPropagator(Long_t size, void *p);
   static void delete_BmnTrackPropagator(void *p);
   static void deleteArray_BmnTrackPropagator(void *p);
   static void destruct_BmnTrackPropagator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackPropagator*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackPropagator) == sizeof(::ROOT::Shadow::BmnTrackPropagator));
      ::BmnTrackPropagator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackPropagator),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackPropagator", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackPropagator.h", 34,
                  typeid(::BmnTrackPropagator), DefineBehavior(ptr, ptr),
                  &BmnTrackPropagator_ShowMembers, &BmnTrackPropagator_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackPropagator) );
      instance.SetNew(&new_BmnTrackPropagator);
      instance.SetNewArray(&newArray_BmnTrackPropagator);
      instance.SetDelete(&delete_BmnTrackPropagator);
      instance.SetDeleteArray(&deleteArray_BmnTrackPropagator);
      instance.SetDestructor(&destruct_BmnTrackPropagator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackPropagator*)
   {
      return GenerateInitInstanceLocal((::BmnTrackPropagator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackPropagator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackPropagator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackPropagator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnKalmanFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnKalmanFilter_Dictionary();
   static void *new_BmnKalmanFilter(void *p = 0);
   static void *newArray_BmnKalmanFilter(Long_t size, void *p);
   static void delete_BmnKalmanFilter(void *p);
   static void deleteArray_BmnKalmanFilter(void *p);
   static void destruct_BmnKalmanFilter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnKalmanFilter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnKalmanFilter) == sizeof(::ROOT::Shadow::BmnKalmanFilter));
      ::BmnKalmanFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnKalmanFilter),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnKalmanFilter", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnKalmanFilter.h", 25,
                  typeid(::BmnKalmanFilter), DefineBehavior(ptr, ptr),
                  &BmnKalmanFilter_ShowMembers, &BmnKalmanFilter_Dictionary, isa_proxy, 4,
                  sizeof(::BmnKalmanFilter) );
      instance.SetNew(&new_BmnKalmanFilter);
      instance.SetNewArray(&newArray_BmnKalmanFilter);
      instance.SetDelete(&delete_BmnKalmanFilter);
      instance.SetDeleteArray(&deleteArray_BmnKalmanFilter);
      instance.SetDestructor(&destruct_BmnKalmanFilter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnKalmanFilter*)
   {
      return GenerateInitInstanceLocal((::BmnKalmanFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnKalmanFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnKalmanFilter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnKalmanFilter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnHitToTrackMerger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnHitToTrackMerger_Dictionary();
   static void *new_BmnHitToTrackMerger(void *p = 0);
   static void *newArray_BmnHitToTrackMerger(Long_t size, void *p);
   static void delete_BmnHitToTrackMerger(void *p);
   static void deleteArray_BmnHitToTrackMerger(void *p);
   static void destruct_BmnHitToTrackMerger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnHitToTrackMerger*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnHitToTrackMerger) == sizeof(::ROOT::Shadow::BmnHitToTrackMerger));
      ::BmnHitToTrackMerger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnHitToTrackMerger),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnHitToTrackMerger", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnHitToTrackMerger.h", 24,
                  typeid(::BmnHitToTrackMerger), DefineBehavior(ptr, ptr),
                  &BmnHitToTrackMerger_ShowMembers, &BmnHitToTrackMerger_Dictionary, isa_proxy, 4,
                  sizeof(::BmnHitToTrackMerger) );
      instance.SetNew(&new_BmnHitToTrackMerger);
      instance.SetNewArray(&newArray_BmnHitToTrackMerger);
      instance.SetDelete(&delete_BmnHitToTrackMerger);
      instance.SetDeleteArray(&deleteArray_BmnHitToTrackMerger);
      instance.SetDestructor(&destruct_BmnHitToTrackMerger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnHitToTrackMerger*)
   {
      return GenerateInitInstanceLocal((::BmnHitToTrackMerger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnHitToTrackMerger*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnHitToTrackMerger_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnHitToTrackMerger*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnTrackFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackFitter_Dictionary();
   static void *new_BmnTrackFitter(void *p = 0);
   static void *newArray_BmnTrackFitter(Long_t size, void *p);
   static void delete_BmnTrackFitter(void *p);
   static void deleteArray_BmnTrackFitter(void *p);
   static void destruct_BmnTrackFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackFitter) == sizeof(::ROOT::Shadow::BmnTrackFitter));
      ::BmnTrackFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackFitter", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackFitter.h", 27,
                  typeid(::BmnTrackFitter), DefineBehavior(ptr, ptr),
                  &BmnTrackFitter_ShowMembers, &BmnTrackFitter_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackFitter) );
      instance.SetNew(&new_BmnTrackFitter);
      instance.SetNewArray(&newArray_BmnTrackFitter);
      instance.SetDelete(&delete_BmnTrackFitter);
      instance.SetDeleteArray(&deleteArray_BmnTrackFitter);
      instance.SetDestructor(&destruct_BmnTrackFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackFitter*)
   {
      return GenerateInitInstanceLocal((::BmnTrackFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnTrackingGeometryConstructor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackingGeometryConstructor_Dictionary();

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackingGeometryConstructor*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackingGeometryConstructor) == sizeof(::ROOT::Shadow::BmnTrackingGeometryConstructor));
      ::BmnTrackingGeometryConstructor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackingGeometryConstructor),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackingGeometryConstructor", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackingGeometryConstructor.h", 24,
                  typeid(::BmnTrackingGeometryConstructor), DefineBehavior(ptr, ptr),
                  &BmnTrackingGeometryConstructor_ShowMembers, &BmnTrackingGeometryConstructor_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackingGeometryConstructor) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackingGeometryConstructor*)
   {
      return GenerateInitInstanceLocal((::BmnTrackingGeometryConstructor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackingGeometryConstructor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackingGeometryConstructor_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackingGeometryConstructor*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnTrackSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BmnTrackSelector_Dictionary();
   static void *new_BmnTrackSelector(void *p = 0);
   static void *newArray_BmnTrackSelector(Long_t size, void *p);
   static void delete_BmnTrackSelector(void *p);
   static void deleteArray_BmnTrackSelector(void *p);
   static void destruct_BmnTrackSelector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnTrackSelector*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::BmnTrackSelector) == sizeof(::ROOT::Shadow::BmnTrackSelector));
      ::BmnTrackSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BmnTrackSelector),0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnTrackSelector", "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnTrackSelector.h", 16,
                  typeid(::BmnTrackSelector), DefineBehavior(ptr, ptr),
                  &BmnTrackSelector_ShowMembers, &BmnTrackSelector_Dictionary, isa_proxy, 4,
                  sizeof(::BmnTrackSelector) );
      instance.SetNew(&new_BmnTrackSelector);
      instance.SetNewArray(&newArray_BmnTrackSelector);
      instance.SetDelete(&delete_BmnTrackSelector);
      instance.SetDeleteArray(&deleteArray_BmnTrackSelector);
      instance.SetDestructor(&destruct_BmnTrackSelector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnTrackSelector*)
   {
      return GenerateInitInstanceLocal((::BmnTrackSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnTrackSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BmnTrackSelector_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackSelector*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void BmnHitMatchingQA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_BmnHitMatchingQA(void *p);
   static void deleteArray_BmnHitMatchingQA(void *p);
   static void destruct_BmnHitMatchingQA(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnHitMatchingQA*)
   {
      ::BmnHitMatchingQA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnHitMatchingQA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnHitMatchingQA", ::BmnHitMatchingQA::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnHitMatchingQA.h", 18,
                  typeid(::BmnHitMatchingQA), DefineBehavior(ptr, ptr),
                  &::BmnHitMatchingQA::Dictionary, isa_proxy, 4,
                  sizeof(::BmnHitMatchingQA) );
      instance.SetDelete(&delete_BmnHitMatchingQA);
      instance.SetDeleteArray(&deleteArray_BmnHitMatchingQA);
      instance.SetDestructor(&destruct_BmnHitMatchingQA);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnHitMatchingQA*)
   {
      return GenerateInitInstanceLocal((::BmnHitMatchingQA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnHitMatchingQA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnGlobalTracking_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnGlobalTracking(void *p = 0);
   static void *newArray_BmnGlobalTracking(Long_t size, void *p);
   static void delete_BmnGlobalTracking(void *p);
   static void deleteArray_BmnGlobalTracking(void *p);
   static void destruct_BmnGlobalTracking(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnGlobalTracking*)
   {
      ::BmnGlobalTracking *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnGlobalTracking >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnGlobalTracking", ::BmnGlobalTracking::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnGlobalTracking.h", 48,
                  typeid(::BmnGlobalTracking), DefineBehavior(ptr, ptr),
                  &::BmnGlobalTracking::Dictionary, isa_proxy, 4,
                  sizeof(::BmnGlobalTracking) );
      instance.SetNew(&new_BmnGlobalTracking);
      instance.SetNewArray(&newArray_BmnGlobalTracking);
      instance.SetDelete(&delete_BmnGlobalTracking);
      instance.SetDeleteArray(&deleteArray_BmnGlobalTracking);
      instance.SetDestructor(&destruct_BmnGlobalTracking);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnGlobalTracking*)
   {
      return GenerateInitInstanceLocal((::BmnGlobalTracking*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnGlobalTracking*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnSeedFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnSeedFinder(void *p = 0);
   static void *newArray_BmnSeedFinder(Long_t size, void *p);
   static void delete_BmnSeedFinder(void *p);
   static void deleteArray_BmnSeedFinder(void *p);
   static void destruct_BmnSeedFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnSeedFinder*)
   {
      ::BmnSeedFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnSeedFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnSeedFinder", ::BmnSeedFinder::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/globaltracking/BmnSeedFinder.h", 34,
                  typeid(::BmnSeedFinder), DefineBehavior(ptr, ptr),
                  &::BmnSeedFinder::Dictionary, isa_proxy, 4,
                  sizeof(::BmnSeedFinder) );
      instance.SetNew(&new_BmnSeedFinder);
      instance.SetNewArray(&newArray_BmnSeedFinder);
      instance.SetDelete(&delete_BmnSeedFinder);
      instance.SetDeleteArray(&deleteArray_BmnSeedFinder);
      instance.SetDestructor(&destruct_BmnSeedFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnSeedFinder*)
   {
      return GenerateInitInstanceLocal((::BmnSeedFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnSeedFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *BmnGlobalTrackingQA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnGlobalTrackingQA::Class_Name()
{
   return "BmnGlobalTrackingQA";
}

//______________________________________________________________________________
const char *BmnGlobalTrackingQA::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTrackingQA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnGlobalTrackingQA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTrackingQA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnGlobalTrackingQA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTrackingQA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnGlobalTrackingQA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTrackingQA*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnHitMatchingQA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnHitMatchingQA::Class_Name()
{
   return "BmnHitMatchingQA";
}

//______________________________________________________________________________
const char *BmnHitMatchingQA::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnHitMatchingQA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnHitMatchingQA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnHitMatchingQA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnHitMatchingQA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnHitMatchingQA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnHitMatchingQA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnHitMatchingQA*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnGlobalTracking::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnGlobalTracking::Class_Name()
{
   return "BmnGlobalTracking";
}

//______________________________________________________________________________
const char *BmnGlobalTracking::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTracking*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnGlobalTracking::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTracking*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnGlobalTracking::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTracking*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnGlobalTracking::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnGlobalTracking*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnSeedFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnSeedFinder::Class_Name()
{
   return "BmnSeedFinder";
}

//______________________________________________________________________________
const char *BmnSeedFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnSeedFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnSeedFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnSeedFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnSeedFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnSeedFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnSeedFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnSeedFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void BmnDetectorSetup_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnDetectorSetup.
      typedef ::ROOT::Shadow::BmnDetectorSetup ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnDetectorSetup*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet", (void*)&sobj->fDet);
      R__insp.InspectMember("map<DetectorId,Bool_t>", (void*)&sobj->fDet, "fDet.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnDetectorSetup(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnDetectorSetup : new ::BmnDetectorSetup;
   }
   static void *newArray_BmnDetectorSetup(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnDetectorSetup[nElements] : new ::BmnDetectorSetup[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnDetectorSetup(void *p) {
      delete ((::BmnDetectorSetup*)p);
   }
   static void deleteArray_BmnDetectorSetup(void *p) {
      delete [] ((::BmnDetectorSetup*)p);
   }
   static void destruct_BmnDetectorSetup(void *p) {
      typedef ::BmnDetectorSetup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnDetectorSetup

//______________________________________________________________________________
void BmnGlobalTrackingQA::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnGlobalTrackingQA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnGlobalTrackingQA::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnGlobalTrackingQA::Class(),this);
   }
}

//______________________________________________________________________________
void BmnGlobalTrackingQA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnGlobalTrackingQA.
      TClass *R__cl = ::BmnGlobalTrackingQA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_suffix", (void*)&_suffix);
      R__insp.InspectMember("string", (void*)&_suffix, "_suffix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hTrackLength", &_hTrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hY_global", &_hY_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hX_global", &_hX_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZ_global", &_hZ_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXY_global", &_hXY_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZY_global", &_hZY_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZX_global", &_hZX_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZXY_global", &_hZXY_global);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hNumOfHitsDistr", &_hNumOfHitsDistr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hMomentumDistr", &_hMomentumDistr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPt", &_hPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPx", &_hPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPy", &_hPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPz", &_hPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hHitDist", &_hHitDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hHitXDist", &_hHitXDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hHitYDist", &_hHitYDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hHitChiSq", &_hHitChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hNumMcTrack", &_hNumMcTrack);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnGlobalTrackingQA(void *p) {
      return  p ? new(p) ::BmnGlobalTrackingQA : new ::BmnGlobalTrackingQA;
   }
   static void *newArray_BmnGlobalTrackingQA(Long_t nElements, void *p) {
      return p ? new(p) ::BmnGlobalTrackingQA[nElements] : new ::BmnGlobalTrackingQA[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnGlobalTrackingQA(void *p) {
      delete ((::BmnGlobalTrackingQA*)p);
   }
   static void deleteArray_BmnGlobalTrackingQA(void *p) {
      delete [] ((::BmnGlobalTrackingQA*)p);
   }
   static void destruct_BmnGlobalTrackingQA(void *p) {
      typedef ::BmnGlobalTrackingQA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnGlobalTrackingQA

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackFinder_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackFinder.
      typedef ::ROOT::Shadow::BmnTrackFinder ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackFinder*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnTrackFinder(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackFinder : new ::BmnTrackFinder;
   }
   static void *newArray_BmnTrackFinder(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackFinder[nElements] : new ::BmnTrackFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnTrackFinder(void *p) {
      delete ((::BmnTrackFinder*)p);
   }
   static void deleteArray_BmnTrackFinder(void *p) {
      delete [] ((::BmnTrackFinder*)p);
   }
   static void destruct_BmnTrackFinder(void *p) {
      typedef ::BmnTrackFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnTrackFinder

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackFitter.
      typedef ::ROOT::Shadow::BmnTrackFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPropagator", &sobj->fPropagator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUpdate", &sobj->fUpdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofIterations", &sobj->fNofIterations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChiSqCut", &sobj->fChiSqCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinNofHits", &sobj->fMinNofHits);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnTrackFitter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackFitter : new ::BmnTrackFitter;
   }
   static void *newArray_BmnTrackFitter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackFitter[nElements] : new ::BmnTrackFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnTrackFitter(void *p) {
      delete ((::BmnTrackFitter*)p);
   }
   static void deleteArray_BmnTrackFitter(void *p) {
      delete [] ((::BmnTrackFitter*)p);
   }
   static void destruct_BmnTrackFitter(void *p) {
      typedef ::BmnTrackFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnTrackFitter

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackPropagator_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackPropagator.
      typedef ::ROOT::Shadow::BmnTrackPropagator ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackPropagator*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNavigator", &sobj->fNavigator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtrapolator", &sobj->fExtrapolator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMaterial", &sobj->fMaterial);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnTrackPropagator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackPropagator : new ::BmnTrackPropagator;
   }
   static void *newArray_BmnTrackPropagator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackPropagator[nElements] : new ::BmnTrackPropagator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnTrackPropagator(void *p) {
      delete ((::BmnTrackPropagator*)p);
   }
   static void deleteArray_BmnTrackPropagator(void *p) {
      delete [] ((::BmnTrackPropagator*)p);
   }
   static void destruct_BmnTrackPropagator(void *p) {
      typedef ::BmnTrackPropagator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnTrackPropagator

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackExtrapolator_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackExtrapolator.
      typedef ::ROOT::Shadow::BmnTrackExtrapolator ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackExtrapolator*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fField", &sobj->fField);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnTrackExtrapolator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackExtrapolator : new ::BmnTrackExtrapolator;
   }
   static void *newArray_BmnTrackExtrapolator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackExtrapolator[nElements] : new ::BmnTrackExtrapolator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnTrackExtrapolator(void *p) {
      delete ((::BmnTrackExtrapolator*)p);
   }
   static void deleteArray_BmnTrackExtrapolator(void *p) {
      delete [] ((::BmnTrackExtrapolator*)p);
   }
   static void destruct_BmnTrackExtrapolator(void *p) {
      typedef ::BmnTrackExtrapolator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnTrackExtrapolator

//______________________________________________________________________________
namespace ROOT {
   void BmnHitToTrackMerger_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnHitToTrackMerger.
      typedef ::ROOT::Shadow::BmnHitToTrackMerger ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnHitToTrackMerger*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPropagator", &sobj->fPropagator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilter", &sobj->fFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", &sobj->fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChiSqCut", &sobj->fChiSqCut);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnHitToTrackMerger(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnHitToTrackMerger : new ::BmnHitToTrackMerger;
   }
   static void *newArray_BmnHitToTrackMerger(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnHitToTrackMerger[nElements] : new ::BmnHitToTrackMerger[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnHitToTrackMerger(void *p) {
      delete ((::BmnHitToTrackMerger*)p);
   }
   static void deleteArray_BmnHitToTrackMerger(void *p) {
      delete [] ((::BmnHitToTrackMerger*)p);
   }
   static void destruct_BmnHitToTrackMerger(void *p) {
      typedef ::BmnHitToTrackMerger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnHitToTrackMerger

//______________________________________________________________________________
namespace ROOT {
   void BmnKalmanFilter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnKalmanFilter.
      typedef ::ROOT::Shadow::BmnKalmanFilter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnKalmanFilter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnKalmanFilter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnKalmanFilter : new ::BmnKalmanFilter;
   }
   static void *newArray_BmnKalmanFilter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnKalmanFilter[nElements] : new ::BmnKalmanFilter[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnKalmanFilter(void *p) {
      delete ((::BmnKalmanFilter*)p);
   }
   static void deleteArray_BmnKalmanFilter(void *p) {
      delete [] ((::BmnKalmanFilter*)p);
   }
   static void destruct_BmnKalmanFilter(void *p) {
      typedef ::BmnKalmanFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnKalmanFilter

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackingGeometryConstructor_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackingGeometryConstructor.
      typedef ::ROOT::Shadow::BmnTrackingGeometryConstructor ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackingGeometryConstructor*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeo", &sobj->fGeo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofTrdStations", &sobj->fNofTrdStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofMuchStations", &sobj->fNofMuchStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofMvdStations", &sobj->fNofMvdStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofStsStations", &sobj->fNofStsStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofMuchAbsorbers", &sobj->fNofMuchAbsorbers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet", (void*)&sobj->fDet);
      R__insp.InspectMember("BmnDetectorSetup", (void*)&sobj->fDet, "fDet.", false);
   }

}

namespace ROOT {
} // end of namespace ROOT for class ::BmnTrackingGeometryConstructor

//______________________________________________________________________________
namespace ROOT {
   void BmnGeoNavigator_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnGeoNavigator.
      typedef ::ROOT::Shadow::BmnGeoNavigator ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnGeoNavigator*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnGeoNavigator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnGeoNavigator : new ::BmnGeoNavigator;
   }
   static void *newArray_BmnGeoNavigator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnGeoNavigator[nElements] : new ::BmnGeoNavigator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnGeoNavigator(void *p) {
      delete ((::BmnGeoNavigator*)p);
   }
   static void deleteArray_BmnGeoNavigator(void *p) {
      delete [] ((::BmnGeoNavigator*)p);
   }
   static void destruct_BmnGeoNavigator(void *p) {
      typedef ::BmnGeoNavigator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnGeoNavigator

//______________________________________________________________________________
namespace ROOT {
   void BmnMaterialEffects_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnMaterialEffects.
      typedef ::ROOT::Shadow::BmnMaterialEffects ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnMaterialEffects*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDownstream", &sobj->fDownstream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMass", &sobj->fMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsElectron", &sobj->fIsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMuon", &sobj->fIsMuon);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnMaterialEffects(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnMaterialEffects : new ::BmnMaterialEffects;
   }
   static void *newArray_BmnMaterialEffects(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnMaterialEffects[nElements] : new ::BmnMaterialEffects[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnMaterialEffects(void *p) {
      delete ((::BmnMaterialEffects*)p);
   }
   static void deleteArray_BmnMaterialEffects(void *p) {
      delete [] ((::BmnMaterialEffects*)p);
   }
   static void destruct_BmnMaterialEffects(void *p) {
      typedef ::BmnMaterialEffects current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnMaterialEffects

//______________________________________________________________________________
namespace ROOT {
   void BmnMaterialInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnMaterialInfo.
      typedef ::ROOT::Shadow::BmnMaterialInfo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnMaterialInfo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &sobj->fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRL", &sobj->fRL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRho", &sobj->fRho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &sobj->fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &sobj->fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZpos", &sobj->fZpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", (void*)&sobj->fName);
      R__insp.InspectMember("string", (void*)&sobj->fName, "fName.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnMaterialInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnMaterialInfo : new ::BmnMaterialInfo;
   }
   static void *newArray_BmnMaterialInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnMaterialInfo[nElements] : new ::BmnMaterialInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnMaterialInfo(void *p) {
      delete ((::BmnMaterialInfo*)p);
   }
   static void deleteArray_BmnMaterialInfo(void *p) {
      delete [] ((::BmnMaterialInfo*)p);
   }
   static void destruct_BmnMaterialInfo(void *p) {
      typedef ::BmnMaterialInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnMaterialInfo

//______________________________________________________________________________
namespace ROOT {
   void BmnTrackSelector_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class BmnTrackSelector.
      typedef ::ROOT::Shadow::BmnTrackSelector ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::BmnTrackSelector*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxChiSq", &sobj->fMaxChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinLastPlaneId", &sobj->fMinLastPlaneId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinNofHits", &sobj->fMinNofHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinMomentum", &sobj->fMinMomentum);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnTrackSelector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackSelector : new ::BmnTrackSelector;
   }
   static void *newArray_BmnTrackSelector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnTrackSelector[nElements] : new ::BmnTrackSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnTrackSelector(void *p) {
      delete ((::BmnTrackSelector*)p);
   }
   static void deleteArray_BmnTrackSelector(void *p) {
      delete [] ((::BmnTrackSelector*)p);
   }
   static void destruct_BmnTrackSelector(void *p) {
      typedef ::BmnTrackSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnTrackSelector

//______________________________________________________________________________
void BmnHitMatchingQA::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnHitMatchingQA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnHitMatchingQA::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnHitMatchingQA::Class(),this);
   }
}

//______________________________________________________________________________
void BmnHitMatchingQA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnHitMatchingQA.
      TClass *R__cl = ::BmnHitMatchingQA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_suffix", (void*)&_suffix);
      R__insp.InspectMember("string", (void*)&_suffix, "_suffix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detName", &detName);
      R__insp.InspectMember(detName, "detName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hY_matched_hits", &_hY_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hX_matched_hits", &_hX_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZ_matched_hits", &_hZ_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hY_not_matched_hits", &_hY_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hX_not_matched_hits", &_hX_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZ_not_matched_hits", &_hZ_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hY_well_matched_hits", &_hY_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hX_well_matched_hits", &_hX_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZ_well_matched_hits", &_hZ_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hY_wrong_matched_hits", &_hY_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hX_wrong_matched_hits", &_hX_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZ_wrong_matched_hits", &_hZ_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXY_matched_hits", &_hXY_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZY_matched_hits", &_hZY_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZX_matched_hits", &_hZX_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXY_not_matched_hits", &_hXY_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZY_not_matched_hits", &_hZY_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZX_not_matched_hits", &_hZX_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXY_well_matched_hits", &_hXY_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZY_well_matched_hits", &_hZY_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZX_well_matched_hits", &_hZX_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXY_wrong_matched_hits", &_hXY_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZY_wrong_matched_hits", &_hZY_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZX_wrong_matched_hits", &_hZX_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZXY_matched_hits", &_hZXY_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZXY_not_matched_hits", &_hZXY_not_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZXY_well_matched_hits", &_hZXY_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hZXY_wrong_matched_hits", &_hZXY_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hRdist_matched_hits", &_hRdist_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXdist_matched_hits", &_hXdist_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hYdist_matched_hits", &_hYdist_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hRdist_well_matched_hits", &_hRdist_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXdist_well_matched_hits", &_hXdist_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hYdist_well_matched_hits", &_hYdist_well_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hRdist_wrong_matched_hits", &_hRdist_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hXdist_wrong_matched_hits", &_hXdist_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hYdist_wrong_matched_hits", &_hYdist_wrong_matched_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hNumMcTrack", &_hNumMcTrack);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_BmnHitMatchingQA(void *p) {
      delete ((::BmnHitMatchingQA*)p);
   }
   static void deleteArray_BmnHitMatchingQA(void *p) {
      delete [] ((::BmnHitMatchingQA*)p);
   }
   static void destruct_BmnHitMatchingQA(void *p) {
      typedef ::BmnHitMatchingQA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnHitMatchingQA

//______________________________________________________________________________
void BmnGlobalTracking::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnGlobalTracking.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnGlobalTracking::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnGlobalTracking::Class(),this);
   }
}

//______________________________________________________________________________
void BmnGlobalTracking::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnGlobalTracking.
      TClass *R__cl = ::BmnGlobalTracking::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSeeds", &fSeeds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGemTracks", &fGemTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGemHits", &fGemHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc1Hits", &fMwpc1Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc2Hits", &fMwpc2Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc3Hits", &fMwpc3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch1Hits", &fDch1Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch2Hits", &fDch2Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof1Hits", &fTof1Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof2Hits", &fTof2Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGemMcPoints", &fGemMcPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof1McPoints", &fTof1McPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof2McPoints", &fTof2McPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch1McPoints", &fDch1McPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch2McPoints", &fDch2McPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcTracks", &fMcTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGlobalTracks", &fGlobalTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFinder", &fFinder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMerger", &fMerger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitter", &fFitter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPropagator", &fPropagator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUpdater", &fUpdater);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetConf", &fDetConf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet", (void*)&fDet);
      R__insp.InspectMember("BmnDetectorSetup", (void*)&fDet, "fDet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNo", &fEventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGlobHisto", &fGlobHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof1Histo", &fTof1Histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTof2Histo", &fTof2Histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch1Histo", &fDch1Histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDch2Histo", &fDch2Histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsHistogramsInitialized", &fIsHistogramsInitialized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeQA", &fMakeQA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRUN1", &isRUN1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChiSqCut", &fChiSqCut);
      FairTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnGlobalTracking(void *p) {
      return  p ? new(p) ::BmnGlobalTracking : new ::BmnGlobalTracking;
   }
   static void *newArray_BmnGlobalTracking(Long_t nElements, void *p) {
      return p ? new(p) ::BmnGlobalTracking[nElements] : new ::BmnGlobalTracking[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnGlobalTracking(void *p) {
      delete ((::BmnGlobalTracking*)p);
   }
   static void deleteArray_BmnGlobalTracking(void *p) {
      delete [] ((::BmnGlobalTracking*)p);
   }
   static void destruct_BmnGlobalTracking(void *p) {
      typedef ::BmnGlobalTracking current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnGlobalTracking

//______________________________________________________________________________
void BmnSeedFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnSeedFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnSeedFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnSeedFinder::Class(),this);
   }
}

//______________________________________________________________________________
void BmnSeedFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnSeedFinder.
      TClass *R__cl = ::BmnSeedFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitsBranchName", &fHitsBranchName);
      R__insp.InspectMember(fHitsBranchName, "fHitsBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeedsBranchName", &fSeedsBranchName);
      R__insp.InspectMember(fSeedsBranchName, "fSeedsBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRUN1", &isRUN1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeQA", &fMakeQA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isHistogramsInitialized", &isHistogramsInitialized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBins", &fNBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMin", &fMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax", &fMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNo", &fEventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet", (void*)&fDet);
      R__insp.InspectMember("BmnDetectorSetup", (void*)&fDet, "fDet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGemHitsArray", &fGemHitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc1HitsArray", &fMwpc1HitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc2HitsArray", &fMwpc2HitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc3HitsArray", &fMwpc3HitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeedHits", (void*)&fSeedHits);
      R__insp.InspectMember("vector<BmnHit*>", (void*)&fSeedHits, "fSeedHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSeedsArray", &fSeedsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCTracksArray", &fMCTracksArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGemPointsArray", &fGemPointsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc1PointsArray", &fMwpc1PointsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc2PointsArray", &fMwpc2PointsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMwpc3PointsArray", &fMwpc3PointsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fField", &fField);
      FairTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnSeedFinder(void *p) {
      return  p ? new(p) ::BmnSeedFinder : new ::BmnSeedFinder;
   }
   static void *newArray_BmnSeedFinder(Long_t nElements, void *p) {
      return p ? new(p) ::BmnSeedFinder[nElements] : new ::BmnSeedFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnSeedFinder(void *p) {
      delete ((::BmnSeedFinder*)p);
   }
   static void deleteArray_BmnSeedFinder(void *p) {
      delete [] ((::BmnSeedFinder*)p);
   }
   static void destruct_BmnSeedFinder(void *p) {
      typedef ::BmnSeedFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnSeedFinder

namespace ROOT {
   void maplEDetectorIdcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEDetectorIdcOboolgR_Dictionary();
   static void *new_maplEDetectorIdcOboolgR(void *p = 0);
   static void *newArray_maplEDetectorIdcOboolgR(Long_t size, void *p);
   static void delete_maplEDetectorIdcOboolgR(void *p);
   static void deleteArray_maplEDetectorIdcOboolgR(void *p);
   static void destruct_maplEDetectorIdcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<DetectorId,bool>*)
   {
      map<DetectorId,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<DetectorId,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<DetectorId,bool>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<DetectorId,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEDetectorIdcOboolgR_Dictionary, isa_proxy, 0,
                  sizeof(map<DetectorId,bool>) );
      instance.SetNew(&new_maplEDetectorIdcOboolgR);
      instance.SetNewArray(&newArray_maplEDetectorIdcOboolgR);
      instance.SetDelete(&delete_maplEDetectorIdcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEDetectorIdcOboolgR);
      instance.SetDestructor(&destruct_maplEDetectorIdcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<DetectorId,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<DetectorId,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEDetectorIdcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<DetectorId,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEDetectorIdcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<DetectorId,bool> : new map<DetectorId,bool>;
   }
   static void *newArray_maplEDetectorIdcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<DetectorId,bool>[nElements] : new map<DetectorId,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEDetectorIdcOboolgR(void *p) {
      delete ((map<DetectorId,bool>*)p);
   }
   static void deleteArray_maplEDetectorIdcOboolgR(void *p) {
      delete [] ((map<DetectorId,bool>*)p);
   }
   static void destruct_maplEDetectorIdcOboolgR(void *p) {
      typedef map<DetectorId,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<DetectorId,bool>

namespace ROOT {
   void vectorlEBmnHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEBmnHitmUgR_Dictionary();
   static void *new_vectorlEBmnHitmUgR(void *p = 0);
   static void *newArray_vectorlEBmnHitmUgR(Long_t size, void *p);
   static void delete_vectorlEBmnHitmUgR(void *p);
   static void deleteArray_vectorlEBmnHitmUgR(void *p);
   static void destruct_vectorlEBmnHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<BmnHit*>*)
   {
      vector<BmnHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<BmnHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<BmnHit*>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<BmnHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEBmnHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<BmnHit*>) );
      instance.SetNew(&new_vectorlEBmnHitmUgR);
      instance.SetNewArray(&newArray_vectorlEBmnHitmUgR);
      instance.SetDelete(&delete_vectorlEBmnHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEBmnHitmUgR);
      instance.SetDestructor(&destruct_vectorlEBmnHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<BmnHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<BmnHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEBmnHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<BmnHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEBmnHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BmnHit*> : new vector<BmnHit*>;
   }
   static void *newArray_vectorlEBmnHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BmnHit*>[nElements] : new vector<BmnHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEBmnHitmUgR(void *p) {
      delete ((vector<BmnHit*>*)p);
   }
   static void deleteArray_vectorlEBmnHitmUgR(void *p) {
      delete [] ((vector<BmnHit*>*)p);
   }
   static void destruct_vectorlEBmnHitmUgR(void *p) {
      typedef vector<BmnHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<BmnHit*>

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/globaltracking/G__GlobalTrackingDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__GlobalTrackingDict();

extern "C" void G__set_cpp_environmentG__GlobalTrackingDict() {
  G__cpp_reset_tagtableG__GlobalTrackingDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__GlobalTrackingDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BmnDetectorSetup */
static int G__G__GlobalTrackingDict_406_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnDetectorSetup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnDetectorSetup[n];
     } else {
       p = new((void*) gvp) BmnDetectorSetup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnDetectorSetup;
     } else {
       p = new((void*) gvp) BmnDetectorSetup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_406_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnDetectorSetup*) G__getstructoffset())->SetDet((DetectorId) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_406_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const BmnDetectorSetup*) G__getstructoffset())->GetDet((DetectorId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_406_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnDetectorSetup*) G__getstructoffset())->DetermineSetup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_406_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const BmnDetectorSetup*) G__getstructoffset())->ToString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_406_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnDetectorSetup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnDetectorSetup(*(BmnDetectorSetup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnDetectorSetup G__TBmnDetectorSetup;
static int G__G__GlobalTrackingDict_406_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnDetectorSetup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnDetectorSetup*) (soff+(sizeof(BmnDetectorSetup)*i)))->~G__TBmnDetectorSetup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnDetectorSetup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnDetectorSetup*) (soff))->~G__TBmnDetectorSetup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_406_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnDetectorSetup* dest = (BmnDetectorSetup*) G__getstructoffset();
   *dest = *(BmnDetectorSetup*) libp->para[0].ref;
   const BmnDetectorSetup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnGlobalTrackingQA */
static int G__G__GlobalTrackingDict_580_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGlobalTrackingQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGlobalTrackingQA[n];
     } else {
       p = new((void*) gvp) BmnGlobalTrackingQA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGlobalTrackingQA;
     } else {
       p = new((void*) gvp) BmnGlobalTrackingQA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGlobalTrackingQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnGlobalTrackingQA(*(string*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) BmnGlobalTrackingQA(*(string*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTrackingQA*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTrackingQA*) G__getstructoffset())->Write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnGlobalTrackingQA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTrackingQA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnGlobalTrackingQA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnGlobalTrackingQA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTrackingQA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTrackingQA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnGlobalTrackingQA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTrackingQA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_580_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnGlobalTrackingQA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_580_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnGlobalTrackingQA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnGlobalTrackingQA(*(BmnGlobalTrackingQA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnGlobalTrackingQA G__TBmnGlobalTrackingQA;
static int G__G__GlobalTrackingDict_580_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnGlobalTrackingQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnGlobalTrackingQA*) (soff+(sizeof(BmnGlobalTrackingQA)*i)))->~G__TBmnGlobalTrackingQA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnGlobalTrackingQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnGlobalTrackingQA*) (soff))->~G__TBmnGlobalTrackingQA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_580_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGlobalTrackingQA* dest = (BmnGlobalTrackingQA*) G__getstructoffset();
   *dest = *(BmnGlobalTrackingQA*) libp->para[0].ref;
   const BmnGlobalTrackingQA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackFinder */
static int G__G__GlobalTrackingDict_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFinder[n];
     } else {
       p = new((void*) gvp) BmnTrackFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFinder;
     } else {
       p = new((void*) gvp) BmnTrackFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackFinder*) G__getstructoffset())->BranchTrackFind((TClonesArray*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackFinder*) G__getstructoffset())->NNTrackFind((TClonesArray*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_587_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnTrackFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnTrackFinder(*(BmnTrackFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnTrackFinder G__TBmnTrackFinder;
static int G__G__GlobalTrackingDict_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnTrackFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnTrackFinder*) (soff+(sizeof(BmnTrackFinder)*i)))->~G__TBmnTrackFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnTrackFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnTrackFinder*) (soff))->~G__TBmnTrackFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackFinder* dest = (BmnTrackFinder*) G__getstructoffset();
   *dest = *(BmnTrackFinder*) libp->para[0].ref;
   const BmnTrackFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnMaterialInfo */
static int G__G__GlobalTrackingDict_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnMaterialInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnMaterialInfo[n];
     } else {
       p = new((void*) gvp) BmnMaterialInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnMaterialInfo;
     } else {
       p = new((void*) gvp) BmnMaterialInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetRL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetRho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialInfo*) G__getstructoffset())->GetZpos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const BmnMaterialInfo*) G__getstructoffset())->GetName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetRL((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetRho((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetA((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetZpos((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnMaterialInfo*) G__getstructoffset())->SetName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const BmnMaterialInfo*) G__getstructoffset())->ToString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_626_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnMaterialInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnMaterialInfo(*(BmnMaterialInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnMaterialInfo G__TBmnMaterialInfo;
static int G__G__GlobalTrackingDict_626_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnMaterialInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnMaterialInfo*) (soff+(sizeof(BmnMaterialInfo)*i)))->~G__TBmnMaterialInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnMaterialInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnMaterialInfo*) (soff))->~G__TBmnMaterialInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_626_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnMaterialInfo* dest = (BmnMaterialInfo*) G__getstructoffset();
   *dest = *(BmnMaterialInfo*) libp->para[0].ref;
   const BmnMaterialInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnGeoNavigator */
static int G__G__GlobalTrackingDict_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGeoNavigator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGeoNavigator[n];
     } else {
       p = new((void*) gvp) BmnGeoNavigator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGeoNavigator;
     } else {
       p = new((void*) gvp) BmnGeoNavigator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnGeoNavigator*) G__getstructoffset())->FindIntersections((FairTrackParam*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, *(vector<BmnMaterialInfo>*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnGeoNavigator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnGeoNavigator(*(BmnGeoNavigator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnGeoNavigator G__TBmnGeoNavigator;
static int G__G__GlobalTrackingDict_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnGeoNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnGeoNavigator*) (soff+(sizeof(BmnGeoNavigator)*i)))->~G__TBmnGeoNavigator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnGeoNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnGeoNavigator*) (soff))->~G__TBmnGeoNavigator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGeoNavigator* dest = (BmnGeoNavigator*) G__getstructoffset();
   *dest = *(BmnGeoNavigator*) libp->para[0].ref;
   const BmnGeoNavigator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackExtrapolator */
static int G__G__GlobalTrackingDict_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackExtrapolator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackExtrapolator[n];
     } else {
       p = new((void*) gvp) BmnTrackExtrapolator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackExtrapolator;
     } else {
       p = new((void*) gvp) BmnTrackExtrapolator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackExtrapolator*) G__getstructoffset())->RK4TrackExtrapolate((FairTrackParam*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (vector<Double_t>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const BmnTrackExtrapolator*) G__getstructoffset())->RK4Order(*(vector<Double_t>*) libp->para[0].ref, (Float_t) G__double(libp->para[1])
, *(vector<Double_t>*) libp->para[2].ref, (Float_t) G__double(libp->para[3])
, *(vector<Double_t>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnTrackExtrapolator*) G__getstructoffset())->CalcOut((Float_t) G__double(libp->para[0]), (Float_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const BmnTrackExtrapolator*) G__getstructoffset())->TransportC(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackExtrapolator*) G__getstructoffset())->LineTrackExtrapolate((FairTrackParam*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (vector<Double_t>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnTrackExtrapolator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnTrackExtrapolator(*(BmnTrackExtrapolator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnTrackExtrapolator G__TBmnTrackExtrapolator;
static int G__G__GlobalTrackingDict_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnTrackExtrapolator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnTrackExtrapolator*) (soff+(sizeof(BmnTrackExtrapolator)*i)))->~G__TBmnTrackExtrapolator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnTrackExtrapolator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnTrackExtrapolator*) (soff))->~G__TBmnTrackExtrapolator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackExtrapolator* dest = (BmnTrackExtrapolator*) G__getstructoffset();
   *dest = *(BmnTrackExtrapolator*) libp->para[0].ref;
   const BmnTrackExtrapolator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnMaterialEffects */
static int G__G__GlobalTrackingDict_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnMaterialEffects* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnMaterialEffects[n];
     } else {
       p = new((void*) gvp) BmnMaterialEffects[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnMaterialEffects;
     } else {
       p = new((void*) gvp) BmnMaterialEffects;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnMaterialEffects*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const BmnMaterialEffects*) G__getstructoffset())->AddEnergyLoss((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const BmnMaterialEffects*) G__getstructoffset())->AddThickScatter((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const BmnMaterialEffects*) G__getstructoffset())->AddThinScatter((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->CalcThetaSq((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->EnergyLoss((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->dEdx((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->BetheBloch((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->BetheBlochElectron((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->CalcQpAfterEloss((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->CalcSigmaSqQp((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->CalcSigmaSqQpElectron((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->CalcI((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->BetheHeitler((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->PairProduction((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->BetheBlochSimple((BmnMaterialInfo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_645_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnMaterialEffects*) G__getstructoffset())->MPVEnergyLoss((FairTrackParam*) G__int(libp->para[0]), (BmnMaterialInfo*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_645_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnMaterialEffects* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnMaterialEffects(*(BmnMaterialEffects*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnMaterialEffects G__TBmnMaterialEffects;
static int G__G__GlobalTrackingDict_645_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnMaterialEffects*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnMaterialEffects*) (soff+(sizeof(BmnMaterialEffects)*i)))->~G__TBmnMaterialEffects();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnMaterialEffects*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnMaterialEffects*) (soff))->~G__TBmnMaterialEffects();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_645_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnMaterialEffects* dest = (BmnMaterialEffects*) G__getstructoffset();
   *dest = *(BmnMaterialEffects*) libp->para[0].ref;
   const BmnMaterialEffects& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackPropagator */
static int G__G__GlobalTrackingDict_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackPropagator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackPropagator[n];
     } else {
       p = new((void*) gvp) BmnTrackPropagator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackPropagator;
     } else {
       p = new((void*) gvp) BmnTrackPropagator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackPropagator*) G__getstructoffset())->TGeoTrackPropagate((FairTrackParam*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (vector<Double_t>*) G__int(libp->para[3])
, (Float_t*) G__int(libp->para[4]), *((TString*) G__int(libp->para[5]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_646_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BmnTrackPropagator*) G__getstructoffset())->IsParCorrect((FairTrackParam*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_646_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackPropagator*) G__getstructoffset())->UpdateF(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_646_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnTrackPropagator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnTrackPropagator(*(BmnTrackPropagator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnTrackPropagator G__TBmnTrackPropagator;
static int G__G__GlobalTrackingDict_646_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnTrackPropagator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnTrackPropagator*) (soff+(sizeof(BmnTrackPropagator)*i)))->~G__TBmnTrackPropagator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnTrackPropagator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnTrackPropagator*) (soff))->~G__TBmnTrackPropagator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_646_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackPropagator* dest = (BmnTrackPropagator*) G__getstructoffset();
   *dest = *(BmnTrackPropagator*) libp->para[0].ref;
   const BmnTrackPropagator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnKalmanFilter */
static int G__G__GlobalTrackingDict_987_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnKalmanFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnKalmanFilter[n];
     } else {
       p = new((void*) gvp) BmnKalmanFilter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnKalmanFilter;
     } else {
       p = new((void*) gvp) BmnKalmanFilter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_987_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnKalmanFilter*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (BmnHit*) G__int(libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_987_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnKalmanFilter*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (CbmTofHit*) G__int(libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_987_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnKalmanFilter*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (CbmStsHit*) G__int(libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_987_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnKalmanFilter*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (BmnGemHit*) G__int(libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_987_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnKalmanFilter*) G__getstructoffset())->Update((FairTrackParam*) G__int(libp->para[0]), (BmnDchHit*) G__int(libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_987_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnKalmanFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnKalmanFilter(*(BmnKalmanFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnKalmanFilter G__TBmnKalmanFilter;
static int G__G__GlobalTrackingDict_987_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnKalmanFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnKalmanFilter*) (soff+(sizeof(BmnKalmanFilter)*i)))->~G__TBmnKalmanFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnKalmanFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnKalmanFilter*) (soff))->~G__TBmnKalmanFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_987_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnKalmanFilter* dest = (BmnKalmanFilter*) G__getstructoffset();
   *dest = *(BmnKalmanFilter*) libp->para[0].ref;
   const BmnKalmanFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnHitToTrackMerger */
static int G__G__GlobalTrackingDict_988_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnHitToTrackMerger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnHitToTrackMerger[n];
     } else {
       p = new((void*) gvp) BmnHitToTrackMerger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnHitToTrackMerger;
     } else {
       p = new((void*) gvp) BmnHitToTrackMerger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_988_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnHitToTrackMerger*) G__getstructoffset())->NearestTofHitMerge((TClonesArray*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_988_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnHitToTrackMerger*) G__getstructoffset())->AllTofHitsMerge((TClonesArray*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_988_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnHitToTrackMerger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnHitToTrackMerger(*(BmnHitToTrackMerger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnHitToTrackMerger G__TBmnHitToTrackMerger;
static int G__G__GlobalTrackingDict_988_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnHitToTrackMerger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnHitToTrackMerger*) (soff+(sizeof(BmnHitToTrackMerger)*i)))->~G__TBmnHitToTrackMerger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnHitToTrackMerger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnHitToTrackMerger*) (soff))->~G__TBmnHitToTrackMerger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_988_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnHitToTrackMerger* dest = (BmnHitToTrackMerger*) G__getstructoffset();
   *dest = *(BmnHitToTrackMerger*) libp->para[0].ref;
   const BmnHitToTrackMerger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackFitter */
static int G__G__GlobalTrackingDict_996_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter[n];
     } else {
       p = new((void*) gvp) BmnTrackFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter;
     } else {
       p = new((void*) gvp) BmnTrackFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_996_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) BmnTrackFitter(
(BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackFitter((BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BmnTrackFitter((BmnTrackPropagator*) G__int(libp->para[0]), (BmnKalmanFilter*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_996_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitImp((CbmGlobalTrack*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2]), (TClonesArray*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitImp((CbmGlobalTrack*) G__int(libp->para[0]), (TClonesArray*) G__int(libp->para[1])
, (TClonesArray*) G__int(libp->para[2]), (TClonesArray*) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_996_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitIter((CbmGlobalTrack*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitIter((CbmGlobalTrack*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_996_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitSmooth((CbmGlobalTrack*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((BmnTrackFitter*) G__getstructoffset())->FitSmooth((CbmGlobalTrack*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_996_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackFitter*) G__getstructoffset())->Smooth((BmnFitNode*) G__int(libp->para[0]), (BmnFitNode*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_996_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnTrackFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnTrackFitter(*(BmnTrackFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnTrackFitter G__TBmnTrackFitter;
static int G__G__GlobalTrackingDict_996_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnTrackFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnTrackFitter*) (soff+(sizeof(BmnTrackFitter)*i)))->~G__TBmnTrackFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnTrackFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnTrackFitter*) (soff))->~G__TBmnTrackFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_996_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackFitter* dest = (BmnTrackFitter*) G__getstructoffset();
   *dest = *(BmnTrackFitter*) libp->para[0].ref;
   const BmnTrackFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackingGeometryConstructor */
static int G__G__GlobalTrackingDict_1000_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnTrackingGeometryConstructor::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofTrdStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofMuchStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofMuchTrdStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofMvdStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofStsStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->GetNofMuchAbsorbers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1000_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackingGeometryConstructor*) G__getstructoffset())->ConvertMuchToAbsoluteStationNr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnTrackSelector */
static int G__G__GlobalTrackingDict_1001_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackSelector[n];
     } else {
       p = new((void*) gvp) BmnTrackSelector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnTrackSelector;
     } else {
       p = new((void*) gvp) BmnTrackSelector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnTrackSelector(
(Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) BmnTrackSelector(
(Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnTrackSelector*) G__getstructoffset())->GetMaxChiSq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnTrackSelector*) G__getstructoffset())->GetMinLastPlaneId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnTrackSelector*) G__getstructoffset())->GetMinNofHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const BmnTrackSelector*) G__getstructoffset())->GetMinMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackSelector*) G__getstructoffset())->SetMaxChiSq((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackSelector*) G__getstructoffset())->SetMinLastPlaneId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackSelector*) G__getstructoffset())->SetMinNofHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnTrackSelector*) G__getstructoffset())->SetMinMomentum((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1001_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnTrackSelector*) G__getstructoffset())->TrackSelectCuts((TClonesArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_1001_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnTrackSelector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnTrackSelector(*(BmnTrackSelector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnTrackSelector G__TBmnTrackSelector;
static int G__G__GlobalTrackingDict_1001_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnTrackSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnTrackSelector*) (soff+(sizeof(BmnTrackSelector)*i)))->~G__TBmnTrackSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnTrackSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnTrackSelector*) (soff))->~G__TBmnTrackSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_1001_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnTrackSelector* dest = (BmnTrackSelector*) G__getstructoffset();
   *dest = *(BmnTrackSelector*) libp->para[0].ref;
   const BmnTrackSelector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnHitMatchingQA */
static int G__G__GlobalTrackingDict_1005_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnHitMatchingQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnHitMatchingQA(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) BmnHitMatchingQA(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnHitMatchingQA*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnHitMatchingQA*) G__getstructoffset())->Write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnHitMatchingQA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnHitMatchingQA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnHitMatchingQA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnHitMatchingQA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnHitMatchingQA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnHitMatchingQA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnHitMatchingQA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnHitMatchingQA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1005_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnHitMatchingQA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GlobalTrackingDict_1005_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BmnHitMatchingQA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BmnHitMatchingQA(*(BmnHitMatchingQA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnHitMatchingQA G__TBmnHitMatchingQA;
static int G__G__GlobalTrackingDict_1005_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnHitMatchingQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnHitMatchingQA*) (soff+(sizeof(BmnHitMatchingQA)*i)))->~G__TBmnHitMatchingQA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnHitMatchingQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnHitMatchingQA*) (soff))->~G__TBmnHitMatchingQA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GlobalTrackingDict_1005_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnHitMatchingQA* dest = (BmnHitMatchingQA*) G__getstructoffset();
   *dest = *(BmnHitMatchingQA*) libp->para[0].ref;
   const BmnHitMatchingQA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnGlobalTracking */
static int G__G__GlobalTrackingDict_1221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnGlobalTracking* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGlobalTracking[n];
     } else {
       p = new((void*) gvp) BmnGlobalTracking[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnGlobalTracking;
     } else {
       p = new((void*) gvp) BmnGlobalTracking;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTracking*) G__getstructoffset())->SetRun1((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTracking*) G__getstructoffset())->SetMakeQA((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTracking*) G__getstructoffset())->SetDetConf((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const BmnGlobalTracking*) G__getstructoffset())->GetDetConf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnGlobalTracking::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTracking::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnGlobalTracking::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnGlobalTracking::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnGlobalTracking*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTracking::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnGlobalTracking::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnGlobalTracking::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1221_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnGlobalTracking::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnGlobalTracking G__TBmnGlobalTracking;
static int G__G__GlobalTrackingDict_1221_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnGlobalTracking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnGlobalTracking*) (soff+(sizeof(BmnGlobalTracking)*i)))->~G__TBmnGlobalTracking();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnGlobalTracking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnGlobalTracking*) (soff))->~G__TBmnGlobalTracking();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnSeedFinder */
static int G__G__GlobalTrackingDict_1222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnSeedFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnSeedFinder[n];
     } else {
       p = new((void*) gvp) BmnSeedFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnSeedFinder;
     } else {
       p = new((void*) gvp) BmnSeedFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->FindXYRSeeds((TH1F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->FindSeeds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BmnSeedFinder*) G__getstructoffset())->SearchTrackCandidates((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->SearchTrackCandInLine(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (BmnGemTrack*) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Bool_t) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BmnSeedFinder*) G__getstructoffset())->CalculateTrackParams((BmnGemTrack*) G__int(libp->para[0]), *((vector<BmnHit*>*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnSeedFinder*) G__getstructoffset())->DoSeeding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BmnSeedFinder*) G__getstructoffset())->DoSeedingRun1((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((BmnSeedFinder*) G__getstructoffset())->CircleFit(*((vector<BmnHit*>*) G__int(libp->para[0])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((BmnSeedFinder*) G__getstructoffset())->LineFit(*((vector<BmnHit*>*) G__int(libp->para[0])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->SetRun1((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->SetMakeQA((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BmnSeedFinder*) G__getstructoffset())->Dist((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BmnSeedFinder*) G__getstructoffset())->Sqr((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnSeedFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnSeedFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnSeedFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnSeedFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnSeedFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnSeedFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnSeedFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnSeedFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GlobalTrackingDict_1222_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnSeedFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnSeedFinder G__TBmnSeedFinder;
static int G__G__GlobalTrackingDict_1222_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnSeedFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnSeedFinder*) (soff+(sizeof(BmnSeedFinder)*i)))->~G__TBmnSeedFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnSeedFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnSeedFinder*) (soff))->~G__TBmnSeedFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BmnDetectorSetup */

/* BmnGlobalTrackingQA */

/* BmnTrackFinder */

/* BmnMaterialInfo */

/* BmnGeoNavigator */

/* BmnTrackExtrapolator */

/* BmnMaterialEffects */

/* BmnTrackPropagator */

/* BmnKalmanFilter */

/* BmnHitToTrackMerger */

/* BmnTrackFitter */

/* BmnTrackingGeometryConstructor */

/* BmnTrackSelector */

/* BmnHitMatchingQA */

/* BmnGlobalTracking */

/* BmnSeedFinder */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GlobalTrackingDict {
 public:
  G__Sizep2memfuncG__GlobalTrackingDict(): p(&G__Sizep2memfuncG__GlobalTrackingDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GlobalTrackingDict::*p)();
};

size_t G__get_sizep2memfuncG__GlobalTrackingDict()
{
  G__Sizep2memfuncG__GlobalTrackingDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GlobalTrackingDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA))) {
     BmnGlobalTrackingQA *G__Lderived;
     G__Lderived=(BmnGlobalTrackingQA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA))) {
     BmnHitMatchingQA *G__Lderived;
     G__Lderived=(BmnHitMatchingQA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking))) {
     BmnGlobalTracking *G__Lderived;
     G__Lderived=(BmnGlobalTracking*)0x1000;
     {
       FairTask *G__Lpbase=(FairTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_FairTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder))) {
     BmnSeedFinder *G__Lderived;
     G__Lderived=(BmnSeedFinder*)0x1000;
     {
       FairTask *G__Lpbase=(FairTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_FairTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder),G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GlobalTrackingDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorId,Bool_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorId,bool>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DetectorId,bool,less<DetectorId> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSymlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BmnMaterialInfo>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TClonesArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<TClonesArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::queue<TClonesArray*> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TBranch*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*,less<int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TString>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_listlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::list<TString>*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::multimap<TString,TArrayI> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,TChain*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,Double_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<FairLink>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<FairLink,less<FairLink> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BmnFitNode>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Double_t,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Float_t,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<float,int>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<float,int,less<float> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MD5Mod_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TProof::MD5Mod_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TProof::MD5Mod_t,less<TString> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BmnHit*>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BmnDetectorSetup */
static void G__setup_memvarBmnDetectorSetup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup));
   { BmnDetectorSetup *p; p=(BmnDetectorSetup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR),G__defined_typename("map<DetectorId,Bool_t>"),-1,4,"fDet=",0,"Map DetectorId to detector presence");
   }
   G__tag_memvar_reset();
}


   /* BmnGlobalTrackingQA */
static void G__setup_memvarBmnGlobalTrackingQA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA));
   { BmnGlobalTrackingQA *p; p=(BmnGlobalTrackingQA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string),-1,-1,4,"_suffix=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hTrackLength)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hTrackLength=",0,"distribution of track lengths [cm]");
   G__memvar_setup((void*)((long)(&p->_hY_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hY_global=",0,"distribution of hits over X-coordinate");
   G__memvar_setup((void*)((long)(&p->_hX_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hX_global=",0,"distribution of hits over Y-coordinate");
   G__memvar_setup((void*)((long)(&p->_hZ_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hZ_global=",0,"distribution of hits over Z-coordinate");
   G__memvar_setup((void*)((long)(&p->_hXY_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hXY_global=",0,"distribution of hits in XY-plane");
   G__memvar_setup((void*)((long)(&p->_hZY_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZY_global=",0,"distribution of hits in YZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZX_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZX_global=",0,"distribution of hits in XZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZXY_global)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH3F),-1,-1,1,"_hZXY_global=",0,"distribution of hits in 3D");
   G__memvar_setup((void*)((long)(&p->_hNumOfHitsDistr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hNumOfHitsDistr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hMomentumDistr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hMomentumDistr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hPx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hPy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hPz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hHitDist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hHitDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hHitXDist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hHitXDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hHitYDist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hHitYDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hHitChiSq)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hHitChiSq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hNumMcTrack)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hNumMcTrack=",0,"number of references to MC tracks in one Global track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnTrackFinder */
static void G__setup_memvarBmnTrackFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder));
   { BmnTrackFinder *p; p=(BmnTrackFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnMaterialInfo */
static void G__setup_memvarBmnMaterialInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo));
   { BmnMaterialInfo *p; p=(BmnMaterialInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fLength=",0,"Length of the material [cm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRL=",0,"Radiation length [cm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRho=",0,"Density [g/cm^3]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fZ=",0,"Atomic number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fA=",0,"Atomic mass");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fZpos=",0,"Z position of the material");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string),-1,-1,4,"fName=",0,"Name of material");
   }
   G__tag_memvar_reset();
}


   /* BmnGeoNavigator */
static void G__setup_memvarBmnGeoNavigator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator));
   { BmnGeoNavigator *p; p=(BmnGeoNavigator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnTrackExtrapolator */
static void G__setup_memvarBmnTrackExtrapolator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator));
   { BmnTrackExtrapolator *p; p=(BmnTrackExtrapolator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_FairField),-1,-1,4,"fField=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnMaterialEffects */
static void G__setup_memvarBmnMaterialEffects(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects));
   { BmnMaterialEffects *p; p=(BmnMaterialEffects*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDownstream=",0,"Propagation direction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMass=",0,"Hypothesis on particle mass");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsElectron=",0,"True if particle is an electron or positron");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsMuon=",0,"True if particle is muon");
   }
   G__tag_memvar_reset();
}


   /* BmnTrackPropagator */
static void G__setup_memvarBmnTrackPropagator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator));
   { BmnTrackPropagator *p; p=(BmnTrackPropagator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator),-1,-1,4,"fNavigator=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator),-1,-1,4,"fExtrapolator=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects),-1,-1,4,"fMaterial=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnKalmanFilter */
static void G__setup_memvarBmnKalmanFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter));
   { BmnKalmanFilter *p; p=(BmnKalmanFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnHitToTrackMerger */
static void G__setup_memvarBmnHitToTrackMerger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger));
   { BmnHitToTrackMerger *p; p=(BmnHitToTrackMerger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator),-1,-1,4,"fPropagator=",0,"Track propagation tool");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter),-1,-1,4,"fFilter=",0,"Track update tool");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDG=",0,"PDG hypothesis");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fChiSqCut=",0,"Chi square cut for hit to be attached to track.");
   }
   G__tag_memvar_reset();
}


   /* BmnTrackFitter */
static void G__setup_memvarBmnTrackFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter));
   { BmnTrackFitter *p; p=(BmnTrackFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator),-1,-1,4,"fPropagator=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter),-1,-1,4,"fUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofIterations=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fChiSqCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinNofHits=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnTrackingGeometryConstructor */
static void G__setup_memvarBmnTrackingGeometryConstructor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor));
   { BmnTrackingGeometryConstructor *p; p=(BmnTrackingGeometryConstructor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TGeoManager),-1,-1,4,"fGeo=",0,"Pointer to full geometry");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofTrdStations=",0,"Number of TRD stations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofMuchStations=",0,"Number of MUCH stations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofMvdStations=",0,"Number of MVD stations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofStsStations=",0,"Number of STS stations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofMuchAbsorbers=",0,"Number of MUCH absorbers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup),-1,-1,4,"fDet=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnTrackSelector */
static void G__setup_memvarBmnTrackSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector));
   { BmnTrackSelector *p; p=(BmnTrackSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMaxChiSq=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinLastPlaneId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinNofHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMinMomentum=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnHitMatchingQA */
static void G__setup_memvarBmnHitMatchingQA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA));
   { BmnHitMatchingQA *p; p=(BmnHitMatchingQA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string),-1,-1,4,"_suffix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TString),-1,-1,4,"detName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hY_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hY_matched_hits=",0,"distribution of matched hits over X-coordinate");
   G__memvar_setup((void*)((long)(&p->_hX_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hX_matched_hits=",0,"distribution of matched hits over Y-coordinate");
   G__memvar_setup((void*)((long)(&p->_hZ_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hZ_matched_hits=",0,"distribution of matched hits over Z-coordinate");
   G__memvar_setup((void*)((long)(&p->_hY_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hY_not_matched_hits=",0,"distribution of not matched hits over X-coordinate");
   G__memvar_setup((void*)((long)(&p->_hX_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hX_not_matched_hits=",0,"distribution of not matched hits over Y-coordinate");
   G__memvar_setup((void*)((long)(&p->_hZ_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hZ_not_matched_hits=",0,"distribution of not matched hits over Z-coordinate");
   G__memvar_setup((void*)((long)(&p->_hY_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hY_well_matched_hits=",0,"distribution of well matched hits over X-coordinate");
   G__memvar_setup((void*)((long)(&p->_hX_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hX_well_matched_hits=",0,"distribution of well matched hits over Y-coordinate");
   G__memvar_setup((void*)((long)(&p->_hZ_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hZ_well_matched_hits=",0,"distribution of well matched hits over Z-coordinate");
   G__memvar_setup((void*)((long)(&p->_hY_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hY_wrong_matched_hits=",0,"distribution of wrong matched hits over X-coordinate");
   G__memvar_setup((void*)((long)(&p->_hX_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hX_wrong_matched_hits=",0,"distribution of wrong matched hits over Y-coordinate");
   G__memvar_setup((void*)((long)(&p->_hZ_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hZ_wrong_matched_hits=",0,"distribution of wrong matched hits over Z-coordinate");
   G__memvar_setup((void*)((long)(&p->_hXY_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hXY_matched_hits=",0,"distribution of matched hits in XY-plane");
   G__memvar_setup((void*)((long)(&p->_hZY_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZY_matched_hits=",0,"distribution of matched hits in YZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZX_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZX_matched_hits=",0,"distribution of matched hits in XZ-plane");
   G__memvar_setup((void*)((long)(&p->_hXY_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hXY_not_matched_hits=",0,"distribution of not matched hits in XY-plane");
   G__memvar_setup((void*)((long)(&p->_hZY_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZY_not_matched_hits=",0,"distribution of not matched hits in YZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZX_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZX_not_matched_hits=",0,"distribution of not matched hits in XZ-plane");
   G__memvar_setup((void*)((long)(&p->_hXY_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hXY_well_matched_hits=",0,"distribution of well matched hits in XY-plane");
   G__memvar_setup((void*)((long)(&p->_hZY_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZY_well_matched_hits=",0,"distribution of well matched hits in YZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZX_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZX_well_matched_hits=",0,"distribution of well matched hits in XZ-plane");
   G__memvar_setup((void*)((long)(&p->_hXY_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hXY_wrong_matched_hits=",0,"distribution of wrong matched hits in XY-plane");
   G__memvar_setup((void*)((long)(&p->_hZY_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZY_wrong_matched_hits=",0,"distribution of wrong matched hits in YZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZX_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH2F),-1,-1,1,"_hZX_wrong_matched_hits=",0,"distribution of wrong matched hits in XZ-plane");
   G__memvar_setup((void*)((long)(&p->_hZXY_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH3F),-1,-1,1,"_hZXY_matched_hits=",0,"distribution of matched hits in 3D");
   G__memvar_setup((void*)((long)(&p->_hZXY_not_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH3F),-1,-1,1,"_hZXY_not_matched_hits=",0,"distribution of not matched hits in 3D");
   G__memvar_setup((void*)((long)(&p->_hZXY_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH3F),-1,-1,1,"_hZXY_well_matched_hits=",0,"distribution of well matched hits in 3D");
   G__memvar_setup((void*)((long)(&p->_hZXY_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH3F),-1,-1,1,"_hZXY_wrong_matched_hits=",0,"distribution of wrong matched hits in 3D");
   G__memvar_setup((void*)((long)(&p->_hRdist_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hRdist_matched_hits=",0,"distribution of distances from matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hXdist_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hXdist_matched_hits=",0,"distribution of X-distances from matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hYdist_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hYdist_matched_hits=",0,"distribution of Y-distances from matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hRdist_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hRdist_well_matched_hits=",0,"distribution of distances from well matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hXdist_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hXdist_well_matched_hits=",0,"distribution of X-distances from well matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hYdist_well_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hYdist_well_matched_hits=",0,"distribution of Y-distances from well matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hRdist_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hRdist_wrong_matched_hits=",0,"distribution of distances from wrong matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hXdist_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hXdist_wrong_matched_hits=",0,"distribution of X-distances from wrong matched hit to track");
   G__memvar_setup((void*)((long)(&p->_hYdist_wrong_matched_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hYdist_wrong_matched_hits=",0,"distribution of Y-distances from wrong matched hit to track    ");
   G__memvar_setup((void*)((long)(&p->_hNumMcTrack)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TH1F),-1,-1,1,"_hNumMcTrack=",0,"number of references to MC tracks in one Global track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnGlobalTracking */
static void G__setup_memvarBmnGlobalTracking(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking));
   { BmnGlobalTracking *p; p=(BmnGlobalTracking*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fSeeds=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGemTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGemHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc1Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc2Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fDch1Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fDch2Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fTof1Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fTof2Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGemMcPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fTof1McPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fTof2McPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fDch1McPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fDch2McPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMcTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGlobalTracks=",0,"output BmnGlobalTrack array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder),-1,-1,4,"fFinder=",0,"track finder");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger),-1,-1,4,"fMerger=",0,"hit-to-track merger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter),-1,-1,4,"fFitter=",0,"track fitter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator),-1,-1,4,"fPropagator=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter),-1,-1,4,"fUpdater=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fDetConf=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup),-1,-1,4,"fDet=",0,"Detector presence information");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNo=",0,"event counter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA),-1,-1,4,"fGlobHisto=",0,"pointer to object needed only for QA creating");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),-1,-1,4,"fTof1Histo=",0,"pointer to object needed only for QA creating");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),-1,-1,4,"fTof2Histo=",0,"pointer to object needed only for QA creating");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),-1,-1,4,"fDch1Histo=",0,"pointer to object needed only for QA creating");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),-1,-1,4,"fDch2Histo=",0,"pointer to object needed only for QA creating");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsHistogramsInitialized=",0,"is QA histograms initialized or not");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeQA=",0,"create or not in output tree branch with QA histograms");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isRUN1=",0,"temporary flag for switching between full GEM-geometry and prototype");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDG=",0,"PDG hypothesis");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fChiSqCut=",0,"Chi square cut for hit to be attached to track.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnSeedFinder */
static void G__setup_memvarBmnSeedFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder));
   { BmnSeedFinder *p; p=(BmnSeedFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TString),-1,-1,4,"fHitsBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TString),-1,-1,4,"fSeedsBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isRUN1=",0,"temporary flag for switching between full geometry and prototype");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeQA=",0,"create or not in output tree branch with QA histograms");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isHistogramsInitialized=",0,"is QA histograms initialized or not");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNBins=",0,"number of bins in histogram  ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNo=",0,"event counter");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup),-1,-1,4,"fDet=",0,"Detector presence information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGemHitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc1HitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc2HitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc3HitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR),G__defined_typename("vector<BmnHit*>"),-1,4,"fSeedHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fSeedsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMCTracksArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fGemPointsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc1PointsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc2PointsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClonesArray),-1,-1,4,"fMwpc3PointsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_FairField),-1,-1,4,"fField=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GlobalTrackingDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBmnDetectorSetup(void) {
   /* BmnDetectorSetup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup));
   G__memfunc_setup("BmnDetectorSetup",1640,G__G__GlobalTrackingDict_406_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet",585,G__G__GlobalTrackingDict_406_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'DetectorId' - 0 - detId g - 'Bool_t' 0 - isDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet",573,G__G__GlobalTrackingDict_406_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'DetectorId' - 0 - detId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetermineSetup",1454,G__G__GlobalTrackingDict_406_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToString",826,G__G__GlobalTrackingDict_406_0_5, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckDetectorPresence",2125,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnDetectorSetup", 1640, G__G__GlobalTrackingDict_406_0_7, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup), -1, 0, 1, 1, 1, 0, "u 'BmnDetectorSetup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnDetectorSetup", 1766, G__G__GlobalTrackingDict_406_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_406_0_9, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnDetectorSetup), -1, 1, 1, 1, 1, 0, "u 'BmnDetectorSetup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnGlobalTrackingQA(void) {
   /* BmnGlobalTrackingQA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA));
   G__memfunc_setup("BmnGlobalTrackingQA",1843,G__G__GlobalTrackingDict_580_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnGlobalTrackingQA",1843,G__G__GlobalTrackingDict_580_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - suffix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__GlobalTrackingDict_580_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__G__GlobalTrackingDict_580_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GlobalTrackingDict_580_0_5, 85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnGlobalTrackingQA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GlobalTrackingDict_580_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTrackingQA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GlobalTrackingDict_580_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnGlobalTrackingQA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GlobalTrackingDict_580_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnGlobalTrackingQA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GlobalTrackingDict_580_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GlobalTrackingDict_580_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTrackingQA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GlobalTrackingDict_580_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnGlobalTrackingQA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GlobalTrackingDict_580_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTrackingQA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GlobalTrackingDict_580_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnGlobalTrackingQA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BmnGlobalTrackingQA", 1843, G__G__GlobalTrackingDict_580_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA), -1, 0, 1, 1, 1, 0, "u 'BmnGlobalTrackingQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnGlobalTrackingQA", 1969, G__G__GlobalTrackingDict_580_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_580_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA), -1, 1, 1, 1, 1, 0, "u 'BmnGlobalTrackingQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackFinder(void) {
   /* BmnTrackFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder));
   G__memfunc_setup("BmnTrackFinder",1386,G__G__GlobalTrackingDict_587_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BranchTrackFind",1476,G__G__GlobalTrackingDict_587_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'TClonesArray' - 0 - hits U 'TClonesArray' - 0 - trackSeeds "
"U 'TClonesArray' - 0 - tracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NNTrackFind",1042,G__G__GlobalTrackingDict_587_0_3, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'TClonesArray' - 0 - hits U 'TClonesArray' - 0 - trackSeeds "
"U 'TClonesArray' - 0 - tracks", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnTrackFinder", 1386, G__G__GlobalTrackingDict_587_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder), -1, 0, 1, 1, 1, 0, "u 'BmnTrackFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnTrackFinder", 1512, G__G__GlobalTrackingDict_587_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_587_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFinder), -1, 1, 1, 1, 1, 0, "u 'BmnTrackFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnMaterialInfo(void) {
   /* BmnMaterialInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo));
   G__memfunc_setup("BmnMaterialInfo",1496,G__G__GlobalTrackingDict_626_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__G__GlobalTrackingDict_626_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRL",446,G__G__GlobalTrackingDict_626_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRho",585,G__G__GlobalTrackingDict_626_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__GlobalTrackingDict_626_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__G__GlobalTrackingDict_626_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZpos",716,G__G__GlobalTrackingDict_626_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__G__GlobalTrackingDict_626_0_8, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLength",910,G__G__GlobalTrackingDict_626_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRL",458,G__G__GlobalTrackingDict_626_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRho",597,G__G__GlobalTrackingDict_626_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__G__GlobalTrackingDict_626_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetA",365,G__G__GlobalTrackingDict_626_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZpos",728,G__G__GlobalTrackingDict_626_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - zpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__G__GlobalTrackingDict_626_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToString",826,G__G__GlobalTrackingDict_626_0_16, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("BmnMaterialInfo", 1496, G__G__GlobalTrackingDict_626_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo), -1, 0, 1, 1, 1, 0, "u 'BmnMaterialInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnMaterialInfo", 1622, G__G__GlobalTrackingDict_626_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_626_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo), -1, 1, 1, 1, 1, 0, "u 'BmnMaterialInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnGeoNavigator(void) {
   /* BmnGeoNavigator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator));
   G__memfunc_setup("BmnGeoNavigator",1507,G__G__GlobalTrackingDict_627_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindIntersections",1771,G__G__GlobalTrackingDict_627_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 10 - par f - 'Float_t' 0 - zOut "
"u 'vector<BmnMaterialInfo,allocator<BmnMaterialInfo> >' 'vector<BmnMaterialInfo>' 1 - inter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTrack",905,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"U 'FairTrackParam' - 10 - par g - 'Bool_t' 0 - downstream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeStep",794,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialInfo), -1, 0, 1, 1, 4, 8, "f - 'Float_t' 0 '0.' step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcLength",981,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 8, "f - 'Float_t' 0 - zOut", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnGeoNavigator", 1507, G__G__GlobalTrackingDict_627_0_6, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator), -1, 0, 1, 1, 1, 0, "u 'BmnGeoNavigator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnGeoNavigator", 1633, G__G__GlobalTrackingDict_627_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_627_0_8, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGeoNavigator), -1, 1, 1, 1, 1, 0, "u 'BmnGeoNavigator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackExtrapolator(void) {
   /* BmnTrackExtrapolator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator));
   G__memfunc_setup("BmnTrackExtrapolator",2071,G__G__GlobalTrackingDict_644_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RK4TrackExtrapolate",1871,G__G__GlobalTrackingDict_644_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par f - 'Float_t' 0 - zOut "
"U 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - F", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RK4Order",717,G__G__GlobalTrackingDict_644_0_3, 121, -1, -1, 0, 5, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - xIn f - 'Float_t' 0 - zIn "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - xOut f - 'Float_t' 0 - zOut "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - derivs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcOut",683,G__G__GlobalTrackingDict_644_0_4, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"f - 'Float_t' 0 - in F - 'Float_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransportC",1040,G__G__GlobalTrackingDict_644_0_5, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - cIn u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - F "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - cOut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LineTrackExtrapolate",2054,G__G__GlobalTrackingDict_644_0_6, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par f - 'Float_t' 0 - zOut "
"U 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - F", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnTrackExtrapolator", 2071, G__G__GlobalTrackingDict_644_0_7, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator), -1, 0, 1, 1, 1, 0, "u 'BmnTrackExtrapolator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnTrackExtrapolator", 2197, G__G__GlobalTrackingDict_644_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_644_0_9, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator), -1, 1, 1, 1, 1, 0, "u 'BmnTrackExtrapolator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnMaterialEffects(void) {
   /* BmnMaterialEffects */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects));
   G__memfunc_setup("BmnMaterialEffects",1804,G__G__GlobalTrackingDict_645_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_645_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 4, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'BmnMaterialInfo' - 10 - mat "
"i - 'Int_t' 0 - pdg g - 'Bool_t' 0 - downstream", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddEnergyLoss",1300,G__G__GlobalTrackingDict_645_0_3, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 0 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddThickScatter",1490,G__G__GlobalTrackingDict_645_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 0 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddThinScatter",1394,G__G__GlobalTrackingDict_645_0_5, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 0 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcThetaSq",1069,G__G__GlobalTrackingDict_645_0_6, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergyLoss",1035,G__G__GlobalTrackingDict_645_0_7, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dEdx",389,G__G__GlobalTrackingDict_645_0_8, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetheBloch",976,G__G__GlobalTrackingDict_645_0_9, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetheBlochElectron",1804,G__G__GlobalTrackingDict_645_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcQpAfterEloss",1580,G__G__GlobalTrackingDict_645_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"f - 'Float_t' 0 - qp f - 'Float_t' 0 - eloss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSigmaSqQp",1257,G__G__GlobalTrackingDict_645_0_12, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSigmaSqQpElectron",2085,G__G__GlobalTrackingDict_645_0_13, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcI",444,G__G__GlobalTrackingDict_645_0_14, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "f - 'Float_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetheHeitler",1205,G__G__GlobalTrackingDict_645_0_15, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PairProduction",1459,G__G__GlobalTrackingDict_645_0_16, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetheBlochSimple",1594,G__G__GlobalTrackingDict_645_0_17, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPVEnergyLoss",1278,G__G__GlobalTrackingDict_645_0_18, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"U 'FairTrackParam' - 10 - par U 'BmnMaterialInfo' - 10 - mat", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnMaterialEffects", 1804, G__G__GlobalTrackingDict_645_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects), -1, 0, 1, 1, 1, 0, "u 'BmnMaterialEffects' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnMaterialEffects", 1930, G__G__GlobalTrackingDict_645_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_645_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnMaterialEffects), -1, 1, 1, 1, 1, 0, "u 'BmnMaterialEffects' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackPropagator(void) {
   /* BmnTrackPropagator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator));
   G__memfunc_setup("BmnTrackPropagator",1841,G__G__GlobalTrackingDict_646_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGeoTrackPropagate",1799,G__G__GlobalTrackingDict_646_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 6, 1, 1, 0, 
"U 'FairTrackParam' - 0 - parOut f - 'Float_t' 0 - zOut "
"i - 'Int_t' 0 - pdg U 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - F "
"F - 'Float_t' 0 - length u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsParCorrect",1201,G__G__GlobalTrackingDict_646_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairTrackParam' - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateF",681,G__G__GlobalTrackingDict_646_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - F u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - newF", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnTrackPropagator", 1841, G__G__GlobalTrackingDict_646_0_5, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator), -1, 0, 1, 1, 1, 0, "u 'BmnTrackPropagator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnTrackPropagator", 1967, G__G__GlobalTrackingDict_646_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_646_0_7, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackPropagator), -1, 1, 1, 1, 1, 0, "u 'BmnTrackPropagator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnKalmanFilter(void) {
   /* BmnKalmanFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter));
   G__memfunc_setup("BmnKalmanFilter",1495,G__G__GlobalTrackingDict_987_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_987_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'BmnHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_987_0_3, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmTofHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_987_0_4, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmStsHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_987_0_5, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'BmnGemHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__GlobalTrackingDict_987_0_6, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - par U 'BmnDchHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 4, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmPixelHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateWMF",845,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 4, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmPixelHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 4, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmStripHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateWMF",845,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 4, 0, 
"U 'FairTrackParam' - 0 - par U 'CbmStripHit' - 10 - hit "
"f - 'Float_t' 1 - chiSq", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnKalmanFilter", 1495, G__G__GlobalTrackingDict_987_0_11, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter), -1, 0, 1, 1, 1, 0, "u 'BmnKalmanFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnKalmanFilter", 1621, G__G__GlobalTrackingDict_987_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_987_0_13, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnKalmanFilter), -1, 1, 1, 1, 1, 0, "u 'BmnKalmanFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnHitToTrackMerger(void) {
   /* BmnHitToTrackMerger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger));
   G__memfunc_setup("BmnHitToTrackMerger",1884,G__G__GlobalTrackingDict_988_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NearestTofHitMerge",1808,G__G__GlobalTrackingDict_988_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'TClonesArray' - 0 - hits U 'TClonesArray' - 0 - tracks "
"U 'TClonesArray' - 0 - tofTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllTofHitsMerge",1482,G__G__GlobalTrackingDict_988_0_3, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 3, 1, 1, 0, 
"U 'TClonesArray' - 0 - hits U 'TClonesArray' - 0 - tracks "
"U 'TClonesArray' - 0 - tofTracks", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnHitToTrackMerger", 1884, G__G__GlobalTrackingDict_988_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger), -1, 0, 1, 1, 1, 0, "u 'BmnHitToTrackMerger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnHitToTrackMerger", 2010, G__G__GlobalTrackingDict_988_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_988_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger), -1, 1, 1, 1, 1, 0, "u 'BmnHitToTrackMerger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackFitter(void) {
   /* BmnTrackFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter));
   G__memfunc_setup("BmnTrackFitter",1408,G__G__GlobalTrackingDict_996_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnTrackFitter",1408,G__G__GlobalTrackingDict_996_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter), -1, 0, 5, 1, 1, 0, 
"U 'BmnTrackPropagator' - 0 - prp U 'BmnKalmanFilter' - 0 - upd "
"i - 'Int_t' 0 '2' nItr f - 'Float_t' 0 '15' chi "
"i - 'Int_t' 0 '3' nHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitImp",585,G__G__GlobalTrackingDict_996_0_3, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 5, 1, 1, 0, 
"U 'CbmGlobalTrack' - 0 - glTrack U 'TClonesArray' - 0 - stsTracks "
"U 'TClonesArray' - 0 - stsHits U 'TClonesArray' - 0 - tofHits "
"g - 'Bool_t' 0 'kTRUE' downstream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitIter",695,G__G__GlobalTrackingDict_996_0_4, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 2, 1, 1, 0, 
"U 'CbmGlobalTrack' - 0 - glTrack g - 'Bool_t' 0 'kTRUE' downstream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitSmooth",925,G__G__GlobalTrackingDict_996_0_5, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 2, 1, 1, 0, 
"U 'CbmGlobalTrack' - 0 - track g - 'Bool_t' 0 'kTRUE' downstream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smooth",634,G__G__GlobalTrackingDict_996_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'BmnFitNode' - 0 - thisNode U 'BmnFitNode' - 10 - prevNode", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnTrackFitter", 1408, G__G__GlobalTrackingDict_996_0_7, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter), -1, 0, 1, 1, 1, 0, "u 'BmnTrackFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnTrackFitter", 1534, G__G__GlobalTrackingDict_996_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_996_0_9, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackFitter), -1, 1, 1, 1, 1, 0, "u 'BmnTrackFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackingGeometryConstructor(void) {
   /* BmnTrackingGeometryConstructor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor));
   G__memfunc_setup("Instance",821,G__G__GlobalTrackingDict_1000_0_1, 85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (BmnTrackingGeometryConstructor* (*)())(&BmnTrackingGeometryConstructor::Instance) ), 0);
   G__memfunc_setup("GetNofTrdStations",1730,G__G__GlobalTrackingDict_1000_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofMuchStations",1829,G__G__GlobalTrackingDict_1000_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofMuchTrdStations",2127,G__G__GlobalTrackingDict_1000_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofMvdStations",1727,G__G__GlobalTrackingDict_1000_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofStsStations",1746,G__G__GlobalTrackingDict_1000_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofMuchAbsorbers",1907,G__G__GlobalTrackingDict_1000_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertMuchToAbsoluteStationNr",3090,G__G__GlobalTrackingDict_1000_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - station i - 'Int_t' 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnTrackingGeometryConstructor",3138,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnTrackingGeometryConstructor",3138,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor), -1, 0, 1, 1, 4, 0, "u 'BmnTrackingGeometryConstructor' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor), -1, 1, 1, 1, 4, 1, "u 'BmnTrackingGeometryConstructor' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnTrackSelector(void) {
   /* BmnTrackSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector));
   G__memfunc_setup("BmnTrackSelector",1619,G__G__GlobalTrackingDict_1001_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnTrackSelector",1619,G__G__GlobalTrackingDict_1001_0_2, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector), -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - maxChiSq i - 'Int_t' 0 - minLastPlaneId "
"i - 'Int_t' 0 - minNofHits f - 'Float_t' 0 - minMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxChiSq",1054,G__G__GlobalTrackingDict_1001_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinLastPlaneId",1653,G__G__GlobalTrackingDict_1001_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinNofHits",1279,G__G__GlobalTrackingDict_1001_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinMomentum",1430,G__G__GlobalTrackingDict_1001_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxChiSq",1066,G__G__GlobalTrackingDict_1001_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxChiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinLastPlaneId",1665,G__G__GlobalTrackingDict_1001_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - minLastPlaneId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinNofHits",1291,G__G__GlobalTrackingDict_1001_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - minNofHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinMomentum",1442,G__G__GlobalTrackingDict_1001_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - minMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackSelectCuts",1524,G__G__GlobalTrackingDict_1001_0_11, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 1, 1, 1, 0, "U 'TClonesArray' - 0 - tracks", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BmnTrackSelector", 1619, G__G__GlobalTrackingDict_1001_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector), -1, 0, 1, 1, 1, 0, "u 'BmnTrackSelector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnTrackSelector", 1745, G__G__GlobalTrackingDict_1001_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_1001_0_14, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnTrackSelector), -1, 1, 1, 1, 1, 0, "u 'BmnTrackSelector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnHitMatchingQA(void) {
   /* BmnHitMatchingQA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA));
   G__memfunc_setup("BmnHitMatchingQA",1535,G__G__GlobalTrackingDict_1005_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__GlobalTrackingDict_1005_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__G__GlobalTrackingDict_1005_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GlobalTrackingDict_1005_0_4, 85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnHitMatchingQA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GlobalTrackingDict_1005_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnHitMatchingQA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GlobalTrackingDict_1005_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnHitMatchingQA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GlobalTrackingDict_1005_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnHitMatchingQA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GlobalTrackingDict_1005_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GlobalTrackingDict_1005_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnHitMatchingQA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GlobalTrackingDict_1005_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnHitMatchingQA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GlobalTrackingDict_1005_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnHitMatchingQA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GlobalTrackingDict_1005_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnHitMatchingQA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BmnHitMatchingQA", 1535, G__G__GlobalTrackingDict_1005_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA), -1, 0, 1, 1, 1, 0, "u 'BmnHitMatchingQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnHitMatchingQA", 1661, G__G__GlobalTrackingDict_1005_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GlobalTrackingDict_1005_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA), -1, 1, 1, 1, 1, 0, "u 'BmnHitMatchingQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnGlobalTracking(void) {
   /* BmnGlobalTracking */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking));
   G__memfunc_setup("BmnGlobalTracking",1697,G__G__GlobalTrackingDict_1221_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_InitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRun1",658,G__G__GlobalTrackingDict_1221_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMakeQA",828,G__G__GlobalTrackingDict_1221_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - makeQA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetConf",975,G__G__GlobalTrackingDict_1221_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"g - 'Bool_t' 0 - gem g - 'Bool_t' 0 - tof1 "
"g - 'Bool_t' 0 - dch1 g - 'Bool_t' 0 - dch2 "
"g - 'Bool_t' 0 - tof2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetConf",963,G__G__GlobalTrackingDict_1221_0_8, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateLength",1520,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunTrackReconstruction",2316,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectTracksForTofMerging",2529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NearestHitMergeGEM",1728,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 1, 1, 4, 0, "U 'BmnGlobalTrack' - 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NearestHitMergeTOF",1744,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 2, 1, 4, 0, 
"U 'BmnGlobalTrack' - 0 - tr i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NearestHitMergeDCH",1718,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 2, 1, 4, 0, 
"U 'BmnGlobalTrack' - 0 - tr i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Refit",506,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 1, 1, 4, 0, "U 'BmnGlobalTrack' - 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EfficiencyCalculation",2148,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run1GlobalTrackFinder",2052,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHoughHistogram",1840,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 5, 1, 4, 0, 
"U 'TH1F' - 0 - h U 'TGraph' - 0 - orig "
"U 'TH2F' - 0 - cm U 'TGraph' - 0 - seeds "
"U 'TClonesArray' - 0 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IdChecker",866,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - refId i - 'Int_t' 0 - hitId "
"u 'TVector3' - 0 - pos U 'BmnHitMatchingQA' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillIndexMap",1181,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'map<int,int,less<int>,allocator<pair<const int,int> > >' 'map<Int_t,Int_t>' 1 - indexes i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillGlobHistoQA",1444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'BmnGlobalTrack' - 0 - tr i - 'Int_t' 0 - node "
"u 'TVector3' - 0 - pos", "filling histograms for global tracking QA", (void*) NULL, 0);
   G__memfunc_setup("FillMatchHistoQA",1549,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'BmnGlobalTrack' - 0 - tr i - 'Int_t' 0 - nodeId "
"u 'TVector3' - 0 - pos U 'BmnHitMatchingQA' - 0 - hist", "filling histograms for hits matching QA", (void*) NULL, 0);
   G__memfunc_setup("BmnGlobalTracking",1697,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnGlobalTracking), -1, 0, 1, 1, 4, 0, "u 'BmnGlobalTracking' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GlobalTrackingDict_1221_0_24, 85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnGlobalTracking::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GlobalTrackingDict_1221_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTracking::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GlobalTrackingDict_1221_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnGlobalTracking::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GlobalTrackingDict_1221_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnGlobalTracking::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GlobalTrackingDict_1221_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GlobalTrackingDict_1221_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTracking::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GlobalTrackingDict_1221_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnGlobalTracking::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GlobalTrackingDict_1221_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnGlobalTracking::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GlobalTrackingDict_1221_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnGlobalTracking::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnGlobalTracking", 1823, G__G__GlobalTrackingDict_1221_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnSeedFinder(void) {
   /* BmnSeedFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder));
   G__memfunc_setup("BmnSeedFinder",1270,G__G__GlobalTrackingDict_1222_0_1, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnSeedFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindXYRSeeds",1144,G__G__GlobalTrackingDict_1222_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSeeds",885,G__G__GlobalTrackingDict_1222_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - station i - 'Int_t' 0 - gate "
"g - 'Bool_t' 0 - isIdeal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SearchTrackCandidates",2107,G__G__GlobalTrackingDict_1222_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - startStation i - 'Int_t' 0 - gate "
"g - 'Bool_t' 0 - isIdeal g - 'Bool_t' 0 - isLeft", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SearchTrackCandInLine",2048,G__G__GlobalTrackingDict_1222_0_5, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - y "
"U 'BmnGemTrack' - 0 - tr I - 'Int_t' 0 - hitCntr "
"I - 'Int_t' 0 - maxDist I - 'Int_t' 0 - dist "
"I - 'Int_t' 0 - startBin I - 'Int_t' 0 - prevStation "
"i - 'Int_t' 0 - gate g - 'Bool_t' 0 - isIdeal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateTrackParams",2023,G__G__GlobalTrackingDict_1222_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'BmnGemTrack' - 0 - tr u 'vector<BmnHit*,allocator<BmnHit*> >' 'vector<BmnHit*>' 0 - hits "
"u 'TVector3' - 0 - circPar u 'TVector3' - 0 - linePar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoSeeding",882,G__G__GlobalTrackingDict_1222_0_7, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoSeedingRun1",1240,G__G__GlobalTrackingDict_1222_0_8, 105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_BmnStatus), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nBins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CircleFit",885,G__G__GlobalTrackingDict_1222_0_9, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TVector3), -1, 0, 1, 1, 1, 0, "u 'vector<BmnHit*,allocator<BmnHit*> >' 'vector<BmnHit*>' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LineFit",683,G__G__GlobalTrackingDict_1222_0_10, 117, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TVector3), -1, 0, 1, 1, 1, 0, "u 'vector<BmnHit*,allocator<BmnHit*> >' 'vector<BmnHit*>' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun1",658,G__G__GlobalTrackingDict_1222_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMakeQA",828,G__G__GlobalTrackingDict_1222_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - qa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dist",404,G__G__GlobalTrackingDict_1222_0_13, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x1 f - 'Float_t' 0 - y1 "
"f - 'Float_t' 0 - x2 f - 'Float_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sqr",310,G__G__GlobalTrackingDict_1222_0_14, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_InitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GlobalTrackingDict_1222_0_18, 85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnSeedFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GlobalTrackingDict_1222_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnSeedFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GlobalTrackingDict_1222_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnSeedFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GlobalTrackingDict_1222_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnSeedFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GlobalTrackingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GlobalTrackingDict_1222_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GlobalTrackingDict_1222_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnSeedFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GlobalTrackingDict_1222_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnSeedFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GlobalTrackingDict_1222_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnSeedFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GlobalTrackingDict_1222_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnSeedFinder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnSeedFinder", 1396, G__G__GlobalTrackingDict_1222_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GlobalTrackingDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GlobalTrackingDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GlobalTrackingDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GlobalTrackingDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_DetectorId = { "DetectorId" , 101 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR = { "map<double,int,less<double>,allocator<pair<const double,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnDetectorSetup = { "BmnDetectorSetup" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR = { "map<DetectorId,bool,less<DetectorId>,allocator<pair<const DetectorId,bool> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA = { "BmnGlobalTrackingQA" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnStatus = { "BmnStatus" , 101 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackFinder = { "BmnTrackFinder" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSymlEfloatgR = { "TMatrixTSym<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_FairTrackParam = { "FairTrackParam" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnMaterialInfo = { "BmnMaterialInfo" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGeoNavigator = { "BmnGeoNavigator" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR = { "vector<BmnMaterialInfo,allocator<BmnMaterialInfo> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BmnMaterialInfo,allocator<BmnMaterialInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_FairField = { "FairField" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackExtrapolator = { "BmnTrackExtrapolator" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnMaterialEffects = { "BmnMaterialEffects" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackPropagator = { "BmnTrackPropagator" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_CbmPixelHit = { "CbmPixelHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_CbmStripHit = { "CbmStripHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR = { "map<TString,TObject*,less<TString>,allocator<pair<const TString,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR = { "deque<TClonesArray*,allocator<TClonesArray*> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR = { "queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString>,allocator<pair<const TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR = { "map<TString,TClonesArray*,less<TString>,allocator<pair<const TString,TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR = { "map<TString,FairTSBufferFunctional*,less<TString>,allocator<pair<const TString,FairTSBufferFunctional*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR = { "map<TString,FairWriteoutBuffer*,less<TString>,allocator<pair<const TString,FairWriteoutBuffer*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR = { "map<int,TBranch*,less<int>,allocator<pair<const int,TBranch*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_listlETStringcOallocatorlETStringgRsPgR = { "list<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR = { "map<TString,TChain*,less<TString>,allocator<pair<const TString,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR = { "map<TString,list<TString,allocator<TString> >*,less<TString>,allocator<pair<const TString,list<TString,allocator<TString> >*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR = { "multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString>,allocator<pair<const TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR = { "map<unsigned int,TChain*,less<unsigned int>,allocator<pair<const unsigned int,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR = { "set<FairLink,less<FairLink>,allocator<FairLink> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnHit = { "BmnHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_CbmTofHit = { "CbmTofHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_CbmStsHit = { "CbmStsHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGemHit = { "BmnGemHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnDchHit = { "BmnDchHit" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnKalmanFilter = { "BmnKalmanFilter" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnHitToTrackMerger = { "BmnHitToTrackMerger" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnFitNode = { "BmnFitNode" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_CbmGlobalTrack = { "CbmGlobalTrack" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR = { "vector<BmnFitNode,allocator<BmnFitNode> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BmnFitNode,allocator<BmnFitNode> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackFitter = { "BmnTrackFitter" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor = { "BmnTrackingGeometryConstructor" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnTrackSelector = { "BmnTrackSelector" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_InitStatus = { "InitStatus" , 101 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_FairTask = { "FairTask" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnHitMatchingQA = { "BmnHitMatchingQA" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGlobalTrack = { "BmnGlobalTrack" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGemTrack = { "BmnGemTrack" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR = { "map<float,int,less<float>,allocator<pair<const float,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR = { "map<TString,TProof::MD5Mod_t,less<TString>,allocator<pair<const TString,TProof::MD5Mod_t> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnGlobalTracking = { "BmnGlobalTracking" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_BmnSeedFinder = { "BmnSeedFinder" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR = { "vector<BmnHit*,allocator<BmnHit*> >" , 99 , -1 };
G__linked_taginfo G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BmnHit*,allocator<BmnHit*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GlobalTrackingDict() {
  G__G__GlobalTrackingDictLN_TClass.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TBuffer.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMemberInspector.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TObject.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TNamed.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TString.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_string.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TClonesArray.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_DetectorId.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnDetectorSetup.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TH1F.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TH2F.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TH3F.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TGeoManager.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnStatus.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackFinder.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSymlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TVector3.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_FairTrackParam.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnMaterialInfo.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGeoNavigator.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_FairField.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackExtrapolator.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnMaterialEffects.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackPropagator.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_CbmPixelHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_CbmStripHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_listlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_CbmTofHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_CbmStsHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGemHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnDchHit.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnKalmanFilter.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnHitToTrackMerger.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnFitNode.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_CbmGlobalTrack.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackFitter.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnTrackSelector.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TTask.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_InitStatus.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_FairTask.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnHitMatchingQA.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGlobalTrack.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGemTrack.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_TGraph.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnGlobalTracking.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_BmnSeedFinder.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR.tagnum = -1 ;
  G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GlobalTrackingDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_string);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_DetectorId);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnDetectorSetup),sizeof(BmnDetectorSetup),-1,263424,(char*)NULL,G__setup_memvarBmnDetectorSetup,G__setup_memfuncBmnDetectorSetup);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEDetectorIdcOboolcOlesslEDetectorIdgRcOallocatorlEpairlEconstsPDetectorIdcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TH3F);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGlobalTrackingQA),sizeof(BmnGlobalTrackingQA),-1,324864,(char*)NULL,G__setup_memvarBmnGlobalTrackingQA,G__setup_memfuncBmnGlobalTrackingQA);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackFinder),sizeof(BmnTrackFinder),-1,263424,(char*)NULL,G__setup_memvarBmnTrackFinder,G__setup_memfuncBmnTrackFinder);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSymlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_FairTrackParam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnMaterialInfo),sizeof(BmnMaterialInfo),-1,263424,(char*)NULL,G__setup_memvarBmnMaterialInfo,G__setup_memfuncBmnMaterialInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGeoNavigator),sizeof(BmnGeoNavigator),-1,263424,(char*)NULL,G__setup_memvarBmnGeoNavigator,G__setup_memfuncBmnGeoNavigator);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnMaterialInfocOallocatorlEBmnMaterialInfogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_FairField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackExtrapolator),sizeof(BmnTrackExtrapolator),-1,263424,(char*)NULL,G__setup_memvarBmnTrackExtrapolator,G__setup_memfuncBmnTrackExtrapolator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnMaterialEffects),sizeof(BmnMaterialEffects),-1,263424,(char*)NULL,G__setup_memvarBmnMaterialEffects,G__setup_memfuncBmnMaterialEffects);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackPropagator),sizeof(BmnTrackPropagator),-1,263424,(char*)NULL,G__setup_memvarBmnTrackPropagator,G__setup_memfuncBmnTrackPropagator);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_CbmPixelHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_CbmStripHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_listlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_CbmTofHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_CbmStsHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGemHit);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnDchHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnKalmanFilter),sizeof(BmnKalmanFilter),-1,263424,(char*)NULL,G__setup_memvarBmnKalmanFilter,G__setup_memfuncBmnKalmanFilter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnHitToTrackMerger),sizeof(BmnHitToTrackMerger),-1,263424,(char*)NULL,G__setup_memvarBmnHitToTrackMerger,G__setup_memfuncBmnHitToTrackMerger);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnFitNode);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_CbmGlobalTrack);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnFitNodecOallocatorlEBmnFitNodegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackFitter),sizeof(BmnTrackFitter),-1,296192,(char*)NULL,G__setup_memvarBmnTrackFitter,G__setup_memfuncBmnTrackFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackingGeometryConstructor),sizeof(BmnTrackingGeometryConstructor),-1,265984,(char*)NULL,G__setup_memvarBmnTrackingGeometryConstructor,G__setup_memfuncBmnTrackingGeometryConstructor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnTrackSelector),sizeof(BmnTrackSelector),-1,296192,(char*)NULL,G__setup_memvarBmnTrackSelector,G__setup_memfuncBmnTrackSelector);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TTask);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_InitStatus);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_FairTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnHitMatchingQA),sizeof(BmnHitMatchingQA),-1,324608,(char*)NULL,G__setup_memvarBmnHitMatchingQA,G__setup_memfuncBmnHitMatchingQA);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGlobalTrack);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGemTrack);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnGlobalTracking),sizeof(BmnGlobalTracking),-1,325376,(char*)NULL,G__setup_memvarBmnGlobalTracking,G__setup_memfuncBmnGlobalTracking);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_BmnSeedFinder),sizeof(BmnSeedFinder),-1,324864,(char*)NULL,G__setup_memvarBmnSeedFinder,G__setup_memfuncBmnSeedFinder);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_vectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GlobalTrackingDictLN_reverse_iteratorlEvectorlEBmnHitmUcOallocatorlEBmnHitmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG__GlobalTrackingDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GlobalTrackingDict()");
  G__set_cpp_environmentG__GlobalTrackingDict();
  G__cpp_setup_tagtableG__GlobalTrackingDict();

  G__cpp_setup_inheritanceG__GlobalTrackingDict();

  G__cpp_setup_typetableG__GlobalTrackingDict();

  G__cpp_setup_memvarG__GlobalTrackingDict();

  G__cpp_setup_memfuncG__GlobalTrackingDict();
  G__cpp_setup_globalG__GlobalTrackingDict();
  G__cpp_setup_funcG__GlobalTrackingDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GlobalTrackingDict();
  return;
}
class G__cpp_setup_initG__GlobalTrackingDict {
  public:
    G__cpp_setup_initG__GlobalTrackingDict() { G__add_setup_func("G__GlobalTrackingDict",(G__incsetup)(&G__cpp_setupG__GlobalTrackingDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GlobalTrackingDict() { G__remove_setup_func("G__GlobalTrackingDict"); }
};
G__cpp_setup_initG__GlobalTrackingDict G__cpp_setup_initializerG__GlobalTrackingDict;

