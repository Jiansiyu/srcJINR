//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:02:36 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddIgeneratorsdIG__GenDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__GenDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void FairAsciiGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairAsciiGenerator(void *p = 0);
   static void *newArray_FairAsciiGenerator(Long_t size, void *p);
   static void delete_FairAsciiGenerator(void *p);
   static void deleteArray_FairAsciiGenerator(void *p);
   static void destruct_FairAsciiGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairAsciiGenerator*)
   {
      ::FairAsciiGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairAsciiGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairAsciiGenerator", ::FairAsciiGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairAsciiGenerator.h", 36,
                  typeid(::FairAsciiGenerator), DefineBehavior(ptr, ptr),
                  &::FairAsciiGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairAsciiGenerator) );
      instance.SetNew(&new_FairAsciiGenerator);
      instance.SetNewArray(&newArray_FairAsciiGenerator);
      instance.SetDelete(&delete_FairAsciiGenerator);
      instance.SetDeleteArray(&deleteArray_FairAsciiGenerator);
      instance.SetDestructor(&destruct_FairAsciiGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairAsciiGenerator*)
   {
      return GenerateInitInstanceLocal((::FairAsciiGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairAsciiGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairBoxGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairBoxGenerator(void *p = 0);
   static void *newArray_FairBoxGenerator(Long_t size, void *p);
   static void delete_FairBoxGenerator(void *p);
   static void deleteArray_FairBoxGenerator(void *p);
   static void destruct_FairBoxGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairBoxGenerator*)
   {
      ::FairBoxGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairBoxGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairBoxGenerator", ::FairBoxGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairBoxGenerator.h", 37,
                  typeid(::FairBoxGenerator), DefineBehavior(ptr, ptr),
                  &::FairBoxGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairBoxGenerator) );
      instance.SetNew(&new_FairBoxGenerator);
      instance.SetNewArray(&newArray_FairBoxGenerator);
      instance.SetDelete(&delete_FairBoxGenerator);
      instance.SetDeleteArray(&deleteArray_FairBoxGenerator);
      instance.SetDestructor(&destruct_FairBoxGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairBoxGenerator*)
   {
      return GenerateInitInstanceLocal((::FairBoxGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairBoxGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairIonGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairIonGenerator(void *p = 0);
   static void *newArray_FairIonGenerator(Long_t size, void *p);
   static void delete_FairIonGenerator(void *p);
   static void deleteArray_FairIonGenerator(void *p);
   static void destruct_FairIonGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairIonGenerator*)
   {
      ::FairIonGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairIonGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairIonGenerator", ::FairIonGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairIonGenerator.h", 22,
                  typeid(::FairIonGenerator), DefineBehavior(ptr, ptr),
                  &::FairIonGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairIonGenerator) );
      instance.SetNew(&new_FairIonGenerator);
      instance.SetNewArray(&newArray_FairIonGenerator);
      instance.SetDelete(&delete_FairIonGenerator);
      instance.SetDeleteArray(&deleteArray_FairIonGenerator);
      instance.SetDestructor(&destruct_FairIonGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairIonGenerator*)
   {
      return GenerateInitInstanceLocal((::FairIonGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairIonGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParticleGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParticleGenerator(void *p = 0);
   static void *newArray_FairParticleGenerator(Long_t size, void *p);
   static void delete_FairParticleGenerator(void *p);
   static void deleteArray_FairParticleGenerator(void *p);
   static void destruct_FairParticleGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParticleGenerator*)
   {
      ::FairParticleGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParticleGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParticleGenerator", ::FairParticleGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairParticleGenerator.h", 27,
                  typeid(::FairParticleGenerator), DefineBehavior(ptr, ptr),
                  &::FairParticleGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairParticleGenerator) );
      instance.SetNew(&new_FairParticleGenerator);
      instance.SetNewArray(&newArray_FairParticleGenerator);
      instance.SetDelete(&delete_FairParticleGenerator);
      instance.SetDeleteArray(&deleteArray_FairParticleGenerator);
      instance.SetDestructor(&destruct_FairParticleGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParticleGenerator*)
   {
      return GenerateInitInstanceLocal((::FairParticleGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParticleGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairShieldGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairShieldGenerator(void *p = 0);
   static void *newArray_FairShieldGenerator(Long_t size, void *p);
   static void delete_FairShieldGenerator(void *p);
   static void deleteArray_FairShieldGenerator(void *p);
   static void destruct_FairShieldGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairShieldGenerator*)
   {
      ::FairShieldGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairShieldGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairShieldGenerator", ::FairShieldGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairShieldGenerator.h", 36,
                  typeid(::FairShieldGenerator), DefineBehavior(ptr, ptr),
                  &::FairShieldGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairShieldGenerator) );
      instance.SetNew(&new_FairShieldGenerator);
      instance.SetNewArray(&newArray_FairShieldGenerator);
      instance.SetDelete(&delete_FairShieldGenerator);
      instance.SetDeleteArray(&deleteArray_FairShieldGenerator);
      instance.SetDestructor(&destruct_FairShieldGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairShieldGenerator*)
   {
      return GenerateInitInstanceLocal((::FairShieldGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairShieldGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairPlutoGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairPlutoGenerator(void *p = 0);
   static void *newArray_FairPlutoGenerator(Long_t size, void *p);
   static void delete_FairPlutoGenerator(void *p);
   static void deleteArray_FairPlutoGenerator(void *p);
   static void destruct_FairPlutoGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairPlutoGenerator*)
   {
      ::FairPlutoGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairPlutoGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairPlutoGenerator", ::FairPlutoGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairPlutoGenerator.h", 31,
                  typeid(::FairPlutoGenerator), DefineBehavior(ptr, ptr),
                  &::FairPlutoGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairPlutoGenerator) );
      instance.SetNew(&new_FairPlutoGenerator);
      instance.SetNewArray(&newArray_FairPlutoGenerator);
      instance.SetDelete(&delete_FairPlutoGenerator);
      instance.SetDeleteArray(&deleteArray_FairPlutoGenerator);
      instance.SetDestructor(&destruct_FairPlutoGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairPlutoGenerator*)
   {
      return GenerateInitInstanceLocal((::FairPlutoGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairPlutoGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairPlutoReactionGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairPlutoReactionGenerator(void *p = 0);
   static void *newArray_FairPlutoReactionGenerator(Long_t size, void *p);
   static void delete_FairPlutoReactionGenerator(void *p);
   static void deleteArray_FairPlutoReactionGenerator(void *p);
   static void destruct_FairPlutoReactionGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairPlutoReactionGenerator*)
   {
      ::FairPlutoReactionGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairPlutoReactionGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairPlutoReactionGenerator", ::FairPlutoReactionGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairPlutoReactionGenerator.h", 38,
                  typeid(::FairPlutoReactionGenerator), DefineBehavior(ptr, ptr),
                  &::FairPlutoReactionGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairPlutoReactionGenerator) );
      instance.SetNew(&new_FairPlutoReactionGenerator);
      instance.SetNewArray(&newArray_FairPlutoReactionGenerator);
      instance.SetDelete(&delete_FairPlutoReactionGenerator);
      instance.SetDeleteArray(&deleteArray_FairPlutoReactionGenerator);
      instance.SetDestructor(&destruct_FairPlutoReactionGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairPlutoReactionGenerator*)
   {
      return GenerateInitInstanceLocal((::FairPlutoReactionGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairPlutoReactionGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairUrqmdGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairUrqmdGenerator(void *p = 0);
   static void *newArray_FairUrqmdGenerator(Long_t size, void *p);
   static void delete_FairUrqmdGenerator(void *p);
   static void deleteArray_FairUrqmdGenerator(void *p);
   static void destruct_FairUrqmdGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairUrqmdGenerator*)
   {
      ::FairUrqmdGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairUrqmdGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairUrqmdGenerator", ::FairUrqmdGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairUrqmdGenerator.h", 33,
                  typeid(::FairUrqmdGenerator), DefineBehavior(ptr, ptr),
                  &::FairUrqmdGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairUrqmdGenerator) );
      instance.SetNew(&new_FairUrqmdGenerator);
      instance.SetNewArray(&newArray_FairUrqmdGenerator);
      instance.SetDelete(&delete_FairUrqmdGenerator);
      instance.SetDeleteArray(&deleteArray_FairUrqmdGenerator);
      instance.SetDestructor(&destruct_FairUrqmdGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairUrqmdGenerator*)
   {
      return GenerateInitInstanceLocal((::FairUrqmdGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairUrqmdGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairEvtGenGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairEvtGenGenerator(void *p = 0);
   static void *newArray_FairEvtGenGenerator(Long_t size, void *p);
   static void delete_FairEvtGenGenerator(void *p);
   static void deleteArray_FairEvtGenGenerator(void *p);
   static void destruct_FairEvtGenGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairEvtGenGenerator*)
   {
      ::FairEvtGenGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairEvtGenGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairEvtGenGenerator", ::FairEvtGenGenerator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/generators/FairEvtGenGenerator.h", 90,
                  typeid(::FairEvtGenGenerator), DefineBehavior(ptr, ptr),
                  &::FairEvtGenGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::FairEvtGenGenerator) );
      instance.SetNew(&new_FairEvtGenGenerator);
      instance.SetNewArray(&newArray_FairEvtGenGenerator);
      instance.SetDelete(&delete_FairEvtGenGenerator);
      instance.SetDeleteArray(&deleteArray_FairEvtGenGenerator);
      instance.SetDestructor(&destruct_FairEvtGenGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairEvtGenGenerator*)
   {
      return GenerateInitInstanceLocal((::FairEvtGenGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairEvtGenGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *FairAsciiGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairAsciiGenerator::Class_Name()
{
   return "FairAsciiGenerator";
}

//______________________________________________________________________________
const char *FairAsciiGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairAsciiGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairAsciiGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairAsciiGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairAsciiGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairAsciiGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairAsciiGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairAsciiGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairBoxGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairBoxGenerator::Class_Name()
{
   return "FairBoxGenerator";
}

//______________________________________________________________________________
const char *FairBoxGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairBoxGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairBoxGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairBoxGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairBoxGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairBoxGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairBoxGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairBoxGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairIonGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairIonGenerator::Class_Name()
{
   return "FairIonGenerator";
}

//______________________________________________________________________________
const char *FairIonGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairIonGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairIonGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairIonGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairIonGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairIonGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairIonGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairIonGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParticleGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParticleGenerator::Class_Name()
{
   return "FairParticleGenerator";
}

//______________________________________________________________________________
const char *FairParticleGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParticleGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParticleGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParticleGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParticleGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParticleGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParticleGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParticleGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairShieldGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairShieldGenerator::Class_Name()
{
   return "FairShieldGenerator";
}

//______________________________________________________________________________
const char *FairShieldGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairShieldGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairShieldGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairShieldGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairShieldGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairShieldGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairShieldGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairShieldGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairPlutoGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairPlutoGenerator::Class_Name()
{
   return "FairPlutoGenerator";
}

//______________________________________________________________________________
const char *FairPlutoGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairPlutoGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairPlutoGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairPlutoGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairPlutoReactionGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairPlutoReactionGenerator::Class_Name()
{
   return "FairPlutoReactionGenerator";
}

//______________________________________________________________________________
const char *FairPlutoReactionGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoReactionGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairPlutoReactionGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoReactionGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairPlutoReactionGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoReactionGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairPlutoReactionGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairPlutoReactionGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairUrqmdGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairUrqmdGenerator::Class_Name()
{
   return "FairUrqmdGenerator";
}

//______________________________________________________________________________
const char *FairUrqmdGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairUrqmdGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairUrqmdGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairUrqmdGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairUrqmdGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairUrqmdGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairUrqmdGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairUrqmdGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairEvtGenGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairEvtGenGenerator::Class_Name()
{
   return "FairEvtGenGenerator";
}

//______________________________________________________________________________
const char *FairEvtGenGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairEvtGenGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairEvtGenGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairEvtGenGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairEvtGenGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairEvtGenGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairEvtGenGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairEvtGenGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void FairAsciiGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairAsciiGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairAsciiGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairAsciiGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairAsciiGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairAsciiGenerator.
      TClass *R__cl = ::FairAsciiGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairAsciiGenerator(void *p) {
      return  p ? new(p) ::FairAsciiGenerator : new ::FairAsciiGenerator;
   }
   static void *newArray_FairAsciiGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairAsciiGenerator[nElements] : new ::FairAsciiGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairAsciiGenerator(void *p) {
      delete ((::FairAsciiGenerator*)p);
   }
   static void deleteArray_FairAsciiGenerator(void *p) {
      delete [] ((::FairAsciiGenerator*)p);
   }
   static void destruct_FairAsciiGenerator(void *p) {
      typedef ::FairAsciiGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairAsciiGenerator

//______________________________________________________________________________
void FairIonGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairIonGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairIonGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairIonGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairIonGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairIonGenerator.
      TClass *R__cl = ::FairIonGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx", &fPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy", &fPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz", &fPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVx", &fVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVy", &fVy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVz", &fVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIon", &fIon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ", &fQ);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairIonGenerator(void *p) {
      return  p ? new(p) ::FairIonGenerator : new ::FairIonGenerator;
   }
   static void *newArray_FairIonGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairIonGenerator[nElements] : new ::FairIonGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairIonGenerator(void *p) {
      delete ((::FairIonGenerator*)p);
   }
   static void deleteArray_FairIonGenerator(void *p) {
      delete [] ((::FairIonGenerator*)p);
   }
   static void destruct_FairIonGenerator(void *p) {
      typedef ::FairIonGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairIonGenerator

//______________________________________________________________________________
void FairParticleGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParticleGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParticleGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParticleGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairParticleGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParticleGenerator.
      TClass *R__cl = ::FairParticleGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGType", &fPDGType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx", &fPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy", &fPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz", &fPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVx", &fVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVy", &fVy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVz", &fVz);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParticleGenerator(void *p) {
      return  p ? new(p) ::FairParticleGenerator : new ::FairParticleGenerator;
   }
   static void *newArray_FairParticleGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairParticleGenerator[nElements] : new ::FairParticleGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParticleGenerator(void *p) {
      delete ((::FairParticleGenerator*)p);
   }
   static void deleteArray_FairParticleGenerator(void *p) {
      delete [] ((::FairParticleGenerator*)p);
   }
   static void destruct_FairParticleGenerator(void *p) {
      typedef ::FairParticleGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParticleGenerator

//______________________________________________________________________________
void FairPlutoGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairPlutoGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairPlutoGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairPlutoGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairPlutoGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairPlutoGenerator.
      TClass *R__cl = ::FairPlutoGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputTree", &fInputTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairPlutoGenerator(void *p) {
      return  p ? new(p) ::FairPlutoGenerator : new ::FairPlutoGenerator;
   }
   static void *newArray_FairPlutoGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairPlutoGenerator[nElements] : new ::FairPlutoGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairPlutoGenerator(void *p) {
      delete ((::FairPlutoGenerator*)p);
   }
   static void deleteArray_FairPlutoGenerator(void *p) {
      delete [] ((::FairPlutoGenerator*)p);
   }
   static void destruct_FairPlutoGenerator(void *p) {
      typedef ::FairPlutoGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairPlutoGenerator

//______________________________________________________________________________
void FairPlutoReactionGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairPlutoReactionGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairPlutoReactionGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairPlutoReactionGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairPlutoReactionGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairPlutoReactionGenerator.
      TClass *R__cl = ::FairPlutoReactionGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvent", &iEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaction", &fReaction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlutoFairGenerator", &fPlutoFairGenerator);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairPlutoReactionGenerator(void *p) {
      return  p ? new(p) ::FairPlutoReactionGenerator : new ::FairPlutoReactionGenerator;
   }
   static void *newArray_FairPlutoReactionGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairPlutoReactionGenerator[nElements] : new ::FairPlutoReactionGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairPlutoReactionGenerator(void *p) {
      delete ((::FairPlutoReactionGenerator*)p);
   }
   static void deleteArray_FairPlutoReactionGenerator(void *p) {
      delete [] ((::FairPlutoReactionGenerator*)p);
   }
   static void destruct_FairPlutoReactionGenerator(void *p) {
      typedef ::FairPlutoReactionGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairPlutoReactionGenerator

//______________________________________________________________________________
void FairShieldGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairShieldGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairShieldGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairShieldGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairShieldGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairShieldGenerator.
      TClass *R__cl = ::FairShieldGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIonMap", (void*)&fIonMap);
      R__insp.InspectMember("map<TString,FairIon*>", (void*)&fIonMap, "fIonMap.", true);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairShieldGenerator(void *p) {
      return  p ? new(p) ::FairShieldGenerator : new ::FairShieldGenerator;
   }
   static void *newArray_FairShieldGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairShieldGenerator[nElements] : new ::FairShieldGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairShieldGenerator(void *p) {
      delete ((::FairShieldGenerator*)p);
   }
   static void deleteArray_FairShieldGenerator(void *p) {
      delete [] ((::FairShieldGenerator*)p);
   }
   static void destruct_FairShieldGenerator(void *p) {
      typedef ::FairShieldGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairShieldGenerator

//______________________________________________________________________________
void FairUrqmdGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairUrqmdGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairUrqmdGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairUrqmdGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairUrqmdGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairUrqmdGenerator.
      TClass *R__cl = ::FairUrqmdGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParticleTable", (void*)&fParticleTable);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&fParticleTable, "fParticleTable.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairUrqmdGenerator(void *p) {
      return  p ? new(p) ::FairUrqmdGenerator : new ::FairUrqmdGenerator;
   }
   static void *newArray_FairUrqmdGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairUrqmdGenerator[nElements] : new ::FairUrqmdGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairUrqmdGenerator(void *p) {
      delete ((::FairUrqmdGenerator*)p);
   }
   static void deleteArray_FairUrqmdGenerator(void *p) {
      delete [] ((::FairUrqmdGenerator*)p);
   }
   static void destruct_FairUrqmdGenerator(void *p) {
      typedef ::FairUrqmdGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairUrqmdGenerator

//______________________________________________________________________________
void FairBoxGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairBoxGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairBoxGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairBoxGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairBoxGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairBoxGenerator.
      TClass *R__cl = ::FairBoxGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGType", &fPDGType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGMass", &fPDGMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtMin", &fPtMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtMax", &fPtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiMin", &fPhiMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiMax", &fPhiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtaMin", &fEtaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtaMax", &fEtaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMin", &fYMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMax", &fYMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMin", &fPMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMax", &fPMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMin", &fThetaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX1", &fX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY1", &fY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX2", &fX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY2", &fY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtaRangeIsSet", &fEtaRangeIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYRangeIsSet", &fYRangeIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaRangeIsSet", &fThetaRangeIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosThetaIsSet", &fCosThetaIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtRangeIsSet", &fPtRangeIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPRangeIsSet", &fPRangeIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxIsSet", &fPointVtxIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoxVtxIsSet", &fBoxVtxIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug", &fDebug);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairBoxGenerator(void *p) {
      return  p ? new(p) ::FairBoxGenerator : new ::FairBoxGenerator;
   }
   static void *newArray_FairBoxGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairBoxGenerator[nElements] : new ::FairBoxGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairBoxGenerator(void *p) {
      delete ((::FairBoxGenerator*)p);
   }
   static void deleteArray_FairBoxGenerator(void *p) {
      delete [] ((::FairBoxGenerator*)p);
   }
   static void destruct_FairBoxGenerator(void *p) {
      typedef ::FairBoxGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairBoxGenerator

//______________________________________________________________________________
void FairEvtGenGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairEvtGenGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairEvtGenGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairEvtGenGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void FairEvtGenGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairEvtGenGenerator.
      TClass *R__cl = ::FairEvtGenGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGasmode", &fGasmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRsigma", &fRsigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDensityFunction", &fDensityFunction);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairEvtGenGenerator(void *p) {
      return  p ? new(p) ::FairEvtGenGenerator : new ::FairEvtGenGenerator;
   }
   static void *newArray_FairEvtGenGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::FairEvtGenGenerator[nElements] : new ::FairEvtGenGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairEvtGenGenerator(void *p) {
      delete ((::FairEvtGenGenerator*)p);
   }
   static void deleteArray_FairEvtGenGenerator(void *p) {
      delete [] ((::FairEvtGenGenerator*)p);
   }
   static void destruct_FairEvtGenGenerator(void *p) {
      typedef ::FairEvtGenGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairEvtGenGenerator

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/generators/G__GenDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__GenDict();

extern "C" void G__set_cpp_environmentG__GenDict() {
  G__cpp_reset_tagtableG__GenDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__GenDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FairAsciiGenerator */
static int G__G__GenDict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairAsciiGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairAsciiGenerator[n];
     } else {
       p = new((void*) gvp) FairAsciiGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairAsciiGenerator;
     } else {
       p = new((void*) gvp) FairAsciiGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairAsciiGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairAsciiGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairAsciiGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairAsciiGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairAsciiGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairAsciiGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairAsciiGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairAsciiGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairAsciiGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairAsciiGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairAsciiGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairAsciiGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairAsciiGenerator G__TFairAsciiGenerator;
static int G__G__GenDict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairAsciiGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairAsciiGenerator*) (soff+(sizeof(FairAsciiGenerator)*i)))->~G__TFairAsciiGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairAsciiGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairAsciiGenerator*) (soff))->~G__TFairAsciiGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairBoxGenerator */
static int G__G__GenDict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairBoxGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairBoxGenerator[n];
     } else {
       p = new((void*) gvp) FairBoxGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairBoxGenerator;
     } else {
       p = new((void*) gvp) FairBoxGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairBoxGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairBoxGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairBoxGenerator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairBoxGenerator((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairBoxGenerator((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairBoxGenerator*) G__getstructoffset())->SetPDGType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairBoxGenerator*) G__getstructoffset())->SetMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetPRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetPRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetPRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetPtRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetPtRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetPtRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetPhiRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetPhiRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetPhiRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetEtaRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetEtaRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetEtaRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetYRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetYRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetYRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetThetaRange((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetThetaRange((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetThetaRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairBoxGenerator*) G__getstructoffset())->SetCosTheta();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((FairBoxGenerator*) G__getstructoffset())->SetXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetXYZ((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetXYZ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetBoxXYZ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairBoxGenerator*) G__getstructoffset())->SetDebug((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairBoxGenerator*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairBoxGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairBoxGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairBoxGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairBoxGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairBoxGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairBoxGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairBoxGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairBoxGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_187_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairBoxGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairBoxGenerator G__TFairBoxGenerator;
static int G__G__GenDict_187_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairBoxGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairBoxGenerator*) (soff+(sizeof(FairBoxGenerator)*i)))->~G__TFairBoxGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairBoxGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairBoxGenerator*) (soff))->~G__TFairBoxGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairIonGenerator */
static int G__G__GenDict_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairIonGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator[n];
     } else {
       p = new((void*) gvp) FairIonGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator;
     } else {
       p = new((void*) gvp) FairIonGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairIonGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairIonGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) FairIonGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairIonGenerator*) G__getstructoffset())->SetCharge((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairIonGenerator*) G__getstructoffset())->SetExcitationEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairIonGenerator*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairIonGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairIonGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairIonGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairIonGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairIonGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairIonGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairIonGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairIonGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairIonGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairIonGenerator G__TFairIonGenerator;
static int G__G__GenDict_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairIonGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairIonGenerator*) (soff+(sizeof(FairIonGenerator)*i)))->~G__TFairIonGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairIonGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairIonGenerator*) (soff))->~G__TFairIonGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParticleGenerator */
static int G__G__GenDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParticleGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator[n];
     } else {
       p = new((void*) gvp) FairParticleGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator;
     } else {
       p = new((void*) gvp) FairParticleGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParticleGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]), (Double32_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]), (Double32_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) FairParticleGenerator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParticleGenerator*) G__getstructoffset())->SetPDGType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParticleGenerator*) G__getstructoffset())->SetMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParticleGenerator*) G__getstructoffset())->SetMomentum((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParticleGenerator*) G__getstructoffset())->SetVertex((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParticleGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParticleGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParticleGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParticleGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParticleGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParticleGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParticleGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParticleGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParticleGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParticleGenerator G__TFairParticleGenerator;
static int G__G__GenDict_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParticleGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParticleGenerator*) (soff+(sizeof(FairParticleGenerator)*i)))->~G__TFairParticleGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParticleGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParticleGenerator*) (soff))->~G__TFairParticleGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairShieldGenerator */
static int G__G__GenDict_426_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairShieldGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairShieldGenerator[n];
     } else {
       p = new((void*) gvp) FairShieldGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairShieldGenerator;
     } else {
       p = new((void*) gvp) FairShieldGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairShieldGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairShieldGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairShieldGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairShieldGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairShieldGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairShieldGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairShieldGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairShieldGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairShieldGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairShieldGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairShieldGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_426_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairShieldGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairShieldGenerator G__TFairShieldGenerator;
static int G__G__GenDict_426_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairShieldGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairShieldGenerator*) (soff+(sizeof(FairShieldGenerator)*i)))->~G__TFairShieldGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairShieldGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairShieldGenerator*) (soff))->~G__TFairShieldGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairPlutoGenerator */
static int G__G__GenDict_439_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairPlutoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairPlutoGenerator[n];
     } else {
       p = new((void*) gvp) FairPlutoGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairPlutoGenerator;
     } else {
       p = new((void*) gvp) FairPlutoGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairPlutoGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairPlutoGenerator((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairPlutoGenerator((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairPlutoGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairPlutoGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairPlutoGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairPlutoGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairPlutoGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_439_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairPlutoGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairPlutoGenerator G__TFairPlutoGenerator;
static int G__G__GenDict_439_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairPlutoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairPlutoGenerator*) (soff+(sizeof(FairPlutoGenerator)*i)))->~G__TFairPlutoGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairPlutoGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairPlutoGenerator*) (soff))->~G__TFairPlutoGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairPlutoReactionGenerator */
static int G__G__GenDict_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairPlutoReactionGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairPlutoReactionGenerator[n];
     } else {
       p = new((void*) gvp) FairPlutoReactionGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairPlutoReactionGenerator;
     } else {
       p = new((void*) gvp) FairPlutoReactionGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairPlutoReactionGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairPlutoReactionGenerator((PReaction*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairPlutoReactionGenerator((PReaction*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairPlutoReactionGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoReactionGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairPlutoReactionGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairPlutoReactionGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairPlutoReactionGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoReactionGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairPlutoReactionGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairPlutoReactionGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairPlutoReactionGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairPlutoReactionGenerator G__TFairPlutoReactionGenerator;
static int G__G__GenDict_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairPlutoReactionGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairPlutoReactionGenerator*) (soff+(sizeof(FairPlutoReactionGenerator)*i)))->~G__TFairPlutoReactionGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairPlutoReactionGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairPlutoReactionGenerator*) (soff))->~G__TFairPlutoReactionGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairUrqmdGenerator */
static int G__G__GenDict_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairUrqmdGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairUrqmdGenerator[n];
     } else {
       p = new((void*) gvp) FairUrqmdGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairUrqmdGenerator;
     } else {
       p = new((void*) gvp) FairUrqmdGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairUrqmdGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairUrqmdGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairUrqmdGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairUrqmdGenerator*) G__getstructoffset())->SkipEvents((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairUrqmdGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairUrqmdGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairUrqmdGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairUrqmdGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairUrqmdGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairUrqmdGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairUrqmdGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairUrqmdGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_712_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairUrqmdGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairUrqmdGenerator G__TFairUrqmdGenerator;
static int G__G__GenDict_712_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairUrqmdGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairUrqmdGenerator*) (soff+(sizeof(FairUrqmdGenerator)*i)))->~G__TFairUrqmdGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairUrqmdGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairUrqmdGenerator*) (soff))->~G__TFairUrqmdGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairEvtGenGenerator */
static int G__G__GenDict_713_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairEvtGenGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairEvtGenGenerator[n];
     } else {
       p = new((void*) gvp) FairEvtGenGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairEvtGenGenerator;
     } else {
       p = new((void*) gvp) FairEvtGenGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairEvtGenGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairEvtGenGenerator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairEvtGenGenerator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairEvtGenGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairEvtGenGenerator(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TF1*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairEvtGenGenerator(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TF1*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairEvtGenGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairEvtGenGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairEvtGenGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairEvtGenGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairEvtGenGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairEvtGenGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairEvtGenGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairEvtGenGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GenDict_713_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairEvtGenGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairEvtGenGenerator G__TFairEvtGenGenerator;
static int G__G__GenDict_713_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairEvtGenGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairEvtGenGenerator*) (soff+(sizeof(FairEvtGenGenerator)*i)))->~G__TFairEvtGenGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairEvtGenGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairEvtGenGenerator*) (soff))->~G__TFairEvtGenGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FairAsciiGenerator */

/* FairBoxGenerator */

/* FairIonGenerator */

/* FairParticleGenerator */

/* FairShieldGenerator */

/* FairPlutoGenerator */

/* FairPlutoReactionGenerator */

/* FairUrqmdGenerator */

/* FairEvtGenGenerator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GenDict {
 public:
  G__Sizep2memfuncG__GenDict(): p(&G__Sizep2memfuncG__GenDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GenDict::*p)();
};

size_t G__get_sizep2memfuncG__GenDict()
{
  G__Sizep2memfuncG__GenDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GenDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator))) {
     FairAsciiGenerator *G__Lderived;
     G__Lderived=(FairAsciiGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator))) {
     FairBoxGenerator *G__Lderived;
     G__Lderived=(FairBoxGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator))) {
     FairIonGenerator *G__Lderived;
     G__Lderived=(FairIonGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator))) {
     FairParticleGenerator *G__Lderived;
     G__Lderived=(FairParticleGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator))) {
     FairShieldGenerator *G__Lderived;
     G__Lderived=(FairShieldGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator))) {
     FairPlutoGenerator *G__Lderived;
     G__Lderived=(FairPlutoGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator))) {
     FairPlutoReactionGenerator *G__Lderived;
     G__Lderived=(FairPlutoReactionGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator))) {
     FairUrqmdGenerator *G__Lderived;
     G__Lderived=(FairUrqmdGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator))) {
     FairEvtGenGenerator *G__Lderived;
     G__Lderived=(FairEvtGenGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator),G__get_linked_tagnum(&G__G__GenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator),G__get_linked_tagnum(&G__G__GenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GenDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Double32_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes in memory, written as a 4 bytes float",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairIon*>",117,G__get_linked_tagnum(&G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairIon*,less<TString> >",117,G__get_linked_tagnum(&G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__G__GenDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FairAsciiGenerator */
static void G__setup_memvarFairAsciiGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator));
   { FairAsciiGenerator *p; p=(FairAsciiGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fInputFile=",0,"! Input file stream");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file Name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairBoxGenerator */
static void G__setup_memvarFairBoxGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator));
   { FairBoxGenerator *p; p=(FairBoxGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGType=",0,"Particle type (PDG encoding)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"Multiplicity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPDGMass=",0,"Particle mass [GeV]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPtMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPtMax=",0,"Transverse momentum range [GeV]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPhiMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPhiMax=",0,"Azimuth angle range [degree]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fEtaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fEtaMax=",0,"Pseudorapidity range in lab system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fYMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fYMax=",0,"Rapidity range in lab system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPMax=",0,"Momentum range in lab system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fThetaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fThetaMax=",0,"Polar angle range in lab system [degree]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fZ=",0,"Point vertex coordinates [cm]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fY1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fY2=",0,"Box vertex coords (x1,y1)->(x2,y2)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEtaRangeIsSet=",0,"True if eta range is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fYRangeIsSet=",0,"True if rapidity range is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fThetaRangeIsSet=",0,"True if theta range is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCosThetaIsSet=",0,"True if uniform distribution in");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPtRangeIsSet=",0,"True if transverse momentum range is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPRangeIsSet=",0,"True if abs.momentum range is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPointVtxIsSet=",0,"True if point vertex is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBoxVtxIsSet=",0,"True if box vertex is set");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDebug=",0,"Debug switch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairIonGenerator */
static void G__setup_memvarFairIonGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator));
   { FairIonGenerator *p; p=(FairIonGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgNIon=",0,"! Number of the instance of this class");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"Multiplicity per event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPz=",0,"Momentum components [GeV] per nucleon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVz=",0,"Vertex coordinates [cm]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_FairIon),-1,-1,4,"fIon=",0,"Pointer to the FairIon to be generated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQ=",0,"Electric charge [e]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParticleGenerator */
static void G__setup_memvarFairParticleGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator));
   { FairParticleGenerator *p; p=(FairParticleGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGType=",0,"Particle type (PDG encoding)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"Multiplicity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fPz=",0,"Momentum components [GeV]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fVx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fVy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fVz=",0,"Vertex coordinates [cm]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairShieldGenerator */
static void G__setup_memvarFairShieldGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator));
   { FairShieldGenerator *p; p=(FairShieldGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fInputFile=",0,"! Input file stream");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file Name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TDatabasePDG),-1,-1,4,"fPDG=",0,"!  PDG database");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR),G__defined_typename("map<TString,FairIon*>"),-1,4,"fIonMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairPlutoGenerator */
static void G__setup_memvarFairPlutoGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator));
   { FairPlutoGenerator *p; p=(FairPlutoGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,"! Event number");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TFile),-1,-1,4,"fInputFile=",0,"! Pointer to input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TTree),-1,-1,4,"fInputTree=",0,"! Pointer to input tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClonesArray),-1,-1,4,"fParticles=",0,"! Particle array from PLUTO");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairPlutoReactionGenerator */
static void G__setup_memvarFairPlutoReactionGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator));
   { FairPlutoReactionGenerator *p; p=(FairPlutoReactionGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvent=",0,"! Event number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_PReaction),-1,-1,4,"fReaction=",0,"! Pointer to the Pluto inline reaction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_PFairGenerator),-1,-1,4,"fPlutoFairGenerator=",0,"!Pointer to interface");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairUrqmdGenerator */
static void G__setup_memvarFairUrqmdGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator));
   { FairUrqmdGenerator *p; p=(FairUrqmdGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fInputFile=",0,"!  Input file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GenDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,4,"fParticleTable=",0,"!  Map from UrQMD PID to PDGPID");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"!  Input file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairEvtGenGenerator */
static void G__setup_memvarFairEvtGenGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator));
   { FairEvtGenGenerator *p; p=(FairEvtGenGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file Name");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fInputFile=",0,"! Input file pointer");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fGasmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fRsigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TF1),-1,-1,4,"fDensityFunction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GenDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFairAsciiGenerator(void) {
   /* FairAsciiGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator));
   G__memfunc_setup("FairAsciiGenerator",1810,G__G__GenDict_186_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairAsciiGenerator",1810,G__G__GenDict_186_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairAsciiGenerator",1810,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator), -1, 0, 1, 1, 4, 0, "u 'FairAsciiGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairAsciiGenerator), -1, 1, 1, 1, 4, 0, "u 'FairAsciiGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_186_0_7, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairAsciiGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_186_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairAsciiGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_186_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairAsciiGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_186_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairAsciiGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_186_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairAsciiGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairAsciiGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_186_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairAsciiGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_186_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairAsciiGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairAsciiGenerator", 1936, G__G__GenDict_186_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairBoxGenerator(void) {
   /* FairBoxGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator));
   G__memfunc_setup("FairBoxGenerator",1618,G__G__GenDict_187_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairBoxGenerator",1618,G__G__GenDict_187_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairBoxGenerator), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid i - 'Int_t' 0 '1' mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGType",937,G__G__GenDict_187_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultiplicity",1589,G__G__GenDict_187_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPRange",873,G__G__GenDict_187_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '0' pmin d - 'Double32_t' 0 '10' pmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPtRange",989,G__G__GenDict_187_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '0' ptmin d - 'Double32_t' 0 '10' ptmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiRange",1082,G__G__GenDict_187_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '0' phimin d - 'Double32_t' 0 '360' phimax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEtaRange",1075,G__G__GenDict_187_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '-5' etamin d - 'Double32_t' 0 '7' etamax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYRange",882,G__G__GenDict_187_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '-5' ymin d - 'Double32_t' 0 '7' ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaRange",1295,G__G__GenDict_187_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 0 '0' thetamin d - 'Double32_t' 0 '90' thetamax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosTheta",1095,G__G__GenDict_187_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__G__GenDict_187_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 0 '0' x d - 'Double32_t' 0 '0' y "
"d - 'Double32_t' 0 '0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoxXYZ",864,G__G__GenDict_187_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double32_t' 0 '0' x1 d - 'Double32_t' 0 '0' y1 "
"d - 'Double32_t' 0 '0' x2 d - 'Double32_t' 0 '0' y2 "
"d - 'Double32_t' 0 '0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__G__GenDict_187_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '0' debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GenDict_187_0_17, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairBoxGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_187_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairBoxGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_187_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairBoxGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_187_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairBoxGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_187_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_187_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairBoxGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_187_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairBoxGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_187_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairBoxGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_187_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairBoxGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairBoxGenerator", 1744, G__G__GenDict_187_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairIonGenerator(void) {
   /* FairIonGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator));
   G__memfunc_setup("FairIonGenerator",1615,G__G__GenDict_189_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairIonGenerator",1615,G__G__GenDict_189_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator), -1, 0, 8, 1, 1, 0, 
"C - 'Char_t' 10 - ionName i - 'Int_t' 0 - mult "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 '0' vx "
"d - 'Double_t' 0 '0' vy d - 'Double_t' 0 '0' vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairIonGenerator",1615,G__G__GenDict_189_0_3, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator), -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a "
"i - 'Int_t' 0 - q i - 'Int_t' 0 - mult "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 '0' vx "
"d - 'Double_t' 0 '0' vy d - 'Double_t' 0 '0' vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__G__GenDict_189_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExcitationEnergy",1966,G__G__GenDict_189_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - eExc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__G__GenDict_189_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FairIonGenerator",1615,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator), -1, 0, 1, 1, 4, 0, "u 'FairIonGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairIonGenerator), -1, 1, 1, 1, 4, 0, "u 'FairIonGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_189_0_10, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairIonGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_189_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairIonGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_189_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairIonGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_189_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairIonGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_189_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_189_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairIonGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_189_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairIonGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_189_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairIonGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_189_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairIonGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairIonGenerator", 1741, G__G__GenDict_189_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParticleGenerator(void) {
   /* FairParticleGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator));
   G__memfunc_setup("FairParticleGenerator",2141,G__G__GenDict_190_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParticleGenerator",2141,G__G__GenDict_190_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairParticleGenerator), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid i - 'Int_t' 0 - mult "
"d - 'Double32_t' 0 - px d - 'Double32_t' 0 - py "
"d - 'Double32_t' 0 - pz d - 'Double32_t' 0 '0.' vx "
"d - 'Double32_t' 0 '0.' vy d - 'Double32_t' 0 '0.' vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGType",937,G__G__GenDict_190_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultiplicity",1589,G__G__GenDict_190_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__GenDict_190_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 0 - px d - 'Double32_t' 0 - py "
"d - 'Double32_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__G__GenDict_190_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 0 - vx d - 'Double32_t' 0 - vy "
"d - 'Double32_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GenDict_190_0_8, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParticleGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_190_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParticleGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_190_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParticleGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_190_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParticleGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_190_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_190_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParticleGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_190_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParticleGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_190_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParticleGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_190_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParticleGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParticleGenerator", 2267, G__G__GenDict_190_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairShieldGenerator(void) {
   /* FairShieldGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator));
   G__memfunc_setup("FairShieldGenerator",1922,G__G__GenDict_426_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairShieldGenerator",1922,G__G__GenDict_426_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterIons",1246,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairShieldGenerator",1922,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator), -1, 0, 1, 1, 4, 0, "u 'FairShieldGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairShieldGenerator), -1, 1, 1, 1, 4, 0, "u 'FairShieldGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_426_0_8, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairShieldGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_426_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairShieldGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_426_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairShieldGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_426_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairShieldGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_426_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_426_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairShieldGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_426_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairShieldGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_426_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairShieldGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_426_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairShieldGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairShieldGenerator", 2048, G__G__GenDict_426_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairPlutoGenerator(void) {
   /* FairPlutoGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator));
   G__memfunc_setup("FairPlutoGenerator",1853,G__G__GenDict_439_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairPlutoGenerator",1853,G__G__GenDict_439_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairPlutoGenerator",1853,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator), -1, 0, 1, 1, 4, 0, "u 'FairPlutoGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoGenerator), -1, 1, 1, 1, 4, 0, "u 'FairPlutoGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_439_0_7, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairPlutoGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_439_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_439_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairPlutoGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_439_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairPlutoGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_439_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_439_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_439_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairPlutoGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_439_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_439_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairPlutoGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairPlutoGenerator", 1979, G__G__GenDict_439_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairPlutoReactionGenerator(void) {
   /* FairPlutoReactionGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator));
   G__memfunc_setup("FairPlutoReactionGenerator",2674,G__G__GenDict_711_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairPlutoReactionGenerator",2674,G__G__GenDict_711_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairPlutoReactionGenerator), -1, 0, 1, 1, 1, 0, "U 'PReaction' - 0 - reaction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GenDict_711_0_4, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairPlutoReactionGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_711_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoReactionGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_711_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairPlutoReactionGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_711_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairPlutoReactionGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_711_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_711_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoReactionGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_711_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairPlutoReactionGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_711_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairPlutoReactionGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_711_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairPlutoReactionGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairPlutoReactionGenerator", 2800, G__G__GenDict_711_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairUrqmdGenerator(void) {
   /* FairUrqmdGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator));
   G__memfunc_setup("FairUrqmdGenerator",1842,G__G__GenDict_712_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairUrqmdGenerator",1842,G__G__GenDict_712_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipEvents",1036,G__G__GenDict_712_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConversionTable",1930,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairUrqmdGenerator",1842,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator), -1, 0, 1, 1, 4, 0, "u 'FairUrqmdGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairUrqmdGenerator), -1, 1, 1, 1, 4, 0, "u 'FairUrqmdGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_712_0_8, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairUrqmdGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_712_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairUrqmdGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_712_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairUrqmdGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_712_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairUrqmdGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_712_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_712_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairUrqmdGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_712_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairUrqmdGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_712_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairUrqmdGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_712_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairUrqmdGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairUrqmdGenerator", 1968, G__G__GenDict_712_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairEvtGenGenerator(void) {
   /* FairEvtGenGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator));
   G__memfunc_setup("FairEvtGenGenerator",1906,G__G__GenDict_713_0_1, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairEvtGenGenerator",1906,G__G__GenDict_713_0_2, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairEvtGenGenerator",1906,G__G__GenDict_713_0_3, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator), -1, 0, 3, 1, 1, 0, 
"C - - 10 - fileName d - 'Double_t' 0 - Rsigma "
"U 'TF1' - 0 - DensityFunction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairEvtGenGenerator",1906,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator), -1, 0, 1, 1, 4, 0, "u 'FairEvtGenGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GenDictLN_FairEvtGenGenerator), -1, 1, 1, 1, 4, 0, "u 'FairEvtGenGenerator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GenDict_713_0_8, 85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairEvtGenGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GenDict_713_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairEvtGenGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GenDict_713_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairEvtGenGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GenDict_713_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairEvtGenGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GenDict_713_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GenDict_713_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairEvtGenGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GenDict_713_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairEvtGenGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GenDict_713_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairEvtGenGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GenDict_713_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairEvtGenGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairEvtGenGenerator", 2032, G__G__GenDict_713_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GenDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GenDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GenDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GenDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairPrimaryGenerator = { "FairPrimaryGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairGenerator = { "FairGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairAsciiGenerator = { "FairAsciiGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairBoxGenerator = { "FairBoxGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairIon = { "FairIon" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairIonGenerator = { "FairIonGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairParticleGenerator = { "FairParticleGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairShieldGenerator = { "FairShieldGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR = { "map<TString,FairIon*,less<TString>,allocator<pair<const TString,FairIon*> > >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairPlutoGenerator = { "FairPlutoGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_PFairGenerator = { "PFairGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_PReaction = { "PReaction" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairPlutoReactionGenerator = { "FairPlutoReactionGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairUrqmdGenerator = { "FairUrqmdGenerator" , 99 , -1 };
G__linked_taginfo G__G__GenDictLN_FairEvtGenGenerator = { "FairEvtGenGenerator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GenDict() {
  G__G__GenDictLN_TClass.tagnum = -1 ;
  G__G__GenDictLN_TBuffer.tagnum = -1 ;
  G__G__GenDictLN_TMemberInspector.tagnum = -1 ;
  G__G__GenDictLN_TObject.tagnum = -1 ;
  G__G__GenDictLN_TNamed.tagnum = -1 ;
  G__G__GenDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__GenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GenDictLN_TClonesArray.tagnum = -1 ;
  G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__GenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GenDictLN_FairPrimaryGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairGenerator.tagnum = -1 ;
  G__G__GenDictLN_TDatabasePDG.tagnum = -1 ;
  G__G__GenDictLN_FairAsciiGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairBoxGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairIon.tagnum = -1 ;
  G__G__GenDictLN_FairIonGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairParticleGenerator.tagnum = -1 ;
  G__G__GenDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__GenDictLN_FairShieldGenerator.tagnum = -1 ;
  G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GenDictLN_TFile.tagnum = -1 ;
  G__G__GenDictLN_TTree.tagnum = -1 ;
  G__G__GenDictLN_FairPlutoGenerator.tagnum = -1 ;
  G__G__GenDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__GenDictLN_TF1.tagnum = -1 ;
  G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__GenDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__GenDictLN_PFairGenerator.tagnum = -1 ;
  G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__GenDictLN_PReaction.tagnum = -1 ;
  G__G__GenDictLN_FairPlutoReactionGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairUrqmdGenerator.tagnum = -1 ;
  G__G__GenDictLN_FairEvtGenGenerator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GenDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairPrimaryGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TDatabasePDG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairAsciiGenerator),sizeof(FairAsciiGenerator),-1,327424,(char*)NULL,G__setup_memvarFairAsciiGenerator,G__setup_memfuncFairAsciiGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairBoxGenerator),sizeof(FairBoxGenerator),-1,324864,(char*)NULL,G__setup_memvarFairBoxGenerator,G__setup_memfuncFairBoxGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairIon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairIonGenerator),sizeof(FairIonGenerator),-1,327424,(char*)NULL,G__setup_memvarFairIonGenerator,G__setup_memfuncFairIonGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairParticleGenerator),sizeof(FairParticleGenerator),-1,324864,(char*)NULL,G__setup_memvarFairParticleGenerator,G__setup_memfuncFairParticleGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairShieldGenerator),sizeof(FairShieldGenerator),-1,327424,(char*)NULL,G__setup_memvarFairShieldGenerator,G__setup_memfuncFairShieldGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_maplETStringcOFairIonmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairIonmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairPlutoGenerator),sizeof(FairPlutoGenerator),-1,327424,(char*)NULL,G__setup_memvarFairPlutoGenerator,G__setup_memfuncFairPlutoGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_PFairGenerator);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GenDictLN_PReaction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairPlutoReactionGenerator),sizeof(FairPlutoReactionGenerator),-1,324864,(char*)NULL,G__setup_memvarFairPlutoReactionGenerator,G__setup_memfuncFairPlutoReactionGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairUrqmdGenerator),sizeof(FairUrqmdGenerator),-1,327424,(char*)NULL,G__setup_memvarFairUrqmdGenerator,G__setup_memfuncFairUrqmdGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__GenDictLN_FairEvtGenGenerator),sizeof(FairEvtGenGenerator),-1,327424,(char*)NULL,G__setup_memvarFairEvtGenGenerator,G__setup_memfuncFairEvtGenGenerator);
}
extern "C" void G__cpp_setupG__GenDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GenDict()");
  G__set_cpp_environmentG__GenDict();
  G__cpp_setup_tagtableG__GenDict();

  G__cpp_setup_inheritanceG__GenDict();

  G__cpp_setup_typetableG__GenDict();

  G__cpp_setup_memvarG__GenDict();

  G__cpp_setup_memfuncG__GenDict();
  G__cpp_setup_globalG__GenDict();
  G__cpp_setup_funcG__GenDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GenDict();
  return;
}
class G__cpp_setup_initG__GenDict {
  public:
    G__cpp_setup_initG__GenDict() { G__add_setup_func("G__GenDict",(G__incsetup)(&G__cpp_setupG__GenDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GenDict() { G__remove_setup_func("G__GenDict"); }
};
G__cpp_setup_initG__GenDict G__cpp_setup_initializerG__GenDict;

