//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:02:39 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddIbmnfielddIFieldDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "FieldDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BmnFieldPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldPar(void *p = 0);
   static void *newArray_BmnFieldPar(Long_t size, void *p);
   static void delete_BmnFieldPar(void *p);
   static void deleteArray_BmnFieldPar(void *p);
   static void destruct_BmnFieldPar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldPar*)
   {
      ::BmnFieldPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldPar", ::BmnFieldPar::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldPar.h", 28,
                  typeid(::BmnFieldPar), DefineBehavior(ptr, ptr),
                  &::BmnFieldPar::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldPar) );
      instance.SetNew(&new_BmnFieldPar);
      instance.SetNewArray(&newArray_BmnFieldPar);
      instance.SetDelete(&delete_BmnFieldPar);
      instance.SetDeleteArray(&deleteArray_BmnFieldPar);
      instance.SetDestructor(&destruct_BmnFieldPar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldPar*)
   {
      return GenerateInitInstanceLocal((::BmnFieldPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldConst_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldConst(void *p = 0);
   static void *newArray_BmnFieldConst(Long_t size, void *p);
   static void delete_BmnFieldConst(void *p);
   static void deleteArray_BmnFieldConst(void *p);
   static void destruct_BmnFieldConst(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldConst*)
   {
      ::BmnFieldConst *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldConst >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldConst", ::BmnFieldConst::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldConst.h", 29,
                  typeid(::BmnFieldConst), DefineBehavior(ptr, ptr),
                  &::BmnFieldConst::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldConst) );
      instance.SetNew(&new_BmnFieldConst);
      instance.SetNewArray(&newArray_BmnFieldConst);
      instance.SetDelete(&delete_BmnFieldConst);
      instance.SetDeleteArray(&deleteArray_BmnFieldConst);
      instance.SetDestructor(&destruct_BmnFieldConst);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldConst*)
   {
      return GenerateInitInstanceLocal((::BmnFieldConst*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldConst*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldContFact(void *p = 0);
   static void *newArray_BmnFieldContFact(Long_t size, void *p);
   static void delete_BmnFieldContFact(void *p);
   static void deleteArray_BmnFieldContFact(void *p);
   static void destruct_BmnFieldContFact(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldContFact*)
   {
      ::BmnFieldContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldContFact", ::BmnFieldContFact::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldContFact.h", 28,
                  typeid(::BmnFieldContFact), DefineBehavior(ptr, ptr),
                  &::BmnFieldContFact::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldContFact) );
      instance.SetNew(&new_BmnFieldContFact);
      instance.SetNewArray(&newArray_BmnFieldContFact);
      instance.SetDelete(&delete_BmnFieldContFact);
      instance.SetDeleteArray(&deleteArray_BmnFieldContFact);
      instance.SetDestructor(&destruct_BmnFieldContFact);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldContFact*)
   {
      return GenerateInitInstanceLocal((::BmnFieldContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldMapCreator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldMapCreator(void *p = 0);
   static void *newArray_BmnFieldMapCreator(Long_t size, void *p);
   static void delete_BmnFieldMapCreator(void *p);
   static void deleteArray_BmnFieldMapCreator(void *p);
   static void destruct_BmnFieldMapCreator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldMapCreator*)
   {
      ::BmnFieldMapCreator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldMapCreator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldMapCreator", ::BmnFieldMapCreator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldMapCreator.h", 29,
                  typeid(::BmnFieldMapCreator), DefineBehavior(ptr, ptr),
                  &::BmnFieldMapCreator::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldMapCreator) );
      instance.SetNew(&new_BmnFieldMapCreator);
      instance.SetNewArray(&newArray_BmnFieldMapCreator);
      instance.SetDelete(&delete_BmnFieldMapCreator);
      instance.SetDeleteArray(&deleteArray_BmnFieldMapCreator);
      instance.SetDestructor(&destruct_BmnFieldMapCreator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldMapCreator*)
   {
      return GenerateInitInstanceLocal((::BmnFieldMapCreator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldMapCreator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldMapData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldMapData(void *p = 0);
   static void *newArray_BmnFieldMapData(Long_t size, void *p);
   static void delete_BmnFieldMapData(void *p);
   static void deleteArray_BmnFieldMapData(void *p);
   static void destruct_BmnFieldMapData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldMapData*)
   {
      ::BmnFieldMapData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldMapData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldMapData", ::BmnFieldMapData::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldMapData.h", 32,
                  typeid(::BmnFieldMapData), DefineBehavior(ptr, ptr),
                  &::BmnFieldMapData::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldMapData) );
      instance.SetNew(&new_BmnFieldMapData);
      instance.SetNewArray(&newArray_BmnFieldMapData);
      instance.SetDelete(&delete_BmnFieldMapData);
      instance.SetDeleteArray(&deleteArray_BmnFieldMapData);
      instance.SetDestructor(&destruct_BmnFieldMapData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldMapData*)
   {
      return GenerateInitInstanceLocal((::BmnFieldMapData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldMapData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldMap(void *p = 0);
   static void *newArray_BmnFieldMap(Long_t size, void *p);
   static void delete_BmnFieldMap(void *p);
   static void deleteArray_BmnFieldMap(void *p);
   static void destruct_BmnFieldMap(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldMap*)
   {
      ::BmnFieldMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldMap", ::BmnFieldMap::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldMap.h", 19,
                  typeid(::BmnFieldMap), DefineBehavior(ptr, ptr),
                  &::BmnFieldMap::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldMap) );
      instance.SetNew(&new_BmnFieldMap);
      instance.SetNewArray(&newArray_BmnFieldMap);
      instance.SetDelete(&delete_BmnFieldMap);
      instance.SetDeleteArray(&deleteArray_BmnFieldMap);
      instance.SetDestructor(&destruct_BmnFieldMap);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldMap*)
   {
      return GenerateInitInstanceLocal((::BmnFieldMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldMapSym3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldMapSym3(void *p = 0);
   static void *newArray_BmnFieldMapSym3(Long_t size, void *p);
   static void delete_BmnFieldMapSym3(void *p);
   static void deleteArray_BmnFieldMapSym3(void *p);
   static void destruct_BmnFieldMapSym3(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldMapSym3*)
   {
      ::BmnFieldMapSym3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldMapSym3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldMapSym3", ::BmnFieldMapSym3::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldMapSym3.h", 34,
                  typeid(::BmnFieldMapSym3), DefineBehavior(ptr, ptr),
                  &::BmnFieldMapSym3::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldMapSym3) );
      instance.SetNew(&new_BmnFieldMapSym3);
      instance.SetNewArray(&newArray_BmnFieldMapSym3);
      instance.SetDelete(&delete_BmnFieldMapSym3);
      instance.SetDeleteArray(&deleteArray_BmnFieldMapSym3);
      instance.SetDestructor(&destruct_BmnFieldMapSym3);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldMapSym3*)
   {
      return GenerateInitInstanceLocal((::BmnFieldMapSym3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldMapSym3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BmnFieldCreator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BmnFieldCreator(void *p = 0);
   static void *newArray_BmnFieldCreator(Long_t size, void *p);
   static void delete_BmnFieldCreator(void *p);
   static void deleteArray_BmnFieldCreator(void *p);
   static void destruct_BmnFieldCreator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BmnFieldCreator*)
   {
      ::BmnFieldCreator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BmnFieldCreator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BmnFieldCreator", ::BmnFieldCreator::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/bmnfield/BmnFieldCreator.h", 17,
                  typeid(::BmnFieldCreator), DefineBehavior(ptr, ptr),
                  &::BmnFieldCreator::Dictionary, isa_proxy, 4,
                  sizeof(::BmnFieldCreator) );
      instance.SetNew(&new_BmnFieldCreator);
      instance.SetNewArray(&newArray_BmnFieldCreator);
      instance.SetDelete(&delete_BmnFieldCreator);
      instance.SetDeleteArray(&deleteArray_BmnFieldCreator);
      instance.SetDestructor(&destruct_BmnFieldCreator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BmnFieldCreator*)
   {
      return GenerateInitInstanceLocal((::BmnFieldCreator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BmnFieldCreator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *BmnFieldPar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldPar::Class_Name()
{
   return "BmnFieldPar";
}

//______________________________________________________________________________
const char *BmnFieldPar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldPar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldPar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldPar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldPar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldConst::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldConst::Class_Name()
{
   return "BmnFieldConst";
}

//______________________________________________________________________________
const char *BmnFieldConst::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldConst*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldConst::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldConst*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldConst::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldConst*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldConst::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldConst*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldContFact::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldContFact::Class_Name()
{
   return "BmnFieldContFact";
}

//______________________________________________________________________________
const char *BmnFieldContFact::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldContFact::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldContFact::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldContFact::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldContFact*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldMapCreator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldMapCreator::Class_Name()
{
   return "BmnFieldMapCreator";
}

//______________________________________________________________________________
const char *BmnFieldMapCreator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapCreator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldMapCreator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapCreator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldMapCreator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapCreator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldMapCreator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapCreator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldMapData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldMapData::Class_Name()
{
   return "BmnFieldMapData";
}

//______________________________________________________________________________
const char *BmnFieldMapData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldMapData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldMapData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldMapData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldMap::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldMap::Class_Name()
{
   return "BmnFieldMap";
}

//______________________________________________________________________________
const char *BmnFieldMap::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldMap::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldMap::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldMap::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMap*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldMapSym3::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldMapSym3::Class_Name()
{
   return "BmnFieldMapSym3";
}

//______________________________________________________________________________
const char *BmnFieldMapSym3::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapSym3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldMapSym3::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapSym3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldMapSym3::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapSym3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldMapSym3::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldMapSym3*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BmnFieldCreator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BmnFieldCreator::Class_Name()
{
   return "BmnFieldCreator";
}

//______________________________________________________________________________
const char *BmnFieldCreator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldCreator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BmnFieldCreator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldCreator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BmnFieldCreator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldCreator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BmnFieldCreator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BmnFieldCreator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void BmnFieldConst::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldConst.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldConst::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldConst::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldConst::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldConst.
      TClass *R__cl = ::BmnFieldConst::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBz", &fBz);
      FairField::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldConst(void *p) {
      return  p ? new(p) ::BmnFieldConst : new ::BmnFieldConst;
   }
   static void *newArray_BmnFieldConst(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldConst[nElements] : new ::BmnFieldConst[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldConst(void *p) {
      delete ((::BmnFieldConst*)p);
   }
   static void deleteArray_BmnFieldConst(void *p) {
      delete [] ((::BmnFieldConst*)p);
   }
   static void destruct_BmnFieldConst(void *p) {
      typedef ::BmnFieldConst current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldConst

//______________________________________________________________________________
void BmnFieldContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldContFact.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldContFact::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldContFact::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldContFact.
      TClass *R__cl = ::BmnFieldContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairContFact::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldContFact(void *p) {
      return  p ? new(p) ::BmnFieldContFact : new ::BmnFieldContFact;
   }
   static void *newArray_BmnFieldContFact(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldContFact[nElements] : new ::BmnFieldContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldContFact(void *p) {
      delete ((::BmnFieldContFact*)p);
   }
   static void deleteArray_BmnFieldContFact(void *p) {
      delete [] ((::BmnFieldContFact*)p);
   }
   static void destruct_BmnFieldContFact(void *p) {
      typedef ::BmnFieldContFact current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldContFact

//______________________________________________________________________________
void BmnFieldMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldMap::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldMap.
      TClass *R__cl = ::BmnFieldMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosX", &fPosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosY", &fPosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosZ", &fPosZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXstep", &fXstep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYstep", &fYstep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZstep", &fZstep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNx", &fNx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNy", &fNy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNz", &fNz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBz", &fBz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHa[2][2][2]", fHa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHb[2][2]", fHb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHc[2]", fHc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugInfo", &fDebugInfo);
      FairField::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldMap(void *p) {
      return  p ? new(p) ::BmnFieldMap : new ::BmnFieldMap;
   }
   static void *newArray_BmnFieldMap(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldMap[nElements] : new ::BmnFieldMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldMap(void *p) {
      delete ((::BmnFieldMap*)p);
   }
   static void deleteArray_BmnFieldMap(void *p) {
      delete [] ((::BmnFieldMap*)p);
   }
   static void destruct_BmnFieldMap(void *p) {
      typedef ::BmnFieldMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldMap

//______________________________________________________________________________
void BmnFieldMapCreator::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldMapCreator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldMapCreator::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldMapCreator::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldMapCreator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldMapCreator.
      TClass *R__cl = ::BmnFieldMapCreator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapName", &fMapName);
      R__insp.InspectMember(fMapName, "fMapName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNx", &fNx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNy", &fNy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNz", &fNz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBz", &fBz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFieldList", &fFieldList);
      R__insp.InspectMember(fFieldList, "fFieldList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInit", &fInit);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldMapCreator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnFieldMapCreator : new ::BmnFieldMapCreator;
   }
   static void *newArray_BmnFieldMapCreator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnFieldMapCreator[nElements] : new ::BmnFieldMapCreator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldMapCreator(void *p) {
      delete ((::BmnFieldMapCreator*)p);
   }
   static void deleteArray_BmnFieldMapCreator(void *p) {
      delete [] ((::BmnFieldMapCreator*)p);
   }
   static void destruct_BmnFieldMapCreator(void *p) {
      typedef ::BmnFieldMapCreator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldMapCreator

//______________________________________________________________________________
void BmnFieldMapData::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldMapData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldMapData::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldMapData::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldMapData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldMapData.
      TClass *R__cl = ::BmnFieldMapData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNx", &fNx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNy", &fNy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNz", &fNz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBz", &fBz);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldMapData(void *p) {
      return  p ? new(p) ::BmnFieldMapData : new ::BmnFieldMapData;
   }
   static void *newArray_BmnFieldMapData(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldMapData[nElements] : new ::BmnFieldMapData[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldMapData(void *p) {
      delete ((::BmnFieldMapData*)p);
   }
   static void deleteArray_BmnFieldMapData(void *p) {
      delete [] ((::BmnFieldMapData*)p);
   }
   static void destruct_BmnFieldMapData(void *p) {
      typedef ::BmnFieldMapData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldMapData

//______________________________________________________________________________
void BmnFieldMapSym3::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldMapSym3.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldMapSym3::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldMapSym3::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldMapSym3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldMapSym3.
      TClass *R__cl = ::BmnFieldMapSym3::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHemiX", &fHemiX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHemiY", &fHemiY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHemiZ", &fHemiZ);
      BmnFieldMap::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldMapSym3(void *p) {
      return  p ? new(p) ::BmnFieldMapSym3 : new ::BmnFieldMapSym3;
   }
   static void *newArray_BmnFieldMapSym3(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldMapSym3[nElements] : new ::BmnFieldMapSym3[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldMapSym3(void *p) {
      delete ((::BmnFieldMapSym3*)p);
   }
   static void deleteArray_BmnFieldMapSym3(void *p) {
      delete [] ((::BmnFieldMapSym3*)p);
   }
   static void destruct_BmnFieldMapSym3(void *p) {
      typedef ::BmnFieldMapSym3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldMapSym3

//______________________________________________________________________________
void BmnFieldPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldPar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldPar::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldPar::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldPar.
      TClass *R__cl = ::BmnFieldPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBz", &fBz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapName", &fMapName);
      R__insp.InspectMember(fMapName, "fMapName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosX", &fPosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosY", &fPosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosZ", &fPosZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistortionFilename", &fDistortionFilename);
      R__insp.InspectMember(fDistortionFilename, "fDistortionFilename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParentName", &fParentName);
      R__insp.InspectMember(fParentName, "fParentName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeOfParent", &fTypeOfParent);
      FairParGenericSet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldPar(void *p) {
      return  p ? new(p) ::BmnFieldPar : new ::BmnFieldPar;
   }
   static void *newArray_BmnFieldPar(Long_t nElements, void *p) {
      return p ? new(p) ::BmnFieldPar[nElements] : new ::BmnFieldPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldPar(void *p) {
      delete ((::BmnFieldPar*)p);
   }
   static void deleteArray_BmnFieldPar(void *p) {
      delete [] ((::BmnFieldPar*)p);
   }
   static void destruct_BmnFieldPar(void *p) {
      typedef ::BmnFieldPar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldPar

//______________________________________________________________________________
void BmnFieldCreator::Streamer(TBuffer &R__b)
{
   // Stream an object of class BmnFieldCreator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BmnFieldCreator::Class(),this);
   } else {
      R__b.WriteClassBuffer(BmnFieldCreator::Class(),this);
   }
}

//______________________________________________________________________________
void BmnFieldCreator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BmnFieldCreator.
      TClass *R__cl = ::BmnFieldCreator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFieldPar", &fFieldPar);
      FairFieldFactory::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BmnFieldCreator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnFieldCreator : new ::BmnFieldCreator;
   }
   static void *newArray_BmnFieldCreator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BmnFieldCreator[nElements] : new ::BmnFieldCreator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BmnFieldCreator(void *p) {
      delete ((::BmnFieldCreator*)p);
   }
   static void deleteArray_BmnFieldCreator(void *p) {
      delete [] ((::BmnFieldCreator*)p);
   }
   static void destruct_BmnFieldCreator(void *p) {
      typedef ::BmnFieldCreator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BmnFieldCreator

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/bmnfield/FieldDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableFieldDict();

extern "C" void G__set_cpp_environmentFieldDict() {
  G__cpp_reset_tagtableFieldDict();
}
#include <new>
extern "C" int G__cpp_dllrevFieldDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BmnFieldPar */
static int G__FieldDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) BmnFieldPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldPar[n];
     } else {
       p = new((void*) gvp) BmnFieldPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldPar;
     } else {
       p = new((void*) gvp) BmnFieldPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldPar*) G__getstructoffset())->SetParameters((FairField*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldPar*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldPar*) G__getstructoffset())->MapName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetPositionX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetPositionY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetPositionZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldPar*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldPar*) G__getstructoffset())->GetDistortionFilename(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldPar*) G__getstructoffset())->GetParentName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldPar*) G__getstructoffset())->GetTypeOfParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_190_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldPar G__TBmnFieldPar;
static int G__FieldDict_190_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldPar*) (soff+(sizeof(BmnFieldPar)*i)))->~G__TBmnFieldPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldPar*) (soff))->~G__TBmnFieldPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldConst */
static int G__FieldDict_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldConst* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldConst[n];
     } else {
       p = new((void*) gvp) BmnFieldConst[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldConst;
     } else {
       p = new((void*) gvp) BmnFieldConst;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldConst* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldConst(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   } else {
     p = new((void*) gvp) BmnFieldConst(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldConst* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldConst((BmnFieldPar*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldConst((BmnFieldPar*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldConst*) G__getstructoffset())->SetFieldRegion((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldConst*) G__getstructoffset())->SetField((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldConst*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldConst*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldConst::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldConst::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldConst::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldConst::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldConst*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldConst::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldConst::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldConst::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldConst::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldConst G__TBmnFieldConst;
static int G__FieldDict_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldConst*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldConst*) (soff+(sizeof(BmnFieldConst)*i)))->~G__TBmnFieldConst();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldConst*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldConst*) (soff))->~G__TBmnFieldConst();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FieldDict_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldConst* dest = (BmnFieldConst*) G__getstructoffset();
   *dest = *(BmnFieldConst*) libp->para[0].ref;
   const BmnFieldConst& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldContFact */
static int G__FieldDict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldContFact[n];
     } else {
       p = new((void*) gvp) BmnFieldContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldContFact;
     } else {
       p = new((void*) gvp) BmnFieldContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldContFact G__TBmnFieldContFact;
static int G__FieldDict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldContFact*) (soff+(sizeof(BmnFieldContFact)*i)))->~G__TBmnFieldContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldContFact*) (soff))->~G__TBmnFieldContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldMapCreator */
static int G__FieldDict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapCreator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapCreator[n];
     } else {
       p = new((void*) gvp) BmnFieldMapCreator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapCreator;
     } else {
       p = new((void*) gvp) BmnFieldMapCreator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapCreator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMapCreator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMapCreator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapCreator*) G__getstructoffset())->SetGridParameters(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapCreator*) G__getstructoffset())->AddField((FairField*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((BmnFieldMapCreator*) G__getstructoffset())->CreateMap((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((BmnFieldMapCreator*) G__getstructoffset())->CreateMap());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const BmnFieldMapCreator*) G__getstructoffset())->GetMapName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetNz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapCreator*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldMapCreator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapCreator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldMapCreator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldMapCreator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapCreator*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapCreator*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapCreator*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapCreator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapCreator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapCreator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapCreator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_244_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapCreator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldMapCreator G__TBmnFieldMapCreator;
static int G__FieldDict_244_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldMapCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldMapCreator*) (soff+(sizeof(BmnFieldMapCreator)*i)))->~G__TBmnFieldMapCreator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldMapCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldMapCreator*) (soff))->~G__TBmnFieldMapCreator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldMapData */
static int G__FieldDict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapData[n];
     } else {
       p = new((void*) gvp) BmnFieldMapData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapData;
     } else {
       p = new((void*) gvp) BmnFieldMapData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMapData((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMapData((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMapData((const char*) G__int(libp->para[0]), *(BmnFieldMap*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) BmnFieldMapData((const char*) G__int(libp->para[0]), *(BmnFieldMap*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMapData*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetNz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMapData*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldMapData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldMapData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldMapData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_245_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldMapData G__TBmnFieldMapData;
static int G__FieldDict_245_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldMapData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldMapData*) (soff+(sizeof(BmnFieldMapData)*i)))->~G__TBmnFieldMapData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldMapData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldMapData*) (soff))->~G__TBmnFieldMapData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldMap */
static int G__FieldDict_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMap[n];
     } else {
       p = new((void*) gvp) BmnFieldMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMap;
     } else {
       p = new((void*) gvp) BmnFieldMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMap((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMap((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMap((BmnFieldPar*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMap((BmnFieldPar*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMap((BmnFieldMapCreator*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMap((BmnFieldMapCreator*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BmnFieldMap*) G__getstructoffset())->IsInside(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->WriteAsciiFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->WriteRootFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->SetScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((BmnFieldMap*) G__getstructoffset())->InterpolateMagField((Int_t) G__int(libp->para[0]), (BmnFieldMap*) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((BmnFieldMap*) G__getstructoffset())->DoGausSolution((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BmnFieldMap*) G__getstructoffset())->DoCheckSolution((Double_t**) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(vector<Double_t>*) libp->para[2].ref, (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->BuildGrid(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (BmnFieldMap*) G__int(libp->para[2]), (Double_t**) G__int(libp->para[3])
, libp->para[4].ref ? *(Double_t**) libp->para[4].ref : *(Double_t**) (void*) (&G__Mlong(libp->para[4])), (Double_t*) G__int(libp->para[5])
, (Char_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BmnFieldMap*) G__getstructoffset())->Lagrange((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((BmnFieldMap*) G__getstructoffset())->DoSeidelSolution((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BmnFieldMap*) G__getstructoffset())->ConvergeSeidel((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->StringPermutation((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BmnFieldMap*) G__getstructoffset())->FirstNorm((Double_t**) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BmnFieldMap*) G__getstructoffset())->SecondNorm((Double_t**) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BmnFieldMap*) G__getstructoffset())->ThirdNorm((Double_t**) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->MakeTransform((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((BmnFieldMap*) G__getstructoffset())->DoConjugGradient((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((BmnFieldMap*) G__getstructoffset())->MatrixByVectorMult((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BmnFieldMap*) G__getstructoffset())->VectorByVectorMult((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->SetDebugInfo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetXstep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetYstep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetZstep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMap*) G__getstructoffset())->GetNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMap*) G__getstructoffset())->GetNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BmnFieldMap*) G__getstructoffset())->GetNz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetPositionX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetPositionY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetPositionZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const BmnFieldMap*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMap*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMap*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BmnFieldMap*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((BmnFieldMap*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_246_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldMap G__TBmnFieldMap;
static int G__FieldDict_246_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldMap*) (soff+(sizeof(BmnFieldMap)*i)))->~G__TBmnFieldMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldMap*) (soff))->~G__TBmnFieldMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldMapSym3 */
static int G__FieldDict_247_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapSym3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapSym3[n];
     } else {
       p = new((void*) gvp) BmnFieldMapSym3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldMapSym3;
     } else {
       p = new((void*) gvp) BmnFieldMapSym3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapSym3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMapSym3((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMapSym3((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldMapSym3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BmnFieldMapSym3((BmnFieldPar*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) BmnFieldMapSym3((BmnFieldPar*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldMapSym3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapSym3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldMapSym3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldMapSym3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldMapSym3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapSym3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapSym3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldMapSym3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_247_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldMapSym3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldMapSym3 G__TBmnFieldMapSym3;
static int G__FieldDict_247_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldMapSym3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldMapSym3*) (soff+(sizeof(BmnFieldMapSym3)*i)))->~G__TBmnFieldMapSym3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldMapSym3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldMapSym3*) (soff))->~G__TBmnFieldMapSym3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BmnFieldCreator */
static int G__FieldDict_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BmnFieldCreator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldCreator[n];
     } else {
       p = new((void*) gvp) BmnFieldCreator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BmnFieldCreator;
     } else {
       p = new((void*) gvp) BmnFieldCreator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BmnFieldCreator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldCreator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BmnFieldCreator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BmnFieldCreator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BmnFieldCreator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldCreator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldCreator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BmnFieldCreator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FieldDict_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BmnFieldCreator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BmnFieldCreator G__TBmnFieldCreator;
static int G__FieldDict_252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BmnFieldCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BmnFieldCreator*) (soff+(sizeof(BmnFieldCreator)*i)))->~G__TBmnFieldCreator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BmnFieldCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BmnFieldCreator*) (soff))->~G__TBmnFieldCreator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BmnFieldPar */

/* BmnFieldConst */

/* BmnFieldContFact */

/* BmnFieldMapCreator */

/* BmnFieldMapData */

/* BmnFieldMap */

/* BmnFieldMapSym3 */

/* BmnFieldCreator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncFieldDict {
 public:
  G__Sizep2memfuncFieldDict(): p(&G__Sizep2memfuncFieldDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncFieldDict::*p)();
};

size_t G__get_sizep2memfuncFieldDict()
{
  G__Sizep2memfuncFieldDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceFieldDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar))) {
     BmnFieldPar *G__Lderived;
     G__Lderived=(BmnFieldPar*)0x1000;
     {
       FairParGenericSet *G__Lpbase=(FairParGenericSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar),G__get_linked_tagnum(&G__FieldDictLN_FairParGenericSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairParSet *G__Lpbase=(FairParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar),G__get_linked_tagnum(&G__FieldDictLN_FairParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst))) {
     BmnFieldConst *G__Lderived;
     G__Lderived=(BmnFieldConst*)0x1000;
     {
       FairField *G__Lpbase=(FairField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst),G__get_linked_tagnum(&G__FieldDictLN_FairField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualMagField *G__Lpbase=(TVirtualMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst),G__get_linked_tagnum(&G__FieldDictLN_TVirtualMagField),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_FairParSet))) {
     FairParSet *G__Lderived;
     G__Lderived=(FairParSet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_FairParSet),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_FairParSet),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact))) {
     BmnFieldContFact *G__Lderived;
     G__Lderived=(BmnFieldContFact*)0x1000;
     {
       FairContFact *G__Lpbase=(FairContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact),G__get_linked_tagnum(&G__FieldDictLN_FairContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData))) {
     BmnFieldMapData *G__Lderived;
     G__Lderived=(BmnFieldMapData*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap))) {
     BmnFieldMap *G__Lderived;
     G__Lderived=(BmnFieldMap*)0x1000;
     {
       FairField *G__Lpbase=(FairField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap),G__get_linked_tagnum(&G__FieldDictLN_FairField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualMagField *G__Lpbase=(TVirtualMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap),G__get_linked_tagnum(&G__FieldDictLN_TVirtualMagField),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3))) {
     BmnFieldMapSym3 *G__Lderived;
     G__Lderived=(BmnFieldMapSym3*)0x1000;
     {
       BmnFieldMap *G__Lpbase=(BmnFieldMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3),G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairField *G__Lpbase=(FairField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3),G__get_linked_tagnum(&G__FieldDictLN_FairField),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualMagField *G__Lpbase=(TVirtualMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3),G__get_linked_tagnum(&G__FieldDictLN_TVirtualMagField),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_FairParGenericSet))) {
     FairParGenericSet *G__Lderived;
     G__Lderived=(FairParGenericSet*)0x1000;
     {
       FairParSet *G__Lpbase=(FairParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__FieldDictLN_FairParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator))) {
     BmnFieldCreator *G__Lderived;
     G__Lderived=(BmnFieldCreator*)0x1000;
     {
       FairFieldFactory *G__Lpbase=(FairFieldFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator),G__get_linked_tagnum(&G__FieldDictLN_FairFieldFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableFieldDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__FieldDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__FieldDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BmnFieldPar */
static void G__setup_memvarBmnFieldPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar));
   { BmnFieldPar *p; p=(BmnFieldPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TString),-1,-1,4,"fMapName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TString),-1,-1,4,"fDistortionFilename=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TString),-1,-1,4,"fParentName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTypeOfParent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldConst */
static void G__setup_memvarBmnFieldConst(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst));
   { BmnFieldConst *p; p=(BmnFieldConst*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldContFact */
static void G__setup_memvarBmnFieldContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact));
   { BmnFieldContFact *p; p=(BmnFieldContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldMapCreator */
static void G__setup_memvarBmnFieldMapCreator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator));
   { BmnFieldMapCreator *p; p=(BmnFieldMapCreator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TString),-1,-1,4,"fMapName=",0,"Name of field map to be created");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNz=",0,"Number of grid points in each dimension");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,"Field limits in x");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,"Field limits in y");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,"Field limits in z");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBx=",0,"Array of Bx values;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBy=",0,"Array of By values;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBz=",0,"Array of Bz values;");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TList),-1,-1,4,"fFieldList=",0,"List of input fields;");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInit=",0,"Flag whether map is initialised");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldMapData */
static void G__setup_memvarBmnFieldMapData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData));
   { BmnFieldMapData *p; p=(BmnFieldMapData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,4,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldMap */
static void G__setup_memvarBmnFieldMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   { BmnFieldMap *p; p=(BmnFieldMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FieldDictLN_TString),-1,-1,2,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXstep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYstep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZstep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,2,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,2,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TArrayF),-1,-1,2,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHa[2][2][2]=",0,"! Field at corners of a grid cell");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHb[2][2]=",0,"! Interpolated field (2-dim)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHc[2]=",0,"! Interpolated field (1-dim)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDebugInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldMapSym3 */
static void G__setup_memvarBmnFieldMapSym3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3));
   { BmnFieldMapSym3 *p; p=(BmnFieldMapSym3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHemiX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHemiY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHemiZ=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BmnFieldCreator */
static void G__setup_memvarBmnFieldCreator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator));
   { BmnFieldCreator *p; p=(BmnFieldCreator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar),-1,-1,2,"fFieldPar=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarFieldDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBmnFieldPar(void) {
   /* BmnFieldPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar));
   G__memfunc_setup("BmnFieldPar",1060,G__FieldDict_190_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldPar",1060,G__FieldDict_190_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__FieldDict_190_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairField' - 0 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__FieldDict_190_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__FieldDict_190_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FieldDict_190_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__FieldDict_190_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__FieldDict_190_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__FieldDict_190_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__FieldDict_190_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__FieldDict_190_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__FieldDict_190_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__FieldDict_190_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapName",671,G__FieldDict_190_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionX",1229,G__FieldDict_190_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionY",1230,G__FieldDict_190_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionZ",1231,G__FieldDict_190_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScale",776,G__FieldDict_190_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistortionFilename",2160,G__FieldDict_190_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentName",1291,G__FieldDict_190_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - parentname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeOfParent",1505,G__FieldDict_190_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldPar",1060,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar), -1, 0, 1, 1, 4, 0, "u 'BmnFieldPar' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldPar), -1, 1, 1, 1, 4, 0, "u 'BmnFieldPar' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FieldDict_190_0_26, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_190_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_190_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_190_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_190_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_190_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_190_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_190_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_190_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldPar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldPar", 1186, G__FieldDict_190_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldConst(void) {
   /* BmnFieldConst */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst));
   G__memfunc_setup("BmnFieldConst",1288,G__FieldDict_191_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldConst",1288,G__FieldDict_191_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst), -1, 0, 10, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - xMin "
"d - 'Double_t' 0 - xMax d - 'Double_t' 0 - yMin "
"d - 'Double_t' 0 - yMax d - 'Double_t' 0 - zMin "
"d - 'Double_t' 0 - zMax d - 'Double_t' 0 - bX "
"d - 'Double_t' 0 - bY d - 'Double_t' 0 - bZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldConst",1288,G__FieldDict_191_0_3, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst), -1, 0, 1, 1, 1, 0, "U 'BmnFieldPar' - 0 - fieldPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFieldRegion",1396,G__FieldDict_191_0_4, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - xMin d - 'Double_t' 0 - xMax "
"d - 'Double_t' 0 - yMin d - 'Double_t' 0 - yMax "
"d - 'Double_t' 0 - zMin d - 'Double_t' 0 - zMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetField",784,G__FieldDict_191_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - bX d - 'Double_t' 0 - bY "
"d - 'Double_t' 0 - bZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBy",475,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBz",476,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXmin",700,G__FieldDict_191_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FieldDict_191_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__FieldDict_191_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__FieldDict_191_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__FieldDict_191_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__FieldDict_191_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__FieldDict_191_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__FieldDict_191_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__FieldDict_191_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__FieldDict_191_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FieldDict_191_0_19, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldConst::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_191_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldConst::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_191_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldConst::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_191_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldConst::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_191_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_191_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldConst::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_191_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldConst::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_191_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldConst::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_191_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldConst::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldConst", 1414, G__FieldDict_191_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FieldDict_191_0_32, (int) ('u'), G__get_linked_tagnum(&G__FieldDictLN_BmnFieldConst), -1, 1, 1, 1, 1, 0, "u 'BmnFieldConst' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldContFact(void) {
   /* BmnFieldContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact));
   G__memfunc_setup("BmnFieldContFact",1555,G__FieldDict_205_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "U 'FairContainer' - 0 - container", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAllContainers",1627,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FieldDict_205_0_4, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_205_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_205_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_205_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_205_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_205_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_205_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_205_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_205_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldContFact::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldContFact", 1681, G__FieldDict_205_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldMapCreator(void) {
   /* BmnFieldMapCreator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator));
   G__memfunc_setup("BmnFieldMapCreator",1775,G__FieldDict_244_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapCreator",1775,G__FieldDict_244_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator), -1, 0, 1, 1, 1, 0, "C - - 10 - mapName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGridParameters",1734,G__FieldDict_244_0_3, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - nx d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ny "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - nz d - 'Double_t' 0 - zmin "
"d - 'Double_t' 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddField",749,G__FieldDict_244_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairField' - 0 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMap",882,G__FieldDict_244_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '\"\"' fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapName",959,G__FieldDict_244_0_6, 117, G__get_linked_tagnum(&G__FieldDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNx",486,G__FieldDict_244_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNy",487,G__FieldDict_244_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNz",488,G__FieldDict_244_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__FieldDict_244_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FieldDict_244_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__FieldDict_244_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__FieldDict_244_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__FieldDict_244_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__FieldDict_244_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__FieldDict_244_0_16, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__FieldDict_244_0_17, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__FieldDict_244_0_18, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapCreator",1775,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator), -1, 0, 1, 1, 4, 0, "u 'BmnFieldMapCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapCreator), -1, 1, 1, 1, 4, 0, "u 'BmnFieldMapCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FieldDict_244_0_21, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldMapCreator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_244_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapCreator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_244_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldMapCreator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_244_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldMapCreator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__FieldDict_244_0_25, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__FieldDict_244_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__FieldDict_244_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_244_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_244_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapCreator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_244_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapCreator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_244_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapCreator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_244_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapCreator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldMapCreator", 1901, G__FieldDict_244_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldMapData(void) {
   /* BmnFieldMapData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData));
   G__memfunc_setup("BmnFieldMapData",1433,G__FieldDict_245_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapData",1433,G__FieldDict_245_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapData",1433,G__FieldDict_245_0_3, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'BmnFieldMap' - 11 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__FieldDict_245_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__FieldDict_245_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__FieldDict_245_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__FieldDict_245_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FieldDict_245_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__FieldDict_245_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__FieldDict_245_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNx",486,G__FieldDict_245_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNy",487,G__FieldDict_245_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNz",488,G__FieldDict_245_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__FieldDict_245_0_14, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__FieldDict_245_0_15, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__FieldDict_245_0_16, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapData",1433,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData), -1, 0, 1, 1, 4, 0, "u 'BmnFieldMapData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapData), -1, 1, 1, 1, 4, 0, "u 'BmnFieldMapData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FieldDict_245_0_19, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldMapData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_245_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_245_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldMapData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_245_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldMapData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_245_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_245_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_245_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_245_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_245_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldMapData", 1559, G__FieldDict_245_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldMap(void) {
   /* BmnFieldMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap));
   G__memfunc_setup("BmnFieldMap",1055,G__FieldDict_246_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMap",1055,G__FieldDict_246_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 0, 1, 1, 1, 0, "C - - 10 - mapName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMap",1055,G__FieldDict_246_0_3, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 0, 1, 1, 1, 0, "U 'BmnFieldPar' - 0 - fieldPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMap",1055,G__FieldDict_246_0_4, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 0, 1, 1, 1, 0, "U 'BmnFieldMapCreator' - 0 - creator", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBx",474,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBy",475,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBz",476,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,G__FieldDict_246_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z i - 'Int_t' 1 - ix "
"i - 'Int_t' 1 - iy i - 'Int_t' 1 - iz "
"d - 'Double_t' 1 - dx d - 'Double_t' 1 - dy "
"d - 'Double_t' 1 - dz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteAsciiFile",1396,G__FieldDict_246_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteRootFile",1327,G__FieldDict_246_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - fileName C - - 10 - mapName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__FieldDict_246_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScale",788,G__FieldDict_246_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - factor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InterpolateMagField",1920,G__FieldDict_246_0_14, 68, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - N U 'BmnFieldMap' - 0 - magField "
"c - 'Char_t' 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoGausSolution",1440,G__FieldDict_246_0_15, 68, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - dim D - 'Double_t' 2 - matrix "
"D - 'Double_t' 2 - matrix_orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoCheckSolution",1518,G__FieldDict_246_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"D - 'Double_t' 2 - matrix_orig D - 'Double_t' 0 - b_orig "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - sol i - 'Int_t' 0 - dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGrid",886,G__FieldDict_246_0_17, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - N i - 'Int_t' 0 - size "
"U 'BmnFieldMap' - 0 - magField D - 'Double_t' 2 - arr "
"D - 'Double_t' 1 - B D - 'Double_t' 0 - arr1 "
"c - 'Char_t' 0 - dir i - 'Int_t' 0 - sw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lagrange",801,G__FieldDict_246_0_18, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 0 - arr "
"u 'TVector3' - 0 - coord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoSeidelSolution",1638,G__FieldDict_246_0_19, 68, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 2 - a "
"D - 'Double_t' 0 - x D - 'Double_t' 0 - b "
"d - 'Double_t' 0 - eps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvergeSeidel",1423,G__FieldDict_246_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 - xk D - 'Double_t' 0 - xkp "
"i - 'Int_t' 0 - N d - 'Double_t' 0 - eps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StringPermutation",1807,G__FieldDict_246_0_21, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - size D - 'Double_t' 2 - A "
"D - 'Double_t' 0 - B i - 'Int_t' 0 - i "
"i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirstNorm",932,G__FieldDict_246_0_22, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 2 - A i - 'Int_t' 0 - n "
"i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SecondNorm",1016,G__FieldDict_246_0_23, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 2 - A i - 'Int_t' 0 - n "
"i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThirdNorm",919,G__FieldDict_246_0_24, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 2 - A i - 'Int_t' 0 - n "
"i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeTransform",1338,G__FieldDict_246_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - size D - 'Double_t' 2 - A "
"D - 'Double_t' 0 - B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoConjugGradient",1607,G__FieldDict_246_0_26, 68, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 2 - A "
"D - 'Double_t' 0 - B d - 'Double_t' 0 - eps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatrixByVectorMult",1861,G__FieldDict_246_0_27, 68, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 2 - matrix "
"D - 'Double_t' 0 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VectorByVectorMult",1859,G__FieldDict_246_0_28, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 0 - vec1 "
"D - 'Double_t' 0 - vec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugInfo",1183,G__FieldDict_246_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__FieldDict_246_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__FieldDict_246_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__FieldDict_246_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FieldDict_246_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__FieldDict_246_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__FieldDict_246_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXstep",820,G__FieldDict_246_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYstep",821,G__FieldDict_246_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZstep",822,G__FieldDict_246_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNx",486,G__FieldDict_246_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNy",487,G__FieldDict_246_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNz",488,G__FieldDict_246_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionX",1229,G__FieldDict_246_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionY",1230,G__FieldDict_246_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionZ",1231,G__FieldDict_246_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScale",776,G__FieldDict_246_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__FieldDict_246_0_46, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__FieldDict_246_0_47, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__FieldDict_246_0_48, 85, G__get_linked_tagnum(&G__FieldDictLN_TArrayF), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__FieldDict_246_0_49, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__FieldDict_246_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillParContainer",1613,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAsciiFile",1253,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadRootFile",1184,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - fileName C - - 10 - mapName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetField",784,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'BmnFieldMapData' - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interpolate",1159,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"d - 'Double_t' 0 - dx d - 'Double_t' 0 - dy "
"d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMap",1055,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 0, 1, 1, 4, 0, "u 'BmnFieldMap' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMap), -1, 1, 1, 1, 4, 0, "u 'BmnFieldMap' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FieldDict_246_0_59, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_246_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_246_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_246_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_246_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_246_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_246_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_246_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_246_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMap::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldMap", 1181, G__FieldDict_246_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldMapSym3(void) {
   /* BmnFieldMapSym3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3));
   G__memfunc_setup("BmnFieldMapSym3",1419,G__FieldDict_247_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapSym3",1419,G__FieldDict_247_0_2, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3), -1, 0, 1, 1, 1, 0, "C - - 10 - mapName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BmnFieldMapSym3",1419,G__FieldDict_247_0_3, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldMapSym3), -1, 0, 1, 1, 1, 0, "U 'BmnFieldPar' - 0 - fieldPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBy",475,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBz",476,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z i - 'Int_t' 1 - ix "
"i - 'Int_t' 1 - iy i - 'Int_t' 1 - iz "
"d - 'Double_t' 1 - dx d - 'Double_t' 1 - dy "
"d - 'Double_t' 1 - dz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FieldDict_247_0_8, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldMapSym3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_247_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapSym3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_247_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldMapSym3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_247_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldMapSym3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_247_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_247_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapSym3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_247_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapSym3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_247_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldMapSym3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_247_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldMapSym3::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldMapSym3", 1545, G__FieldDict_247_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBmnFieldCreator(void) {
   /* BmnFieldCreator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator));
   G__memfunc_setup("BmnFieldCreator",1489,G__FieldDict_252_0_1, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createFairField",1498,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_FairField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParm",700,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FieldDict_252_0_4, 85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BmnFieldCreator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FieldDict_252_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldCreator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FieldDict_252_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BmnFieldCreator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FieldDict_252_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BmnFieldCreator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FieldDict_252_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FieldDict_252_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldCreator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FieldDict_252_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldCreator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FieldDict_252_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BmnFieldCreator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FieldDict_252_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BmnFieldCreator::DeclFileLine) ), 0);
   G__memfunc_setup("BmnFieldCreator",1489,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator), -1, 0, 1, 1, 4, 0, "u 'BmnFieldCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FieldDictLN_BmnFieldCreator), -1, 1, 1, 1, 4, 0, "u 'BmnFieldCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BmnFieldCreator", 1615, G__FieldDict_252_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncFieldDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalFieldDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcFieldDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__FieldDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TVirtualMagField = { "TVirtualMagField" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairField = { "FairField" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldPar = { "BmnFieldPar" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldConst = { "BmnFieldConst" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__FieldDictLN_FairParSet = { "FairParSet" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairContainer = { "FairContainer" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairContFact = { "FairContFact" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldContFact = { "BmnFieldContFact" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldMapCreator = { "BmnFieldMapCreator" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldMapData = { "BmnFieldMapData" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldMap = { "BmnFieldMap" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldMapSym3 = { "BmnFieldMapSym3" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairParamList = { "FairParamList" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairParGenericSet = { "FairParGenericSet" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_FairFieldFactory = { "FairFieldFactory" , 99 , -1 };
G__linked_taginfo G__FieldDictLN_BmnFieldCreator = { "BmnFieldCreator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableFieldDict() {
  G__FieldDictLN_TClass.tagnum = -1 ;
  G__FieldDictLN_TBuffer.tagnum = -1 ;
  G__FieldDictLN_TMemberInspector.tagnum = -1 ;
  G__FieldDictLN_TObject.tagnum = -1 ;
  G__FieldDictLN_TNamed.tagnum = -1 ;
  G__FieldDictLN_TString.tagnum = -1 ;
  G__FieldDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FieldDictLN_TList.tagnum = -1 ;
  G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FieldDictLN_TVirtualMagField.tagnum = -1 ;
  G__FieldDictLN_FairField.tagnum = -1 ;
  G__FieldDictLN_BmnFieldPar.tagnum = -1 ;
  G__FieldDictLN_BmnFieldConst.tagnum = -1 ;
  G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__FieldDictLN_FairParSet.tagnum = -1 ;
  G__FieldDictLN_FairContainer.tagnum = -1 ;
  G__FieldDictLN_FairContFact.tagnum = -1 ;
  G__FieldDictLN_BmnFieldContFact.tagnum = -1 ;
  G__FieldDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__FieldDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__FieldDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__FieldDictLN_TVector3.tagnum = -1 ;
  G__FieldDictLN_TArrayF.tagnum = -1 ;
  G__FieldDictLN_BmnFieldMapCreator.tagnum = -1 ;
  G__FieldDictLN_BmnFieldMapData.tagnum = -1 ;
  G__FieldDictLN_BmnFieldMap.tagnum = -1 ;
  G__FieldDictLN_BmnFieldMapSym3.tagnum = -1 ;
  G__FieldDictLN_FairParamList.tagnum = -1 ;
  G__FieldDictLN_FairParGenericSet.tagnum = -1 ;
  G__FieldDictLN_FairFieldFactory.tagnum = -1 ;
  G__FieldDictLN_BmnFieldCreator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableFieldDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TString);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TList);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TVirtualMagField);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldPar),sizeof(BmnFieldPar),-1,327424,(char*)NULL,G__setup_memvarBmnFieldPar,G__setup_memfuncBmnFieldPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldConst),sizeof(BmnFieldConst),-1,324864,(char*)NULL,G__setup_memvarBmnFieldConst,G__setup_memfuncBmnFieldConst);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairParSet);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairContainer);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldContFact),sizeof(BmnFieldContFact),-1,324864,(char*)NULL,G__setup_memvarBmnFieldContFact,G__setup_memfuncBmnFieldContFact);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_TArrayF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldMapCreator),sizeof(BmnFieldMapCreator),-1,298752,(char*)NULL,G__setup_memvarBmnFieldMapCreator,G__setup_memfuncBmnFieldMapCreator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldMapData),sizeof(BmnFieldMapData),-1,327424,(char*)NULL,G__setup_memvarBmnFieldMapData,G__setup_memfuncBmnFieldMapData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldMap),sizeof(BmnFieldMap),-1,327424,(char*)NULL,G__setup_memvarBmnFieldMap,G__setup_memfuncBmnFieldMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldMapSym3),sizeof(BmnFieldMapSym3),-1,324864,(char*)NULL,G__setup_memvarBmnFieldMapSym3,G__setup_memfuncBmnFieldMapSym3);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairParamList);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairParGenericSet);
   G__get_linked_tagnum_fwd(&G__FieldDictLN_FairFieldFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FieldDictLN_BmnFieldCreator),sizeof(BmnFieldCreator),-1,265984,(char*)NULL,G__setup_memvarBmnFieldCreator,G__setup_memfuncBmnFieldCreator);
}
extern "C" void G__cpp_setupFieldDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupFieldDict()");
  G__set_cpp_environmentFieldDict();
  G__cpp_setup_tagtableFieldDict();

  G__cpp_setup_inheritanceFieldDict();

  G__cpp_setup_typetableFieldDict();

  G__cpp_setup_memvarFieldDict();

  G__cpp_setup_memfuncFieldDict();
  G__cpp_setup_globalFieldDict();
  G__cpp_setup_funcFieldDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncFieldDict();
  return;
}
class G__cpp_setup_initFieldDict {
  public:
    G__cpp_setup_initFieldDict() { G__add_setup_func("FieldDict",(G__incsetup)(&G__cpp_setupFieldDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initFieldDict() { G__remove_setup_func("FieldDict"); }
};
G__cpp_setup_initFieldDict G__cpp_setup_initializerFieldDict;

