//
// File generated by /opt/fairsoft/install/bin/rootcint at Tue Dec  2 12:03:51 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedImerzdIBMNdIGITdItrunk_220814dIbuilddIKFdIBmnKFDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BmnKFDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CbmKFHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_CbmKFHit(void *p);
   static void deleteArray_CbmKFHit(void *p);
   static void destruct_CbmKFHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFHit*)
   {
      ::CbmKFHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFHit", ::CbmKFHit::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFHit.h", 16,
                  typeid(::CbmKFHit), DefineBehavior(ptr, ptr),
                  &::CbmKFHit::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFHit) );
      instance.SetDelete(&delete_CbmKFHit);
      instance.SetDeleteArray(&deleteArray_CbmKFHit);
      instance.SetDestructor(&destruct_CbmKFHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFHit*)
   {
      return GenerateInitInstanceLocal((::CbmKFHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFVertexInterface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFVertexInterface(void *p = 0);
   static void *newArray_CbmKFVertexInterface(Long_t size, void *p);
   static void delete_CbmKFVertexInterface(void *p);
   static void deleteArray_CbmKFVertexInterface(void *p);
   static void destruct_CbmKFVertexInterface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFVertexInterface*)
   {
      ::CbmKFVertexInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFVertexInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFVertexInterface", ::CbmKFVertexInterface::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFVertexInterface.h", 24,
                  typeid(::CbmKFVertexInterface), DefineBehavior(ptr, ptr),
                  &::CbmKFVertexInterface::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFVertexInterface) );
      instance.SetNew(&new_CbmKFVertexInterface);
      instance.SetNewArray(&newArray_CbmKFVertexInterface);
      instance.SetDelete(&delete_CbmKFVertexInterface);
      instance.SetDeleteArray(&deleteArray_CbmKFVertexInterface);
      instance.SetDestructor(&destruct_CbmKFVertexInterface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFVertexInterface*)
   {
      return GenerateInitInstanceLocal((::CbmKFVertexInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFVertexInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFTrackInterface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFTrackInterface(void *p = 0);
   static void *newArray_CbmKFTrackInterface(Long_t size, void *p);
   static void delete_CbmKFTrackInterface(void *p);
   static void deleteArray_CbmKFTrackInterface(void *p);
   static void destruct_CbmKFTrackInterface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFTrackInterface*)
   {
      ::CbmKFTrackInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFTrackInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFTrackInterface", ::CbmKFTrackInterface::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFTrackInterface.h", 26,
                  typeid(::CbmKFTrackInterface), DefineBehavior(ptr, ptr),
                  &::CbmKFTrackInterface::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFTrackInterface) );
      instance.SetNew(&new_CbmKFTrackInterface);
      instance.SetNewArray(&newArray_CbmKFTrackInterface);
      instance.SetDelete(&delete_CbmKFTrackInterface);
      instance.SetDeleteArray(&deleteArray_CbmKFTrackInterface);
      instance.SetDestructor(&destruct_CbmKFTrackInterface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFTrackInterface*)
   {
      return GenerateInitInstanceLocal((::CbmKFTrackInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFTrackInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFMaterial_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFMaterial(void *p = 0);
   static void *newArray_CbmKFMaterial(Long_t size, void *p);
   static void delete_CbmKFMaterial(void *p);
   static void deleteArray_CbmKFMaterial(void *p);
   static void destruct_CbmKFMaterial(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFMaterial*)
   {
      ::CbmKFMaterial *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFMaterial >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFMaterial", ::CbmKFMaterial::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMaterial.h", 18,
                  typeid(::CbmKFMaterial), DefineBehavior(ptr, ptr),
                  &::CbmKFMaterial::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFMaterial) );
      instance.SetNew(&new_CbmKFMaterial);
      instance.SetNewArray(&newArray_CbmKFMaterial);
      instance.SetDelete(&delete_CbmKFMaterial);
      instance.SetDeleteArray(&deleteArray_CbmKFMaterial);
      instance.SetDestructor(&destruct_CbmKFMaterial);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFMaterial*)
   {
      return GenerateInitInstanceLocal((::CbmKFMaterial*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFMaterial*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFWall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFWall(void *p = 0);
   static void *newArray_CbmKFWall(Long_t size, void *p);
   static void delete_CbmKFWall(void *p);
   static void deleteArray_CbmKFWall(void *p);
   static void destruct_CbmKFWall(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFWall*)
   {
      ::CbmKFWall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFWall >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFWall", ::CbmKFWall::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMaterial.h", 69,
                  typeid(::CbmKFWall), DefineBehavior(ptr, ptr),
                  &::CbmKFWall::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFWall) );
      instance.SetNew(&new_CbmKFWall);
      instance.SetNewArray(&newArray_CbmKFWall);
      instance.SetDelete(&delete_CbmKFWall);
      instance.SetDeleteArray(&deleteArray_CbmKFWall);
      instance.SetDestructor(&destruct_CbmKFWall);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFWall*)
   {
      return GenerateInitInstanceLocal((::CbmKFWall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFWall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFTube_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFTube(void *p = 0);
   static void *newArray_CbmKFTube(Long_t size, void *p);
   static void delete_CbmKFTube(void *p);
   static void deleteArray_CbmKFTube(void *p);
   static void destruct_CbmKFTube(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFTube*)
   {
      ::CbmKFTube *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFTube >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFTube", ::CbmKFTube::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMaterial.h", 77,
                  typeid(::CbmKFTube), DefineBehavior(ptr, ptr),
                  &::CbmKFTube::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFTube) );
      instance.SetNew(&new_CbmKFTube);
      instance.SetNewArray(&newArray_CbmKFTube);
      instance.SetDelete(&delete_CbmKFTube);
      instance.SetDeleteArray(&deleteArray_CbmKFTube);
      instance.SetDestructor(&destruct_CbmKFTube);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFTube*)
   {
      return GenerateInitInstanceLocal((::CbmKFTube*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFTube*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFBox_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFBox(void *p = 0);
   static void *newArray_CbmKFBox(Long_t size, void *p);
   static void delete_CbmKFBox(void *p);
   static void deleteArray_CbmKFBox(void *p);
   static void destruct_CbmKFBox(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFBox*)
   {
      ::CbmKFBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFBox", ::CbmKFBox::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMaterial.h", 97,
                  typeid(::CbmKFBox), DefineBehavior(ptr, ptr),
                  &::CbmKFBox::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFBox) );
      instance.SetNew(&new_CbmKFBox);
      instance.SetNewArray(&newArray_CbmKFBox);
      instance.SetDelete(&delete_CbmKFBox);
      instance.SetDeleteArray(&deleteArray_CbmKFBox);
      instance.SetDestructor(&destruct_CbmKFBox);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFBox*)
   {
      return GenerateInitInstanceLocal((::CbmKFBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFCone_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFCone(void *p = 0);
   static void *newArray_CbmKFCone(Long_t size, void *p);
   static void delete_CbmKFCone(void *p);
   static void deleteArray_CbmKFCone(void *p);
   static void destruct_CbmKFCone(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFCone*)
   {
      ::CbmKFCone *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFCone >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFCone", ::CbmKFCone::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMaterial.h", 112,
                  typeid(::CbmKFCone), DefineBehavior(ptr, ptr),
                  &::CbmKFCone::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFCone) );
      instance.SetNew(&new_CbmKFCone);
      instance.SetNewArray(&newArray_CbmKFCone);
      instance.SetDelete(&delete_CbmKFCone);
      instance.SetDeleteArray(&deleteArray_CbmKFCone);
      instance.SetDestructor(&destruct_CbmKFCone);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFCone*)
   {
      return GenerateInitInstanceLocal((::CbmKFCone*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFCone*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKF(void *p = 0);
   static void *newArray_CbmKF(Long_t size, void *p);
   static void delete_CbmKF(void *p);
   static void deleteArray_CbmKF(void *p);
   static void destruct_CbmKF(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKF*)
   {
      ::CbmKF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKF", ::CbmKF::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKF.h", 31,
                  typeid(::CbmKF), DefineBehavior(ptr, ptr),
                  &::CbmKF::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKF) );
      instance.SetNew(&new_CbmKF);
      instance.SetNewArray(&newArray_CbmKF);
      instance.SetDelete(&delete_CbmKF);
      instance.SetDeleteArray(&deleteArray_CbmKF);
      instance.SetDestructor(&destruct_CbmKF);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKF*)
   {
      return GenerateInitInstanceLocal((::CbmKF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFFieldMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFFieldMath(void *p = 0);
   static void *newArray_CbmKFFieldMath(Long_t size, void *p);
   static void delete_CbmKFFieldMath(void *p);
   static void deleteArray_CbmKFFieldMath(void *p);
   static void destruct_CbmKFFieldMath(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFFieldMath*)
   {
      ::CbmKFFieldMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFFieldMath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFFieldMath", ::CbmKFFieldMath::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFFieldMath.h", 20,
                  typeid(::CbmKFFieldMath), DefineBehavior(ptr, ptr),
                  &::CbmKFFieldMath::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFFieldMath) );
      instance.SetNew(&new_CbmKFFieldMath);
      instance.SetNewArray(&newArray_CbmKFFieldMath);
      instance.SetDelete(&delete_CbmKFFieldMath);
      instance.SetDeleteArray(&deleteArray_CbmKFFieldMath);
      instance.SetDestructor(&destruct_CbmKFFieldMath);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFFieldMath*)
   {
      return GenerateInitInstanceLocal((::CbmKFFieldMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFFieldMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFMath(void *p = 0);
   static void *newArray_CbmKFMath(Long_t size, void *p);
   static void delete_CbmKFMath(void *p);
   static void deleteArray_CbmKFMath(void *p);
   static void destruct_CbmKFMath(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFMath*)
   {
      ::CbmKFMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFMath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFMath", ::CbmKFMath::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFMath.h", 20,
                  typeid(::CbmKFMath), DefineBehavior(ptr, ptr),
                  &::CbmKFMath::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFMath) );
      instance.SetNew(&new_CbmKFMath);
      instance.SetNewArray(&newArray_CbmKFMath);
      instance.SetDelete(&delete_CbmKFMath);
      instance.SetDeleteArray(&deleteArray_CbmKFMath);
      instance.SetDestructor(&destruct_CbmKFMath);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFMath*)
   {
      return GenerateInitInstanceLocal((::CbmKFMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFPixelMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFPixelMeasurement(void *p = 0);
   static void *newArray_CbmKFPixelMeasurement(Long_t size, void *p);
   static void delete_CbmKFPixelMeasurement(void *p);
   static void deleteArray_CbmKFPixelMeasurement(void *p);
   static void destruct_CbmKFPixelMeasurement(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFPixelMeasurement*)
   {
      ::CbmKFPixelMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFPixelMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFPixelMeasurement", ::CbmKFPixelMeasurement::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFPixelMeasurement.h", 18,
                  typeid(::CbmKFPixelMeasurement), DefineBehavior(ptr, ptr),
                  &::CbmKFPixelMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFPixelMeasurement) );
      instance.SetNew(&new_CbmKFPixelMeasurement);
      instance.SetNewArray(&newArray_CbmKFPixelMeasurement);
      instance.SetDelete(&delete_CbmKFPixelMeasurement);
      instance.SetDeleteArray(&deleteArray_CbmKFPixelMeasurement);
      instance.SetDestructor(&destruct_CbmKFPixelMeasurement);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFPixelMeasurement*)
   {
      return GenerateInitInstanceLocal((::CbmKFPixelMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFPixelMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFPrimaryVertexFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFPrimaryVertexFinder(void *p = 0);
   static void *newArray_CbmKFPrimaryVertexFinder(Long_t size, void *p);
   static void delete_CbmKFPrimaryVertexFinder(void *p);
   static void deleteArray_CbmKFPrimaryVertexFinder(void *p);
   static void destruct_CbmKFPrimaryVertexFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFPrimaryVertexFinder*)
   {
      ::CbmKFPrimaryVertexFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFPrimaryVertexFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFPrimaryVertexFinder", ::CbmKFPrimaryVertexFinder::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFPrimaryVertexFinder.h", 18,
                  typeid(::CbmKFPrimaryVertexFinder), DefineBehavior(ptr, ptr),
                  &::CbmKFPrimaryVertexFinder::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFPrimaryVertexFinder) );
      instance.SetNew(&new_CbmKFPrimaryVertexFinder);
      instance.SetNewArray(&newArray_CbmKFPrimaryVertexFinder);
      instance.SetDelete(&delete_CbmKFPrimaryVertexFinder);
      instance.SetDeleteArray(&deleteArray_CbmKFPrimaryVertexFinder);
      instance.SetDestructor(&destruct_CbmKFPrimaryVertexFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFPrimaryVertexFinder*)
   {
      return GenerateInitInstanceLocal((::CbmKFPrimaryVertexFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFPrimaryVertexFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFUMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFUMeasurement(void *p = 0);
   static void *newArray_CbmKFUMeasurement(Long_t size, void *p);
   static void delete_CbmKFUMeasurement(void *p);
   static void deleteArray_CbmKFUMeasurement(void *p);
   static void destruct_CbmKFUMeasurement(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFUMeasurement*)
   {
      ::CbmKFUMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFUMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFUMeasurement", ::CbmKFUMeasurement::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFUMeasurement.h", 17,
                  typeid(::CbmKFUMeasurement), DefineBehavior(ptr, ptr),
                  &::CbmKFUMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFUMeasurement) );
      instance.SetNew(&new_CbmKFUMeasurement);
      instance.SetNewArray(&newArray_CbmKFUMeasurement);
      instance.SetDelete(&delete_CbmKFUMeasurement);
      instance.SetDeleteArray(&deleteArray_CbmKFUMeasurement);
      instance.SetDestructor(&destruct_CbmKFUMeasurement);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFUMeasurement*)
   {
      return GenerateInitInstanceLocal((::CbmKFUMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFUMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFParticle(void *p = 0);
   static void *newArray_CbmKFParticle(Long_t size, void *p);
   static void delete_CbmKFParticle(void *p);
   static void deleteArray_CbmKFParticle(void *p);
   static void destruct_CbmKFParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFParticle*)
   {
      ::CbmKFParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFParticle", ::CbmKFParticle::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/CbmKFParticle.h", 19,
                  typeid(::CbmKFParticle), DefineBehavior(ptr, ptr),
                  &::CbmKFParticle::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFParticle) );
      instance.SetNew(&new_CbmKFParticle);
      instance.SetNewArray(&newArray_CbmKFParticle);
      instance.SetDelete(&delete_CbmKFParticle);
      instance.SetDeleteArray(&deleteArray_CbmKFParticle);
      instance.SetDestructor(&destruct_CbmKFParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFParticle*)
   {
      return GenerateInitInstanceLocal((::CbmKFParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFStsHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFStsHit(void *p = 0);
   static void *newArray_CbmKFStsHit(Long_t size, void *p);
   static void delete_CbmKFStsHit(void *p);
   static void deleteArray_CbmKFStsHit(void *p);
   static void destruct_CbmKFStsHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFStsHit*)
   {
      ::CbmKFStsHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFStsHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFStsHit", ::CbmKFStsHit::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/Interface/CbmKFStsHit.h", 11,
                  typeid(::CbmKFStsHit), DefineBehavior(ptr, ptr),
                  &::CbmKFStsHit::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFStsHit) );
      instance.SetNew(&new_CbmKFStsHit);
      instance.SetNewArray(&newArray_CbmKFStsHit);
      instance.SetDelete(&delete_CbmKFStsHit);
      instance.SetDeleteArray(&deleteArray_CbmKFStsHit);
      instance.SetDestructor(&destruct_CbmKFStsHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFStsHit*)
   {
      return GenerateInitInstanceLocal((::CbmKFStsHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFStsHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFTrack(void *p = 0);
   static void *newArray_CbmKFTrack(Long_t size, void *p);
   static void delete_CbmKFTrack(void *p);
   static void deleteArray_CbmKFTrack(void *p);
   static void destruct_CbmKFTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFTrack*)
   {
      ::CbmKFTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFTrack", ::CbmKFTrack::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/Interface/CbmKFTrack.h", 21,
                  typeid(::CbmKFTrack), DefineBehavior(ptr, ptr),
                  &::CbmKFTrack::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFTrack) );
      instance.SetNew(&new_CbmKFTrack);
      instance.SetNewArray(&newArray_CbmKFTrack);
      instance.SetDelete(&delete_CbmKFTrack);
      instance.SetDeleteArray(&deleteArray_CbmKFTrack);
      instance.SetDestructor(&destruct_CbmKFTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFTrack*)
   {
      return GenerateInitInstanceLocal((::CbmKFTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFVertex(void *p = 0);
   static void *newArray_CbmKFVertex(Long_t size, void *p);
   static void delete_CbmKFVertex(void *p);
   static void deleteArray_CbmKFVertex(void *p);
   static void destruct_CbmKFVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFVertex*)
   {
      ::CbmKFVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFVertex", ::CbmKFVertex::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/Interface/CbmKFVertex.h", 6,
                  typeid(::CbmKFVertex), DefineBehavior(ptr, ptr),
                  &::CbmKFVertex::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFVertex) );
      instance.SetNew(&new_CbmKFVertex);
      instance.SetNewArray(&newArray_CbmKFVertex);
      instance.SetDelete(&delete_CbmKFVertex);
      instance.SetDeleteArray(&deleteArray_CbmKFVertex);
      instance.SetDestructor(&destruct_CbmKFVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFVertex*)
   {
      return GenerateInitInstanceLocal((::CbmKFVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmPVFinderKF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmPVFinderKF(void *p = 0);
   static void *newArray_CbmPVFinderKF(Long_t size, void *p);
   static void delete_CbmPVFinderKF(void *p);
   static void deleteArray_CbmPVFinderKF(void *p);
   static void destruct_CbmPVFinderKF(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmPVFinderKF*)
   {
      ::CbmPVFinderKF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmPVFinderKF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmPVFinderKF", ::CbmPVFinderKF::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/Interface/CbmPVFinderKF.h", 16,
                  typeid(::CbmPVFinderKF), DefineBehavior(ptr, ptr),
                  &::CbmPVFinderKF::Dictionary, isa_proxy, 4,
                  sizeof(::CbmPVFinderKF) );
      instance.SetNew(&new_CbmPVFinderKF);
      instance.SetNewArray(&newArray_CbmPVFinderKF);
      instance.SetDelete(&delete_CbmPVFinderKF);
      instance.SetDeleteArray(&deleteArray_CbmPVFinderKF);
      instance.SetDestructor(&destruct_CbmPVFinderKF);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmPVFinderKF*)
   {
      return GenerateInitInstanceLocal((::CbmPVFinderKF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmPVFinderKF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmStsKFTrackFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmStsKFTrackFitter(void *p = 0);
   static void *newArray_CbmStsKFTrackFitter(Long_t size, void *p);
   static void delete_CbmStsKFTrackFitter(void *p);
   static void deleteArray_CbmStsKFTrackFitter(void *p);
   static void destruct_CbmStsKFTrackFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmStsKFTrackFitter*)
   {
      ::CbmStsKFTrackFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmStsKFTrackFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmStsKFTrackFitter", ::CbmStsKFTrackFitter::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/Interface/CbmStsKFTrackFitter.h", 13,
                  typeid(::CbmStsKFTrackFitter), DefineBehavior(ptr, ptr),
                  &::CbmStsKFTrackFitter::Dictionary, isa_proxy, 4,
                  sizeof(::CbmStsKFTrackFitter) );
      instance.SetNew(&new_CbmStsKFTrackFitter);
      instance.SetNewArray(&newArray_CbmStsKFTrackFitter);
      instance.SetDelete(&delete_CbmStsKFTrackFitter);
      instance.SetDeleteArray(&deleteArray_CbmStsKFTrackFitter);
      instance.SetDestructor(&destruct_CbmStsKFTrackFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmStsKFTrackFitter*)
   {
      return GenerateInitInstanceLocal((::CbmStsKFTrackFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmStsKFTrackFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void KFParticleMatch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KFParticleMatch(void *p = 0);
   static void *newArray_KFParticleMatch(Long_t size, void *p);
   static void delete_KFParticleMatch(void *p);
   static void deleteArray_KFParticleMatch(void *p);
   static void destruct_KFParticleMatch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KFParticleMatch*)
   {
      ::KFParticleMatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KFParticleMatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KFParticleMatch", ::KFParticleMatch::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/KFQA/KFParticleMatch.h", 24,
                  typeid(::KFParticleMatch), DefineBehavior(ptr, ptr),
                  &::KFParticleMatch::Dictionary, isa_proxy, 4,
                  sizeof(::KFParticleMatch) );
      instance.SetNew(&new_KFParticleMatch);
      instance.SetNewArray(&newArray_KFParticleMatch);
      instance.SetDelete(&delete_KFParticleMatch);
      instance.SetDeleteArray(&deleteArray_KFParticleMatch);
      instance.SetDestructor(&destruct_KFParticleMatch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KFParticleMatch*)
   {
      return GenerateInitInstanceLocal((::KFParticleMatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KFParticleMatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void KFMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KFMCParticle(void *p = 0);
   static void *newArray_KFMCParticle(Long_t size, void *p);
   static void delete_KFMCParticle(void *p);
   static void deleteArray_KFMCParticle(void *p);
   static void destruct_KFMCParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KFMCParticle*)
   {
      ::KFMCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KFMCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KFMCParticle", ::KFMCParticle::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/KFQA/KFMCParticle.h", 24,
                  typeid(::KFMCParticle), DefineBehavior(ptr, ptr),
                  &::KFMCParticle::Dictionary, isa_proxy, 4,
                  sizeof(::KFMCParticle) );
      instance.SetNew(&new_KFMCParticle);
      instance.SetNewArray(&newArray_KFMCParticle);
      instance.SetDelete(&delete_KFMCParticle);
      instance.SetDeleteArray(&deleteArray_KFMCParticle);
      instance.SetDestructor(&destruct_KFMCParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KFMCParticle*)
   {
      return GenerateInitInstanceLocal((::KFMCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KFMCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CbmKFPartEfficiencies_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CbmKFPartEfficiencies(void *p = 0);
   static void *newArray_CbmKFPartEfficiencies(Long_t size, void *p);
   static void delete_CbmKFPartEfficiencies(void *p);
   static void deleteArray_CbmKFPartEfficiencies(void *p);
   static void destruct_CbmKFPartEfficiencies(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CbmKFPartEfficiencies*)
   {
      ::CbmKFPartEfficiencies *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CbmKFPartEfficiencies >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CbmKFPartEfficiencies", ::CbmKFPartEfficiencies::Class_Version(), "/home/merz/BMN/GIT/trunk_220814/KF/KFQA/CbmKFPartEfficiencies.h", 8,
                  typeid(::CbmKFPartEfficiencies), DefineBehavior(ptr, ptr),
                  &::CbmKFPartEfficiencies::Dictionary, isa_proxy, 4,
                  sizeof(::CbmKFPartEfficiencies) );
      instance.SetNew(&new_CbmKFPartEfficiencies);
      instance.SetNewArray(&newArray_CbmKFPartEfficiencies);
      instance.SetDelete(&delete_CbmKFPartEfficiencies);
      instance.SetDeleteArray(&deleteArray_CbmKFPartEfficiencies);
      instance.SetDestructor(&destruct_CbmKFPartEfficiencies);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CbmKFPartEfficiencies*)
   {
      return GenerateInitInstanceLocal((::CbmKFPartEfficiencies*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CbmKFPartEfficiencies*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CbmKFHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFHit::Class_Name()
{
   return "CbmKFHit";
}

//______________________________________________________________________________
const char *CbmKFHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFVertexInterface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFVertexInterface::Class_Name()
{
   return "CbmKFVertexInterface";
}

//______________________________________________________________________________
const char *CbmKFVertexInterface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertexInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFVertexInterface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertexInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFVertexInterface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertexInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFVertexInterface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertexInterface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFTrackInterface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFTrackInterface::Class_Name()
{
   return "CbmKFTrackInterface";
}

//______________________________________________________________________________
const char *CbmKFTrackInterface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrackInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFTrackInterface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrackInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFTrackInterface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrackInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFTrackInterface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrackInterface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFMaterial::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFMaterial::Class_Name()
{
   return "CbmKFMaterial";
}

//______________________________________________________________________________
const char *CbmKFMaterial::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMaterial*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFMaterial::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMaterial*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFMaterial::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMaterial*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFMaterial::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMaterial*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFWall::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFWall::Class_Name()
{
   return "CbmKFWall";
}

//______________________________________________________________________________
const char *CbmKFWall::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFWall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFWall::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFWall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFWall::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFWall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFWall::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFWall*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFTube::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFTube::Class_Name()
{
   return "CbmKFTube";
}

//______________________________________________________________________________
const char *CbmKFTube::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTube*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFTube::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTube*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFTube::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTube*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFTube::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTube*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFBox::Class_Name()
{
   return "CbmKFBox";
}

//______________________________________________________________________________
const char *CbmKFBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFCone::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFCone::Class_Name()
{
   return "CbmKFCone";
}

//______________________________________________________________________________
const char *CbmKFCone::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFCone*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFCone::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFCone*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFCone::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFCone*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFCone::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFCone*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKF::Class_Name()
{
   return "CbmKF";
}

//______________________________________________________________________________
const char *CbmKF::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFFieldMath::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFFieldMath::Class_Name()
{
   return "CbmKFFieldMath";
}

//______________________________________________________________________________
const char *CbmKFFieldMath::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFFieldMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFFieldMath::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFFieldMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFFieldMath::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFFieldMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFFieldMath::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFFieldMath*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFMath::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFMath::Class_Name()
{
   return "CbmKFMath";
}

//______________________________________________________________________________
const char *CbmKFMath::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFMath::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFMath::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFMath::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFMath*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFPixelMeasurement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFPixelMeasurement::Class_Name()
{
   return "CbmKFPixelMeasurement";
}

//______________________________________________________________________________
const char *CbmKFPixelMeasurement::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPixelMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFPixelMeasurement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPixelMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFPixelMeasurement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPixelMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFPixelMeasurement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPixelMeasurement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFPrimaryVertexFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFPrimaryVertexFinder::Class_Name()
{
   return "CbmKFPrimaryVertexFinder";
}

//______________________________________________________________________________
const char *CbmKFPrimaryVertexFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPrimaryVertexFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFPrimaryVertexFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPrimaryVertexFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFPrimaryVertexFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPrimaryVertexFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFPrimaryVertexFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPrimaryVertexFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFUMeasurement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFUMeasurement::Class_Name()
{
   return "CbmKFUMeasurement";
}

//______________________________________________________________________________
const char *CbmKFUMeasurement::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFUMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFUMeasurement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFUMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFUMeasurement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFUMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFUMeasurement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFUMeasurement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFParticle::Class_Name()
{
   return "CbmKFParticle";
}

//______________________________________________________________________________
const char *CbmKFParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFStsHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFStsHit::Class_Name()
{
   return "CbmKFStsHit";
}

//______________________________________________________________________________
const char *CbmKFStsHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFStsHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFStsHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFStsHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFStsHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFStsHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFStsHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFStsHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFTrack::Class_Name()
{
   return "CbmKFTrack";
}

//______________________________________________________________________________
const char *CbmKFTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFVertex::Class_Name()
{
   return "CbmKFVertex";
}

//______________________________________________________________________________
const char *CbmKFVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFVertex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmPVFinderKF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmPVFinderKF::Class_Name()
{
   return "CbmPVFinderKF";
}

//______________________________________________________________________________
const char *CbmPVFinderKF::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmPVFinderKF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmPVFinderKF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmPVFinderKF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmPVFinderKF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmPVFinderKF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmPVFinderKF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmPVFinderKF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmStsKFTrackFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmStsKFTrackFitter::Class_Name()
{
   return "CbmStsKFTrackFitter";
}

//______________________________________________________________________________
const char *CbmStsKFTrackFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmStsKFTrackFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmStsKFTrackFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmStsKFTrackFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmStsKFTrackFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmStsKFTrackFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmStsKFTrackFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmStsKFTrackFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *KFParticleMatch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *KFParticleMatch::Class_Name()
{
   return "KFParticleMatch";
}

//______________________________________________________________________________
const char *KFParticleMatch::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::KFParticleMatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KFParticleMatch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::KFParticleMatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KFParticleMatch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::KFParticleMatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KFParticleMatch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::KFParticleMatch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *KFMCParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *KFMCParticle::Class_Name()
{
   return "KFMCParticle";
}

//______________________________________________________________________________
const char *KFMCParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KFMCParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KFMCParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KFMCParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CbmKFPartEfficiencies::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CbmKFPartEfficiencies::Class_Name()
{
   return "CbmKFPartEfficiencies";
}

//______________________________________________________________________________
const char *CbmKFPartEfficiencies::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPartEfficiencies*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CbmKFPartEfficiencies::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPartEfficiencies*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CbmKFPartEfficiencies::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPartEfficiencies*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CbmKFPartEfficiencies::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CbmKFPartEfficiencies*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CbmKF::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKF::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKF::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKF.
      TClass *R__cl = ::CbmKF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vMaterial", (void*)&vMaterial);
      R__insp.InspectMember("vector<CbmKFMaterial*>", (void*)&vMaterial, "vMaterial.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vMvdMaterial", (void*)&vMvdMaterial);
      R__insp.InspectMember("vector<CbmKFTube>", (void*)&vMvdMaterial, "vMvdMaterial.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vStsMaterial", (void*)&vStsMaterial);
      R__insp.InspectMember("vector<CbmKFTube>", (void*)&vStsMaterial, "vStsMaterial.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSttMaterial", (void*)&vSttMaterial);
      R__insp.InspectMember("vector<CbmKFWall>", (void*)&vSttMaterial, "vSttMaterial.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vTargets", (void*)&vTargets);
      R__insp.InspectMember("vector<CbmKFTube>", (void*)&vTargets, "vTargets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vPipe", (void*)&vPipe);
      R__insp.InspectMember("vector<CbmKFCone>", (void*)&vPipe, "vPipe.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vPassiveTube", (void*)&vPassiveTube);
      R__insp.InspectMember("vector<CbmKFTube>", (void*)&vPassiveTube, "vPassiveTube.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vPassiveWall", (void*)&vPassiveWall);
      R__insp.InspectMember("vector<CbmKFWall>", (void*)&vPassiveWall, "vPassiveWall.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vPassiveBox", (void*)&vPassiveBox);
      R__insp.InspectMember("vector<CbmKFBox>", (void*)&vPassiveBox, "vPassiveBox.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MvdStationIDMap", (void*)&MvdStationIDMap);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&MvdStationIDMap, "MvdStationIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StsStationIDMap", (void*)&StsStationIDMap);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&StsStationIDMap, "StsStationIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SttStationIDMap", (void*)&SttStationIDMap);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&SttStationIDMap, "SttStationIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StsDigi", &StsDigi);
      R__insp.InspectMember(StsDigi, "StsDigi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMagneticField", &fMagneticField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMethod", &fMethod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaterialID2IndexMap", (void*)&fMaterialID2IndexMap);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&fMaterialID2IndexMap, "fMaterialID2IndexMap.", false);
      FairTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKF(void *p) {
      return  p ? new(p) ::CbmKF : new ::CbmKF;
   }
   static void *newArray_CbmKF(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKF[nElements] : new ::CbmKF[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKF(void *p) {
      delete ((::CbmKF*)p);
   }
   static void deleteArray_CbmKF(void *p) {
      delete [] ((::CbmKF*)p);
   }
   static void destruct_CbmKF(void *p) {
      typedef ::CbmKF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKF

//______________________________________________________________________________
void CbmKFPrimaryVertexFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFPrimaryVertexFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFPrimaryVertexFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFPrimaryVertexFinder::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFPrimaryVertexFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFPrimaryVertexFinder.
      TClass *R__cl = ::CbmKFPrimaryVertexFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<CbmKFTrackInterface*>", (void*)&Tracks, "Tracks.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFPrimaryVertexFinder(void *p) {
      return  p ? new(p) ::CbmKFPrimaryVertexFinder : new ::CbmKFPrimaryVertexFinder;
   }
   static void *newArray_CbmKFPrimaryVertexFinder(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFPrimaryVertexFinder[nElements] : new ::CbmKFPrimaryVertexFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFPrimaryVertexFinder(void *p) {
      delete ((::CbmKFPrimaryVertexFinder*)p);
   }
   static void deleteArray_CbmKFPrimaryVertexFinder(void *p) {
      delete [] ((::CbmKFPrimaryVertexFinder*)p);
   }
   static void destruct_CbmKFPrimaryVertexFinder(void *p) {
      typedef ::CbmKFPrimaryVertexFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFPrimaryVertexFinder

//______________________________________________________________________________
void CbmKFMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFMath.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFMath::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFMath::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFMath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFMath.
      TClass *R__cl = ::CbmKFMath::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFMath(void *p) {
      return  p ? new(p) ::CbmKFMath : new ::CbmKFMath;
   }
   static void *newArray_CbmKFMath(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFMath[nElements] : new ::CbmKFMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFMath(void *p) {
      delete ((::CbmKFMath*)p);
   }
   static void deleteArray_CbmKFMath(void *p) {
      delete [] ((::CbmKFMath*)p);
   }
   static void destruct_CbmKFMath(void *p) {
      typedef ::CbmKFMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFMath

//______________________________________________________________________________
void CbmKFFieldMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFFieldMath.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFFieldMath::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFFieldMath::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFFieldMath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFFieldMath.
      TClass *R__cl = ::CbmKFFieldMath::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFFieldMath(void *p) {
      return  p ? new(p) ::CbmKFFieldMath : new ::CbmKFFieldMath;
   }
   static void *newArray_CbmKFFieldMath(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFFieldMath[nElements] : new ::CbmKFFieldMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFFieldMath(void *p) {
      delete ((::CbmKFFieldMath*)p);
   }
   static void deleteArray_CbmKFFieldMath(void *p) {
      delete [] ((::CbmKFFieldMath*)p);
   }
   static void destruct_CbmKFFieldMath(void *p) {
      typedef ::CbmKFFieldMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFFieldMath

//______________________________________________________________________________
void CbmKFHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFHit::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFHit.
      TClass *R__cl = ::CbmKFHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaterialIndex", &MaterialIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CbmKFHit(void *p) {
      delete ((::CbmKFHit*)p);
   }
   static void deleteArray_CbmKFHit(void *p) {
      delete [] ((::CbmKFHit*)p);
   }
   static void destruct_CbmKFHit(void *p) {
      typedef ::CbmKFHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFHit

//______________________________________________________________________________
void CbmKFStsHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFStsHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFStsHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFStsHit::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFStsHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFStsHit.
      TClass *R__cl = ::CbmKFStsHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitPoint", &FitPoint);
      R__insp.InspectMember(FitPoint, "FitPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tube", &tube);
      CbmKFHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFStsHit(void *p) {
      return  p ? new(p) ::CbmKFStsHit : new ::CbmKFStsHit;
   }
   static void *newArray_CbmKFStsHit(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFStsHit[nElements] : new ::CbmKFStsHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFStsHit(void *p) {
      delete ((::CbmKFStsHit*)p);
   }
   static void deleteArray_CbmKFStsHit(void *p) {
      delete [] ((::CbmKFStsHit*)p);
   }
   static void destruct_CbmKFStsHit(void *p) {
      typedef ::CbmKFStsHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFStsHit

//______________________________________________________________________________
void CbmKFUMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFUMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFUMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFUMeasurement::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFUMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFUMeasurement.
      TClass *R__cl = ::CbmKFUMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u", &u);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma2", &sigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_s", &phi_s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_c", &phi_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_ss", &phi_ss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_cc", &phi_cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_2sc", &phi_2sc);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFUMeasurement(void *p) {
      return  p ? new(p) ::CbmKFUMeasurement : new ::CbmKFUMeasurement;
   }
   static void *newArray_CbmKFUMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFUMeasurement[nElements] : new ::CbmKFUMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFUMeasurement(void *p) {
      delete ((::CbmKFUMeasurement*)p);
   }
   static void deleteArray_CbmKFUMeasurement(void *p) {
      delete [] ((::CbmKFUMeasurement*)p);
   }
   static void destruct_CbmKFUMeasurement(void *p) {
      typedef ::CbmKFUMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFUMeasurement

//______________________________________________________________________________
void CbmKFPixelMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFPixelMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFPixelMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFPixelMeasurement::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFPixelMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFPixelMeasurement.
      TClass *R__cl = ::CbmKFPixelMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V[3]", V);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFPixelMeasurement(void *p) {
      return  p ? new(p) ::CbmKFPixelMeasurement : new ::CbmKFPixelMeasurement;
   }
   static void *newArray_CbmKFPixelMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFPixelMeasurement[nElements] : new ::CbmKFPixelMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFPixelMeasurement(void *p) {
      delete ((::CbmKFPixelMeasurement*)p);
   }
   static void deleteArray_CbmKFPixelMeasurement(void *p) {
      delete [] ((::CbmKFPixelMeasurement*)p);
   }
   static void destruct_CbmKFPixelMeasurement(void *p) {
      typedef ::CbmKFPixelMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFPixelMeasurement

//______________________________________________________________________________
void CbmKFTrackInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFTrackInterface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFTrackInterface::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFTrackInterface::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFTrackInterface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFTrackInterface.
      TClass *R__cl = ::CbmKFTrackInterface::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFTrackInterface(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CbmKFTrackInterface : new ::CbmKFTrackInterface;
   }
   static void *newArray_CbmKFTrackInterface(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CbmKFTrackInterface[nElements] : new ::CbmKFTrackInterface[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFTrackInterface(void *p) {
      delete ((::CbmKFTrackInterface*)p);
   }
   static void deleteArray_CbmKFTrackInterface(void *p) {
      delete [] ((::CbmKFTrackInterface*)p);
   }
   static void destruct_CbmKFTrackInterface(void *p) {
      typedef ::CbmKFTrackInterface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFTrackInterface

//______________________________________________________________________________
void CbmKFVertexInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFVertexInterface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFVertexInterface::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFVertexInterface::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFVertexInterface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFVertexInterface.
      TClass *R__cl = ::CbmKFVertexInterface::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFVertexInterface(void *p) {
      return  p ? new(p) ::CbmKFVertexInterface : new ::CbmKFVertexInterface;
   }
   static void *newArray_CbmKFVertexInterface(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFVertexInterface[nElements] : new ::CbmKFVertexInterface[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFVertexInterface(void *p) {
      delete ((::CbmKFVertexInterface*)p);
   }
   static void deleteArray_CbmKFVertexInterface(void *p) {
      delete [] ((::CbmKFVertexInterface*)p);
   }
   static void destruct_CbmKFVertexInterface(void *p) {
      typedef ::CbmKFVertexInterface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFVertexInterface

//______________________________________________________________________________
void CbmKFTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFTrack::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFTrack.
      TClass *R__cl = ::CbmKFTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT[6]", fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC[15]", fC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMass", &fMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsElectron", &fIsElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDF", &fNDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("vector<CbmKFHit*>", (void*)&fHits, "fHits.", false);
      CbmKFTrackInterface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CbmKFTrack : new ::CbmKFTrack;
   }
   static void *newArray_CbmKFTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CbmKFTrack[nElements] : new ::CbmKFTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFTrack(void *p) {
      delete ((::CbmKFTrack*)p);
   }
   static void deleteArray_CbmKFTrack(void *p) {
      delete [] ((::CbmKFTrack*)p);
   }
   static void destruct_CbmKFTrack(void *p) {
      typedef ::CbmKFTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFTrack

//______________________________________________________________________________
void CbmKFVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFVertex::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFVertex.
      TClass *R__cl = ::CbmKFVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC[6]", fC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDF", &fNDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTracks", &fNTracks);
      CbmKFVertexInterface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFVertex(void *p) {
      return  p ? new(p) ::CbmKFVertex : new ::CbmKFVertex;
   }
   static void *newArray_CbmKFVertex(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFVertex[nElements] : new ::CbmKFVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFVertex(void *p) {
      delete ((::CbmKFVertex*)p);
   }
   static void deleteArray_CbmKFVertex(void *p) {
      delete [] ((::CbmKFVertex*)p);
   }
   static void destruct_CbmKFVertex(void *p) {
      typedef ::CbmKFVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFVertex

//______________________________________________________________________________
void CbmKFMaterial::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFMaterial.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFMaterial::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFMaterial::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFMaterial::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFMaterial.
      TClass *R__cl = ::CbmKFMaterial::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZReference", &ZReference);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZThickness", &ZThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RadLength", &RadLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F", &F);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fe", &Fe);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFMaterial(void *p) {
      return  p ? new(p) ::CbmKFMaterial : new ::CbmKFMaterial;
   }
   static void *newArray_CbmKFMaterial(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFMaterial[nElements] : new ::CbmKFMaterial[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFMaterial(void *p) {
      delete ((::CbmKFMaterial*)p);
   }
   static void deleteArray_CbmKFMaterial(void *p) {
      delete [] ((::CbmKFMaterial*)p);
   }
   static void destruct_CbmKFMaterial(void *p) {
      typedef ::CbmKFMaterial current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFMaterial

//______________________________________________________________________________
void CbmKFTube::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFTube.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFTube::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFTube::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFTube::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFTube.
      TClass *R__cl = ::CbmKFTube::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &dz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R", &R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rr", &rr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RR", &RR);
      CbmKFMaterial::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFTube(void *p) {
      return  p ? new(p) ::CbmKFTube : new ::CbmKFTube;
   }
   static void *newArray_CbmKFTube(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFTube[nElements] : new ::CbmKFTube[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFTube(void *p) {
      delete ((::CbmKFTube*)p);
   }
   static void deleteArray_CbmKFTube(void *p) {
      delete [] ((::CbmKFTube*)p);
   }
   static void destruct_CbmKFTube(void *p) {
      typedef ::CbmKFTube current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFTube

//______________________________________________________________________________
void CbmKFBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFBox::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFBox::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFBox.
      TClass *R__cl = ::CbmKFBox::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dx05", &dx05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dy05", &dy05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &dz);
      CbmKFMaterial::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFBox(void *p) {
      return  p ? new(p) ::CbmKFBox : new ::CbmKFBox;
   }
   static void *newArray_CbmKFBox(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFBox[nElements] : new ::CbmKFBox[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFBox(void *p) {
      delete ((::CbmKFBox*)p);
   }
   static void deleteArray_CbmKFBox(void *p) {
      delete [] ((::CbmKFBox*)p);
   }
   static void destruct_CbmKFBox(void *p) {
      typedef ::CbmKFBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFBox

//______________________________________________________________________________
void CbmKFWall::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFWall.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFWall::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFWall::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFWall::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFWall.
      TClass *R__cl = ::CbmKFWall::IsA();
      if (R__cl || R__insp.IsA()) { }
      CbmKFMaterial::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFWall(void *p) {
      return  p ? new(p) ::CbmKFWall : new ::CbmKFWall;
   }
   static void *newArray_CbmKFWall(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFWall[nElements] : new ::CbmKFWall[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFWall(void *p) {
      delete ((::CbmKFWall*)p);
   }
   static void deleteArray_CbmKFWall(void *p) {
      delete [] ((::CbmKFWall*)p);
   }
   static void destruct_CbmKFWall(void *p) {
      typedef ::CbmKFWall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFWall

//______________________________________________________________________________
void CbmKFCone::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFCone.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFCone::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFCone::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFCone::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFCone.
      TClass *R__cl = ::CbmKFCone::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1", &z1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2", &z2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r1", &r1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R1", &R1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r2", &r2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R2", &R2);
      CbmKFMaterial::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFCone(void *p) {
      return  p ? new(p) ::CbmKFCone : new ::CbmKFCone;
   }
   static void *newArray_CbmKFCone(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFCone[nElements] : new ::CbmKFCone[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFCone(void *p) {
      delete ((::CbmKFCone*)p);
   }
   static void deleteArray_CbmKFCone(void *p) {
      delete [] ((::CbmKFCone*)p);
   }
   static void destruct_CbmKFCone(void *p) {
      typedef ::CbmKFCone current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFCone

//______________________________________________________________________________
void CbmStsKFTrackFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmStsKFTrackFitter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmStsKFTrackFitter::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmStsKFTrackFitter::Class(),this);
   }
}

//______________________________________________________________________________
void CbmStsKFTrackFitter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmStsKFTrackFitter.
      TClass *R__cl = ::CbmStsKFTrackFitter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("vector<CbmKFStsHit>", (void*)&fHits, "fHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMvdHitsArray", &fMvdHitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStsHitsArray", &fStsHitsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsInitialised", &fIsInitialised);
      CbmStsTrackFitter::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmStsKFTrackFitter(void *p) {
      return  p ? new(p) ::CbmStsKFTrackFitter : new ::CbmStsKFTrackFitter;
   }
   static void *newArray_CbmStsKFTrackFitter(Long_t nElements, void *p) {
      return p ? new(p) ::CbmStsKFTrackFitter[nElements] : new ::CbmStsKFTrackFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmStsKFTrackFitter(void *p) {
      delete ((::CbmStsKFTrackFitter*)p);
   }
   static void deleteArray_CbmStsKFTrackFitter(void *p) {
      delete [] ((::CbmStsKFTrackFitter*)p);
   }
   static void destruct_CbmStsKFTrackFitter(void *p) {
      typedef ::CbmStsKFTrackFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmStsKFTrackFitter

//______________________________________________________________________________
void CbmPVFinderKF::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmPVFinderKF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmPVFinderKF::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmPVFinderKF::Class(),this);
   }
}

//______________________________________________________________________________
void CbmPVFinderKF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmPVFinderKF.
      TClass *R__cl = ::CbmPVFinderKF::IsA();
      if (R__cl || R__insp.IsA()) { }
      CbmPrimaryVertexFinder::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmPVFinderKF(void *p) {
      return  p ? new(p) ::CbmPVFinderKF : new ::CbmPVFinderKF;
   }
   static void *newArray_CbmPVFinderKF(Long_t nElements, void *p) {
      return p ? new(p) ::CbmPVFinderKF[nElements] : new ::CbmPVFinderKF[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmPVFinderKF(void *p) {
      delete ((::CbmPVFinderKF*)p);
   }
   static void deleteArray_CbmPVFinderKF(void *p) {
      delete [] ((::CbmPVFinderKF*)p);
   }
   static void destruct_CbmPVFinderKF(void *p) {
      typedef ::CbmPVFinderKF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmPVFinderKF

//______________________________________________________________________________
void CbmKFParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFParticle::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFParticle.
      TClass *R__cl = ::CbmKFParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDaughtersIds", (void*)&fDaughtersIds);
      R__insp.InspectMember("vector<int>", (void*)&fDaughtersIds, "fDaughtersIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r[8]", r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C[36]", C);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDF", &NDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q", &Q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AtProductionVertex", &AtProductionVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fieldRegion[10]", fieldRegion);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFParticle(void *p) {
      return  p ? new(p) ::CbmKFParticle : new ::CbmKFParticle;
   }
   static void *newArray_CbmKFParticle(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFParticle[nElements] : new ::CbmKFParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFParticle(void *p) {
      delete ((::CbmKFParticle*)p);
   }
   static void deleteArray_CbmKFParticle(void *p) {
      delete [] ((::CbmKFParticle*)p);
   }
   static void destruct_CbmKFParticle(void *p) {
      typedef ::CbmKFParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFParticle

//______________________________________________________________________________
void CbmKFPartEfficiencies::Streamer(TBuffer &R__b)
{
   // Stream an object of class CbmKFPartEfficiencies.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CbmKFPartEfficiencies::Class(),this);
   } else {
      R__b.WriteClassBuffer(CbmKFPartEfficiencies::Class(),this);
   }
}

//______________________________________________________________________________
void CbmKFPartEfficiencies::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CbmKFPartEfficiencies.
      TClass *R__cl = ::CbmKFPartEfficiencies::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partPDG[60]", partPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partName[60]", partName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partTitle[60]", partTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partDaughterPdg", (void*)&partDaughterPdg);
      R__insp.InspectMember("vector<vector<int> >", (void*)&partDaughterPdg, "partDaughterPdg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMHistoMin[60]", partMHistoMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMHistoMax[60]", partMHistoMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "names", (void*)&names);
      R__insp.InspectMember("vector<TString>", (void*)&names, "names.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "indices", (void*)&indices);
      R__insp.InspectMember("map<TString,int>", (void*)&indices, "indices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdgToIndex", (void*)&fPdgToIndex);
      R__insp.InspectMember("map<int,int>", (void*)&fPdgToIndex, "fPdgToIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_reco", (void*)&ratio_reco);
      R__insp.InspectMember("TL1TracksCatCounters<double>", (void*)&ratio_reco, "ratio_reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc", (void*)&mc);
      R__insp.InspectMember("TL1TracksCatCounters<int>", (void*)&mc, "mc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reco", (void*)&reco);
      R__insp.InspectMember("TL1TracksCatCounters<int>", (void*)&reco, "reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_ghost", (void*)&ratio_ghost);
      R__insp.InspectMember("TL1TracksCatCounters<double>", (void*)&ratio_ghost, "ratio_ghost.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_bg", (void*)&ratio_bg);
      R__insp.InspectMember("TL1TracksCatCounters<double>", (void*)&ratio_bg, "ratio_bg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_clone", (void*)&ratio_clone);
      R__insp.InspectMember("TL1TracksCatCounters<double>", (void*)&ratio_clone, "ratio_clone.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ghost", (void*)&ghost);
      R__insp.InspectMember("TL1TracksCatCounters<int>", (void*)&ghost, "ghost.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bg", (void*)&bg);
      R__insp.InspectMember("TL1TracksCatCounters<int>", (void*)&bg, "bg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clone", (void*)&clone);
      R__insp.InspectMember("TL1TracksCatCounters<int>", (void*)&clone, "clone.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CbmKFPartEfficiencies(void *p) {
      return  p ? new(p) ::CbmKFPartEfficiencies : new ::CbmKFPartEfficiencies;
   }
   static void *newArray_CbmKFPartEfficiencies(Long_t nElements, void *p) {
      return p ? new(p) ::CbmKFPartEfficiencies[nElements] : new ::CbmKFPartEfficiencies[nElements];
   }
   // Wrapper around operator delete
   static void delete_CbmKFPartEfficiencies(void *p) {
      delete ((::CbmKFPartEfficiencies*)p);
   }
   static void deleteArray_CbmKFPartEfficiencies(void *p) {
      delete [] ((::CbmKFPartEfficiencies*)p);
   }
   static void destruct_CbmKFPartEfficiencies(void *p) {
      typedef ::CbmKFPartEfficiencies current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CbmKFPartEfficiencies

//______________________________________________________________________________
void KFParticleMatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class KFParticleMatch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KFParticleMatch::Class(),this);
   } else {
      R__b.WriteClassBuffer(KFParticleMatch::Class(),this);
   }
}

//______________________________________________________________________________
void KFParticleMatch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KFParticleMatch.
      TClass *R__cl = ::KFParticleMatch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatch", &fMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchType", &fMatchType);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KFParticleMatch(void *p) {
      return  p ? new(p) ::KFParticleMatch : new ::KFParticleMatch;
   }
   static void *newArray_KFParticleMatch(Long_t nElements, void *p) {
      return p ? new(p) ::KFParticleMatch[nElements] : new ::KFParticleMatch[nElements];
   }
   // Wrapper around operator delete
   static void delete_KFParticleMatch(void *p) {
      delete ((::KFParticleMatch*)p);
   }
   static void deleteArray_KFParticleMatch(void *p) {
      delete [] ((::KFParticleMatch*)p);
   }
   static void destruct_KFParticleMatch(void *p) {
      typedef ::KFParticleMatch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KFParticleMatch

//______________________________________________________________________________
void KFMCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class KFMCParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KFMCParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(KFMCParticle::Class(),this);
   }
}

//______________________________________________________________________________
void KFMCParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KFMCParticle.
      TClass *R__cl = ::KFMCParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDaughterIds", (void*)&fDaughterIds);
      R__insp.InspectMember("vector<int>", (void*)&fDaughterIds, "fDaughterIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCTrackID", &fMCTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMotherId", &fMotherId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsReconstructable", &fIsReconstructable);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KFMCParticle(void *p) {
      return  p ? new(p) ::KFMCParticle : new ::KFMCParticle;
   }
   static void *newArray_KFMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::KFMCParticle[nElements] : new ::KFMCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_KFMCParticle(void *p) {
      delete ((::KFMCParticle*)p);
   }
   static void deleteArray_KFMCParticle(void *p) {
      delete [] ((::KFMCParticle*)p);
   }
   static void destruct_KFMCParticle(void *p) {
      typedef ::KFMCParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KFMCParticle

namespace ROOT {
   void maplETStringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOintgR_Dictionary();
   static void *new_maplETStringcOintgR(void *p = 0);
   static void *newArray_maplETStringcOintgR(Long_t size, void *p);
   static void delete_maplETStringcOintgR(void *p);
   static void deleteArray_maplETStringcOintgR(void *p);
   static void destruct_maplETStringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,int>*)
   {
      map<TString,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,int>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,int>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,int>) );
      instance.SetNew(&new_maplETStringcOintgR);
      instance.SetNewArray(&newArray_maplETStringcOintgR);
      instance.SetDelete(&delete_maplETStringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOintgR);
      instance.SetDestructor(&destruct_maplETStringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int> : new map<TString,int>;
   }
   static void *newArray_maplETStringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int>[nElements] : new map<TString,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOintgR(void *p) {
      delete ((map<TString,int>*)p);
   }
   static void deleteArray_maplETStringcOintgR(void *p) {
      delete [] ((map<TString,int>*)p);
   }
   static void destruct_maplETStringcOintgR(void *p) {
      typedef map<TString,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,int>

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void vectorlECbmKFBoxgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFBoxgR_Dictionary();
   static void *new_vectorlECbmKFBoxgR(void *p = 0);
   static void *newArray_vectorlECbmKFBoxgR(Long_t size, void *p);
   static void delete_vectorlECbmKFBoxgR(void *p);
   static void deleteArray_vectorlECbmKFBoxgR(void *p);
   static void destruct_vectorlECbmKFBoxgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFBox>*)
   {
      vector<CbmKFBox> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFBox>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFBox>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFBox>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFBoxgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFBox>) );
      instance.SetNew(&new_vectorlECbmKFBoxgR);
      instance.SetNewArray(&newArray_vectorlECbmKFBoxgR);
      instance.SetDelete(&delete_vectorlECbmKFBoxgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFBoxgR);
      instance.SetDestructor(&destruct_vectorlECbmKFBoxgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFBox> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFBox>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFBoxgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFBox>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFBoxgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFBox> : new vector<CbmKFBox>;
   }
   static void *newArray_vectorlECbmKFBoxgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFBox>[nElements] : new vector<CbmKFBox>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFBoxgR(void *p) {
      delete ((vector<CbmKFBox>*)p);
   }
   static void deleteArray_vectorlECbmKFBoxgR(void *p) {
      delete [] ((vector<CbmKFBox>*)p);
   }
   static void destruct_vectorlECbmKFBoxgR(void *p) {
      typedef vector<CbmKFBox> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFBox>

namespace ROOT {
   void vectorlECbmKFConegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFConegR_Dictionary();
   static void *new_vectorlECbmKFConegR(void *p = 0);
   static void *newArray_vectorlECbmKFConegR(Long_t size, void *p);
   static void delete_vectorlECbmKFConegR(void *p);
   static void deleteArray_vectorlECbmKFConegR(void *p);
   static void destruct_vectorlECbmKFConegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFCone>*)
   {
      vector<CbmKFCone> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFCone>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFCone>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFCone>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFConegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFCone>) );
      instance.SetNew(&new_vectorlECbmKFConegR);
      instance.SetNewArray(&newArray_vectorlECbmKFConegR);
      instance.SetDelete(&delete_vectorlECbmKFConegR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFConegR);
      instance.SetDestructor(&destruct_vectorlECbmKFConegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFCone> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFCone>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFConegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFCone>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFConegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFCone> : new vector<CbmKFCone>;
   }
   static void *newArray_vectorlECbmKFConegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFCone>[nElements] : new vector<CbmKFCone>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFConegR(void *p) {
      delete ((vector<CbmKFCone>*)p);
   }
   static void deleteArray_vectorlECbmKFConegR(void *p) {
      delete [] ((vector<CbmKFCone>*)p);
   }
   static void destruct_vectorlECbmKFConegR(void *p) {
      typedef vector<CbmKFCone> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFCone>

namespace ROOT {
   void vectorlECbmKFHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFHitmUgR_Dictionary();
   static void *new_vectorlECbmKFHitmUgR(void *p = 0);
   static void *newArray_vectorlECbmKFHitmUgR(Long_t size, void *p);
   static void delete_vectorlECbmKFHitmUgR(void *p);
   static void deleteArray_vectorlECbmKFHitmUgR(void *p);
   static void destruct_vectorlECbmKFHitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFHit*>*)
   {
      vector<CbmKFHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFHit*>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFHit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFHit*>) );
      instance.SetNew(&new_vectorlECbmKFHitmUgR);
      instance.SetNewArray(&newArray_vectorlECbmKFHitmUgR);
      instance.SetDelete(&delete_vectorlECbmKFHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFHitmUgR);
      instance.SetDestructor(&destruct_vectorlECbmKFHitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFHitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFHit*> : new vector<CbmKFHit*>;
   }
   static void *newArray_vectorlECbmKFHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFHit*>[nElements] : new vector<CbmKFHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFHitmUgR(void *p) {
      delete ((vector<CbmKFHit*>*)p);
   }
   static void deleteArray_vectorlECbmKFHitmUgR(void *p) {
      delete [] ((vector<CbmKFHit*>*)p);
   }
   static void destruct_vectorlECbmKFHitmUgR(void *p) {
      typedef vector<CbmKFHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFHit*>

namespace ROOT {
   void vectorlECbmKFMaterialmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFMaterialmUgR_Dictionary();
   static void *new_vectorlECbmKFMaterialmUgR(void *p = 0);
   static void *newArray_vectorlECbmKFMaterialmUgR(Long_t size, void *p);
   static void delete_vectorlECbmKFMaterialmUgR(void *p);
   static void deleteArray_vectorlECbmKFMaterialmUgR(void *p);
   static void destruct_vectorlECbmKFMaterialmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFMaterial*>*)
   {
      vector<CbmKFMaterial*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFMaterial*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFMaterial*>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFMaterial*>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFMaterialmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFMaterial*>) );
      instance.SetNew(&new_vectorlECbmKFMaterialmUgR);
      instance.SetNewArray(&newArray_vectorlECbmKFMaterialmUgR);
      instance.SetDelete(&delete_vectorlECbmKFMaterialmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFMaterialmUgR);
      instance.SetDestructor(&destruct_vectorlECbmKFMaterialmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFMaterial*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFMaterial*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFMaterialmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFMaterial*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFMaterialmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFMaterial*> : new vector<CbmKFMaterial*>;
   }
   static void *newArray_vectorlECbmKFMaterialmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFMaterial*>[nElements] : new vector<CbmKFMaterial*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFMaterialmUgR(void *p) {
      delete ((vector<CbmKFMaterial*>*)p);
   }
   static void deleteArray_vectorlECbmKFMaterialmUgR(void *p) {
      delete [] ((vector<CbmKFMaterial*>*)p);
   }
   static void destruct_vectorlECbmKFMaterialmUgR(void *p) {
      typedef vector<CbmKFMaterial*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFMaterial*>

namespace ROOT {
   void vectorlECbmKFStsHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFStsHitgR_Dictionary();
   static void *new_vectorlECbmKFStsHitgR(void *p = 0);
   static void *newArray_vectorlECbmKFStsHitgR(Long_t size, void *p);
   static void delete_vectorlECbmKFStsHitgR(void *p);
   static void deleteArray_vectorlECbmKFStsHitgR(void *p);
   static void destruct_vectorlECbmKFStsHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFStsHit>*)
   {
      vector<CbmKFStsHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFStsHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFStsHit>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFStsHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFStsHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFStsHit>) );
      instance.SetNew(&new_vectorlECbmKFStsHitgR);
      instance.SetNewArray(&newArray_vectorlECbmKFStsHitgR);
      instance.SetDelete(&delete_vectorlECbmKFStsHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFStsHitgR);
      instance.SetDestructor(&destruct_vectorlECbmKFStsHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFStsHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFStsHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFStsHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFStsHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFStsHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFStsHit> : new vector<CbmKFStsHit>;
   }
   static void *newArray_vectorlECbmKFStsHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFStsHit>[nElements] : new vector<CbmKFStsHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFStsHitgR(void *p) {
      delete ((vector<CbmKFStsHit>*)p);
   }
   static void deleteArray_vectorlECbmKFStsHitgR(void *p) {
      delete [] ((vector<CbmKFStsHit>*)p);
   }
   static void destruct_vectorlECbmKFStsHitgR(void *p) {
      typedef vector<CbmKFStsHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFStsHit>

namespace ROOT {
   void vectorlECbmKFTrackInterfacemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFTrackInterfacemUgR_Dictionary();
   static void *new_vectorlECbmKFTrackInterfacemUgR(void *p = 0);
   static void *newArray_vectorlECbmKFTrackInterfacemUgR(Long_t size, void *p);
   static void delete_vectorlECbmKFTrackInterfacemUgR(void *p);
   static void deleteArray_vectorlECbmKFTrackInterfacemUgR(void *p);
   static void destruct_vectorlECbmKFTrackInterfacemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFTrackInterface*>*)
   {
      vector<CbmKFTrackInterface*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFTrackInterface*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFTrackInterface*>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFTrackInterface*>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFTrackInterfacemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFTrackInterface*>) );
      instance.SetNew(&new_vectorlECbmKFTrackInterfacemUgR);
      instance.SetNewArray(&newArray_vectorlECbmKFTrackInterfacemUgR);
      instance.SetDelete(&delete_vectorlECbmKFTrackInterfacemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFTrackInterfacemUgR);
      instance.SetDestructor(&destruct_vectorlECbmKFTrackInterfacemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFTrackInterface*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFTrackInterface*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFTrackInterfacemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFTrackInterface*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFTrackInterfacemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFTrackInterface*> : new vector<CbmKFTrackInterface*>;
   }
   static void *newArray_vectorlECbmKFTrackInterfacemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFTrackInterface*>[nElements] : new vector<CbmKFTrackInterface*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFTrackInterfacemUgR(void *p) {
      delete ((vector<CbmKFTrackInterface*>*)p);
   }
   static void deleteArray_vectorlECbmKFTrackInterfacemUgR(void *p) {
      delete [] ((vector<CbmKFTrackInterface*>*)p);
   }
   static void destruct_vectorlECbmKFTrackInterfacemUgR(void *p) {
      typedef vector<CbmKFTrackInterface*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFTrackInterface*>

namespace ROOT {
   void vectorlECbmKFTubegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFTubegR_Dictionary();
   static void *new_vectorlECbmKFTubegR(void *p = 0);
   static void *newArray_vectorlECbmKFTubegR(Long_t size, void *p);
   static void delete_vectorlECbmKFTubegR(void *p);
   static void deleteArray_vectorlECbmKFTubegR(void *p);
   static void destruct_vectorlECbmKFTubegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFTube>*)
   {
      vector<CbmKFTube> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFTube>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFTube>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFTube>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFTubegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFTube>) );
      instance.SetNew(&new_vectorlECbmKFTubegR);
      instance.SetNewArray(&newArray_vectorlECbmKFTubegR);
      instance.SetDelete(&delete_vectorlECbmKFTubegR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFTubegR);
      instance.SetDestructor(&destruct_vectorlECbmKFTubegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFTube> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFTube>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFTubegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFTube>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFTubegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFTube> : new vector<CbmKFTube>;
   }
   static void *newArray_vectorlECbmKFTubegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFTube>[nElements] : new vector<CbmKFTube>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFTubegR(void *p) {
      delete ((vector<CbmKFTube>*)p);
   }
   static void deleteArray_vectorlECbmKFTubegR(void *p) {
      delete [] ((vector<CbmKFTube>*)p);
   }
   static void destruct_vectorlECbmKFTubegR(void *p) {
      typedef vector<CbmKFTube> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFTube>

namespace ROOT {
   void vectorlECbmKFWallgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECbmKFWallgR_Dictionary();
   static void *new_vectorlECbmKFWallgR(void *p = 0);
   static void *newArray_vectorlECbmKFWallgR(Long_t size, void *p);
   static void delete_vectorlECbmKFWallgR(void *p);
   static void deleteArray_vectorlECbmKFWallgR(void *p);
   static void destruct_vectorlECbmKFWallgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CbmKFWall>*)
   {
      vector<CbmKFWall> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CbmKFWall>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CbmKFWall>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<CbmKFWall>), DefineBehavior(ptr, ptr),
                  0, &vectorlECbmKFWallgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CbmKFWall>) );
      instance.SetNew(&new_vectorlECbmKFWallgR);
      instance.SetNewArray(&newArray_vectorlECbmKFWallgR);
      instance.SetDelete(&delete_vectorlECbmKFWallgR);
      instance.SetDeleteArray(&deleteArray_vectorlECbmKFWallgR);
      instance.SetDestructor(&destruct_vectorlECbmKFWallgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CbmKFWall> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CbmKFWall>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECbmKFWallgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CbmKFWall>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECbmKFWallgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFWall> : new vector<CbmKFWall>;
   }
   static void *newArray_vectorlECbmKFWallgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CbmKFWall>[nElements] : new vector<CbmKFWall>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECbmKFWallgR(void *p) {
      delete ((vector<CbmKFWall>*)p);
   }
   static void deleteArray_vectorlECbmKFWallgR(void *p) {
      delete [] ((vector<CbmKFWall>*)p);
   }
   static void destruct_vectorlECbmKFWallgR(void *p) {
      typedef vector<CbmKFWall> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CbmKFWall>

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/opt/fairsoft/install/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

/********************************************************
* /home/merz/BMN/GIT/trunk_220814/build/KF/BmnKFDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBmnKFDict();

extern "C" void G__set_cpp_environmentBmnKFDict() {
  G__cpp_reset_tagtableBmnKFDict();
}
#include <new>
extern "C" int G__cpp_dllrevBmnKFDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CbmKFHit */
static int G__BmnKFDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFHit*) G__getstructoffset())->Filter(*(CbmKFTrackInterface*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFHit G__TCbmKFHit;
static int G__BmnKFDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFHit*) (soff+(sizeof(CbmKFHit)*i)))->~G__TCbmKFHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFHit*) (soff))->~G__TCbmKFHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFHit* dest = (CbmKFHit*) G__getstructoffset();
   *dest = *(CbmKFHit*) libp->para[0].ref;
   const CbmKFHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFVertexInterface */
static int G__BmnKFDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFVertexInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFVertexInterface[n];
     } else {
       p = new((void*) gvp) CbmKFVertexInterface[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFVertexInterface;
     } else {
       p = new((void*) gvp) CbmKFVertexInterface;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefX();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefY();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefZ();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CbmKFVertexInterface*) G__getstructoffset())->GetCovMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefChi2();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefNDF();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((CbmKFVertexInterface*) G__getstructoffset())->GetRefNTracks();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFVertexInterface*) G__getstructoffset())->SetVertex(*(CbmVertex*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFVertexInterface*) G__getstructoffset())->GetVertex(*(CbmVertex*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFVertexInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertexInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFVertexInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFVertexInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFVertexInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertexInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFVertexInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertexInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFVertexInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFVertexInterface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFVertexInterface(*(CbmKFVertexInterface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFVertexInterface G__TCbmKFVertexInterface;
static int G__BmnKFDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFVertexInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFVertexInterface*) (soff+(sizeof(CbmKFVertexInterface)*i)))->~G__TCbmKFVertexInterface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFVertexInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFVertexInterface*) (soff))->~G__TCbmKFVertexInterface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFVertexInterface* dest = (CbmKFVertexInterface*) G__getstructoffset();
   *dest = *(CbmKFVertexInterface*) libp->para[0].ref;
   const CbmKFVertexInterface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFTrackInterface */
static int G__BmnKFDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrackInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrackInterface[n];
     } else {
       p = new((void*) gvp) CbmKFTrackInterface[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrackInterface;
     } else {
       p = new((void*) gvp) CbmKFTrackInterface;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CbmKFTrackInterface*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CbmKFTrackInterface*) G__getstructoffset())->IsElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CbmKFTrackInterface*) G__getstructoffset())->GetTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CbmKFTrackInterface*) G__getstructoffset())->GetCovMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFTrackInterface*) G__getstructoffset())->GetRefChi2();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((CbmKFTrackInterface*) G__getstructoffset())->GetRefNDF();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->GetNOfHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CbmKFTrackInterface*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Extrapolate((Double_t) G__double(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Extrapolate((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Fit((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Fit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->Smooth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->Fit2Vertex(*(CbmKFVertexInterface*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Propagate((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFTrackInterface*) G__getstructoffset())->Propagate((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKFTrackInterface*) G__getstructoffset())->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->SetId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFTrackInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrackInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFTrackInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFTrackInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CbmKFTrackInterface*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrackInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrackInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTrackInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrackInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTrackInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFTrackInterface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFTrackInterface(*(CbmKFTrackInterface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFTrackInterface G__TCbmKFTrackInterface;
static int G__BmnKFDict_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFTrackInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFTrackInterface*) (soff+(sizeof(CbmKFTrackInterface)*i)))->~G__TCbmKFTrackInterface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFTrackInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFTrackInterface*) (soff))->~G__TCbmKFTrackInterface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrackInterface* dest = (CbmKFTrackInterface*) G__getstructoffset();
   *dest = *(CbmKFTrackInterface*) libp->para[0].ref;
   const CbmKFTrackInterface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFMaterial */
static int G__BmnKFDict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFMaterial* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFMaterial[n];
     } else {
       p = new((void*) gvp) CbmKFMaterial[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFMaterial;
     } else {
       p = new((void*) gvp) CbmKFMaterial;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CbmKFMaterial*) G__getstructoffset())->IsOutside((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFMaterial*) G__getstructoffset())->Pass((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(CbmKFTrackInterface*) libp->para[2].ref, (Bool_t) G__int(libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFMaterial*) G__getstructoffset())->Pass(*(CbmKFTrackInterface*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFMaterial*) G__getstructoffset())->Pass(*(CbmKFTrackInterface*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const CbmKFMaterial*) G__getstructoffset())->Info();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMaterial::comparePDown((CbmKFMaterial*) G__int(libp->para[0]), (CbmKFMaterial*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMaterial::compareP_z((CbmKFMaterial*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMaterial::compareP_Z((Double_t) G__double(libp->para[0]), (CbmKFMaterial*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFMaterial::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMaterial::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFMaterial::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMaterial::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFMaterial*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMaterial::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMaterial::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMaterial::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMaterial::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFMaterial* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFMaterial(*(CbmKFMaterial*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFMaterial G__TCbmKFMaterial;
static int G__BmnKFDict_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFMaterial*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFMaterial*) (soff+(sizeof(CbmKFMaterial)*i)))->~G__TCbmKFMaterial();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFMaterial*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFMaterial*) (soff))->~G__TCbmKFMaterial();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFMaterial* dest = (CbmKFMaterial*) G__getstructoffset();
   *dest = *(CbmKFMaterial*) libp->para[0].ref;
   const CbmKFMaterial& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFWall */
static int G__BmnKFDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFWall* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFWall[n];
     } else {
       p = new((void*) gvp) CbmKFWall[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFWall;
     } else {
       p = new((void*) gvp) CbmKFWall;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFWall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFWall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFWall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFWall::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFWall*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFWall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFWall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFWall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFWall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFWall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFWall(*(CbmKFWall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFWall G__TCbmKFWall;
static int G__BmnKFDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFWall*) (soff+(sizeof(CbmKFWall)*i)))->~G__TCbmKFWall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFWall*) (soff))->~G__TCbmKFWall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFWall* dest = (CbmKFWall*) G__getstructoffset();
   *dest = *(CbmKFWall*) libp->para[0].ref;
   const CbmKFWall& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFTube */
static int G__BmnKFDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTube* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTube[n];
     } else {
       p = new((void*) gvp) CbmKFTube[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTube;
     } else {
       p = new((void*) gvp) CbmKFTube;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTube* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFTube(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) CbmKFTube(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFTube::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTube::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFTube::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFTube::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTube*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTube::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTube::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTube::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTube::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFTube* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFTube(*(CbmKFTube*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFTube G__TCbmKFTube;
static int G__BmnKFDict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFTube*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFTube*) (soff+(sizeof(CbmKFTube)*i)))->~G__TCbmKFTube();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFTube*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFTube*) (soff))->~G__TCbmKFTube();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTube* dest = (CbmKFTube*) G__getstructoffset();
   *dest = *(CbmKFTube*) libp->para[0].ref;
   const CbmKFTube& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFBox */
static int G__BmnKFDict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFBox[n];
     } else {
       p = new((void*) gvp) CbmKFBox[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFBox;
     } else {
       p = new((void*) gvp) CbmKFBox;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFBox(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) CbmKFBox(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFBox* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFBox(*(CbmKFBox*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFBox G__TCbmKFBox;
static int G__BmnKFDict_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFBox*) (soff+(sizeof(CbmKFBox)*i)))->~G__TCbmKFBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFBox*) (soff))->~G__TCbmKFBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFBox* dest = (CbmKFBox*) G__getstructoffset();
   *dest = *(CbmKFBox*) libp->para[0].ref;
   const CbmKFBox& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFCone */
static int G__BmnKFDict_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFCone* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFCone[n];
     } else {
       p = new((void*) gvp) CbmKFCone[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFCone;
     } else {
       p = new((void*) gvp) CbmKFCone;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFCone::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFCone::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFCone::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFCone::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFCone*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFCone::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFCone::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFCone::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFCone::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_175_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFCone* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFCone(*(CbmKFCone*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFCone G__TCbmKFCone;
static int G__BmnKFDict_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFCone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFCone*) (soff+(sizeof(CbmKFCone)*i)))->~G__TCbmKFCone();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFCone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFCone*) (soff))->~G__TCbmKFCone();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFCone* dest = (CbmKFCone*) G__getstructoffset();
   *dest = *(CbmKFCone*) libp->para[0].ref;
   const CbmKFCone& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKF */
static int G__BmnKFDict_739_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKF* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKF((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) CbmKF((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKF((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CbmKF((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CbmKF[n];
       } else {
         p = new((void*) gvp) CbmKF[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CbmKF;
       } else {
         p = new((void*) gvp) CbmKF;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKF::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->GetMaterialIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->Propagate((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->PassMaterial(*(CbmKFTrackInterface*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->PassMaterialBetween(*(CbmKFTrackInterface*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->PassMaterialBetween(*(CbmKFTrackInterface*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, (CbmKFHit*) G__int(libp->para[2]), (CbmKFHit*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CbmKF*) G__getstructoffset())->GetMagneticField());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKF*) G__getstructoffset())->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKF*) G__getstructoffset())->GetNMvdStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKF*) G__getstructoffset())->GetNStsStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_739_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKF G__TCbmKF;
static int G__BmnKFDict_739_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKF*) (soff+(sizeof(CbmKF)*i)))->~G__TCbmKF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKF*) (soff))->~G__TCbmKF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFFieldMath */
static int G__BmnKFDict_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFFieldMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFFieldMath[n];
     } else {
       p = new((void*) gvp) CbmKFFieldMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFFieldMath;
     } else {
       p = new((void*) gvp) CbmKFFieldMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFFieldMath::ExtrapolateLine((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFFieldMath::ExtrapolateRK4(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (FairField*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFFieldMath::ExtrapolateALight(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (FairField*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFFieldMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFFieldMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFFieldMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFFieldMath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFFieldMath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFFieldMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFFieldMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFFieldMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFFieldMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFFieldMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFFieldMath(*(CbmKFFieldMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFFieldMath G__TCbmKFFieldMath;
static int G__BmnKFDict_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFFieldMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFFieldMath*) (soff+(sizeof(CbmKFFieldMath)*i)))->~G__TCbmKFFieldMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFFieldMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFFieldMath*) (soff))->~G__TCbmKFFieldMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFFieldMath* dest = (CbmKFFieldMath*) G__getstructoffset();
   *dest = *(CbmKFFieldMath*) libp->para[0].ref;
   const CbmKFFieldMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFMath */
static int G__BmnKFDict_762_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFMath[n];
     } else {
       p = new((void*) gvp) CbmKFMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFMath;
     } else {
       p = new((void*) gvp) CbmKFMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMath::GetThickness((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMath::intersectCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMath::indexS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::multQSQt((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::multQtSQ((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::multSSQ((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][4]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      CbmKFMath::four_dim_inv(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][5]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      CbmKFMath::five_dim_inv(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) CbmKFMath::invS((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) CbmKFMath::getDeviation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t*) G__int(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) CbmKFMath::getDeviation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CbmKFMath::AnalyticQP((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (FairField*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMath::GetNoise(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Bool_t) G__int(libp->para[7])
, (Bool_t) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t*) G__int(libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Double_t*) G__int(libp->para[12])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::CopyTrackParam2TC((FairTrackParam*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::CopyTC2TrackParam((FairTrackParam*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFMath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFMath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_762_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_762_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFMath(*(CbmKFMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFMath G__TCbmKFMath;
static int G__BmnKFDict_762_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFMath*) (soff+(sizeof(CbmKFMath)*i)))->~G__TCbmKFMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFMath*) (soff))->~G__TCbmKFMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_762_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFMath* dest = (CbmKFMath*) G__getstructoffset();
   *dest = *(CbmKFMath*) libp->para[0].ref;
   const CbmKFMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFPixelMeasurement */
static int G__BmnKFDict_763_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPixelMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPixelMeasurement[n];
     } else {
       p = new((void*) gvp) CbmKFPixelMeasurement[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPixelMeasurement;
     } else {
       p = new((void*) gvp) CbmKFPixelMeasurement;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFPixelMeasurement*) G__getstructoffset())->Filter(*(CbmKFTrackInterface*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFPixelMeasurement::FilterPDAF(*(CbmKFTrackInterface*) libp->para[0].ref, *(vector<CbmKFPixelMeasurement*>*) libp->para[1].ref
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, *(vector<double>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFPixelMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPixelMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFPixelMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFPixelMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPixelMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPixelMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPixelMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPixelMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_763_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPixelMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_763_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFPixelMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFPixelMeasurement(*(CbmKFPixelMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFPixelMeasurement G__TCbmKFPixelMeasurement;
static int G__BmnKFDict_763_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFPixelMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFPixelMeasurement*) (soff+(sizeof(CbmKFPixelMeasurement)*i)))->~G__TCbmKFPixelMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFPixelMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFPixelMeasurement*) (soff))->~G__TCbmKFPixelMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_763_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPixelMeasurement* dest = (CbmKFPixelMeasurement*) G__getstructoffset();
   *dest = *(CbmKFPixelMeasurement*) libp->para[0].ref;
   const CbmKFPixelMeasurement& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFPrimaryVertexFinder */
static int G__BmnKFDict_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPrimaryVertexFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPrimaryVertexFinder[n];
     } else {
       p = new((void*) gvp) CbmKFPrimaryVertexFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPrimaryVertexFinder;
     } else {
       p = new((void*) gvp) CbmKFPrimaryVertexFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPrimaryVertexFinder*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPrimaryVertexFinder*) G__getstructoffset())->AddTrack((CbmKFTrackInterface*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPrimaryVertexFinder*) G__getstructoffset())->SetTracks(*(vector<CbmKFTrackInterface*>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPrimaryVertexFinder*) G__getstructoffset())->Fit(*(CbmKFVertexInterface*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFPrimaryVertexFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPrimaryVertexFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFPrimaryVertexFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFPrimaryVertexFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPrimaryVertexFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPrimaryVertexFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPrimaryVertexFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPrimaryVertexFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_769_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPrimaryVertexFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_769_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFPrimaryVertexFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFPrimaryVertexFinder(*(CbmKFPrimaryVertexFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFPrimaryVertexFinder G__TCbmKFPrimaryVertexFinder;
static int G__BmnKFDict_769_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFPrimaryVertexFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFPrimaryVertexFinder*) (soff+(sizeof(CbmKFPrimaryVertexFinder)*i)))->~G__TCbmKFPrimaryVertexFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFPrimaryVertexFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFPrimaryVertexFinder*) (soff))->~G__TCbmKFPrimaryVertexFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_769_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPrimaryVertexFinder* dest = (CbmKFPrimaryVertexFinder*) G__getstructoffset();
   *dest = *(CbmKFPrimaryVertexFinder*) libp->para[0].ref;
   const CbmKFPrimaryVertexFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFUMeasurement */
static int G__BmnKFDict_774_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFUMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFUMeasurement[n];
     } else {
       p = new((void*) gvp) CbmKFUMeasurement[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFUMeasurement;
     } else {
       p = new((void*) gvp) CbmKFUMeasurement;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFUMeasurement*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFUMeasurement*) G__getstructoffset())->Filter(*(CbmKFTrackInterface*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFUMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFUMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFUMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFUMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFUMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFUMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFUMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFUMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_774_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFUMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_774_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFUMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFUMeasurement(*(CbmKFUMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFUMeasurement G__TCbmKFUMeasurement;
static int G__BmnKFDict_774_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFUMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFUMeasurement*) (soff+(sizeof(CbmKFUMeasurement)*i)))->~G__TCbmKFUMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFUMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFUMeasurement*) (soff))->~G__TCbmKFUMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_774_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFUMeasurement* dest = (CbmKFUMeasurement*) G__getstructoffset();
   *dest = *(CbmKFUMeasurement*) libp->para[0].ref;
   const CbmKFUMeasurement& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFParticle */
static int G__BmnKFDict_775_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKFParticle*) G__getstructoffset())->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKFParticle*) G__getstructoffset())->NDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((const CbmKFParticle*) G__getstructoffset())->DaughterIds();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->SetId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->SetNDaughters((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->AddDaughter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->CleanDaughtersId();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle[n];
     } else {
       p = new((void*) gvp) CbmKFParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle;
     } else {
       p = new((void*) gvp) CbmKFParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle(
(CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) CbmKFParticle(
(CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle(
(CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) CbmKFParticle(
(CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle((CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) CbmKFParticle((CbmKFTrackInterface*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFParticle((CbmKFTrackInterface*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CbmKFParticle((CbmKFTrackInterface*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((CbmKFParticle*) G__getstructoffset())->Construct(*(vector<CbmKFTrackInterface*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((CbmKFParticle*) G__getstructoffset())->Construct(*(vector<CbmKFTrackInterface*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((CbmKFParticle*) G__getstructoffset())->Construct(*(vector<CbmKFTrackInterface*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CbmKFParticle*) G__getstructoffset())->Construct(*(vector<CbmKFTrackInterface*>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((CbmKFParticle*) G__getstructoffset())->ConstructFromKFParticle(*(vector<CbmKFParticle*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((CbmKFParticle*) G__getstructoffset())->ConstructFromKFParticle(*(vector<CbmKFParticle*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((CbmKFParticle*) G__getstructoffset())->ConstructFromKFParticle(*(vector<CbmKFParticle*>*) libp->para[0].ref, (CbmKFVertexInterface*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CbmKFParticle*) G__getstructoffset())->ConstructFromKFParticle(*(vector<CbmKFParticle*>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->TransportToProductionVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->TransportToDecayVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetDStoPoint((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKFParticle*) G__getstructoffset())->GetNDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CbmKFParticle*) G__getstructoffset())->GetParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CbmKFParticle*) G__getstructoffset())->GetCovMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const CbmKFParticle*) G__getstructoffset())->GetAtProductionVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetParameter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetCovariance((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetCovariance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rX();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rY();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rZ();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rPx();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rPy();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rPz();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rE();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rS();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rQ();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rChi2();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((CbmKFParticle*) G__getstructoffset())->rNDF();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rParameter((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rCovariance((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((CbmKFParticle*) G__getstructoffset())->rCovariance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetKFTrack((CbmKFTrackInterface*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetKFVertex(*(CbmKFVertexInterface*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetMomentum(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetMass(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetDecayLength(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->GetLifeTime(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CbmKFParticle*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->Extrapolate((Double_t*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->ExtrapolateLine((Double_t*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->SetPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CbmKFParticle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_775_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_775_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFParticle(*(CbmKFParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFParticle G__TCbmKFParticle;
static int G__BmnKFDict_775_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFParticle*) (soff+(sizeof(CbmKFParticle)*i)))->~G__TCbmKFParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFParticle*) (soff))->~G__TCbmKFParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_775_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFParticle* dest = (CbmKFParticle*) G__getstructoffset();
   *dest = *(CbmKFParticle*) libp->para[0].ref;
   const CbmKFParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFStsHit */
static int G__BmnKFDict_785_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFStsHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFStsHit[n];
     } else {
       p = new((void*) gvp) CbmKFStsHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFStsHit;
     } else {
       p = new((void*) gvp) CbmKFStsHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFStsHit*) G__getstructoffset())->Create((CbmStsHit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFStsHit*) G__getstructoffset())->Create((CbmMvdHit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFStsHit::FilterPDAF(
*(CbmKFTrackInterface*) libp->para[0].ref, *(vector<CbmKFStsHit*>*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, *(int*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CbmKFStsHit& obj = ((CbmKFStsHit*) G__getstructoffset())->operator=(*(CbmKFStsHit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFStsHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFStsHit(*(CbmKFStsHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CbmKFStsHit(*(CbmKFStsHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFStsHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFStsHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFStsHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFStsHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFStsHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFStsHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFStsHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFStsHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_785_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFStsHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFStsHit G__TCbmKFStsHit;
static int G__BmnKFDict_785_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFStsHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFStsHit*) (soff+(sizeof(CbmKFStsHit)*i)))->~G__TCbmKFStsHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFStsHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFStsHit*) (soff))->~G__TCbmKFStsHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFTrack */
static int G__BmnKFDict_791_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrack[n];
     } else {
       p = new((void*) gvp) CbmKFTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrack;
     } else {
       p = new((void*) gvp) CbmKFTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFTrack(*(CbmKFTrackInterface*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CbmKFTrack(*(CbmKFTrackInterface*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFTrack(*(FairTrackParam*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CbmKFTrack(*(FairTrackParam*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrack(*(CbmStsTrack*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) CbmKFTrack(*(CbmStsTrack*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFTrack(*(CbmStsTrack*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) CbmKFTrack(*(CbmStsTrack*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrack*) G__getstructoffset())->SetTrack(*(CbmKFTrackInterface*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrack*) G__getstructoffset())->SetTrackParam(*(FairTrackParam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CbmKFTrack*) G__getstructoffset())->SetStsTrack(*(CbmStsTrack*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CbmKFTrack*) G__getstructoffset())->SetStsTrack(*(CbmStsTrack*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrack*) G__getstructoffset())->GetTrackParam(*(FairTrackParam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CbmKFTrack*) G__getstructoffset())->GetStsTrack(*(CbmStsTrack*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CbmKFTrack*) G__getstructoffset())->GetStsTrack(*(CbmStsTrack*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrack*) G__getstructoffset())->SetPID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_791_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_791_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFTrack(*(CbmKFTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFTrack G__TCbmKFTrack;
static int G__BmnKFDict_791_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFTrack*) (soff+(sizeof(CbmKFTrack)*i)))->~G__TCbmKFTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFTrack*) (soff))->~G__TCbmKFTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_791_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFTrack* dest = (CbmKFTrack*) G__getstructoffset();
   *dest = *(CbmKFTrack*) libp->para[0].ref;
   const CbmKFTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFVertex */
static int G__BmnKFDict_796_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFVertex[n];
     } else {
       p = new((void*) gvp) CbmKFVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFVertex;
     } else {
       p = new((void*) gvp) CbmKFVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CbmKFVertex(*(CbmVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) CbmKFVertex(*(CbmVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_796_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_796_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFVertex(*(CbmKFVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFVertex G__TCbmKFVertex;
static int G__BmnKFDict_796_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFVertex*) (soff+(sizeof(CbmKFVertex)*i)))->~G__TCbmKFVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFVertex*) (soff))->~G__TCbmKFVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_796_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFVertex* dest = (CbmKFVertex*) G__getstructoffset();
   *dest = *(CbmKFVertex*) libp->para[0].ref;
   const CbmKFVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmPVFinderKF */
static int G__BmnKFDict_798_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmPVFinderKF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmPVFinderKF[n];
     } else {
       p = new((void*) gvp) CbmPVFinderKF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmPVFinderKF;
     } else {
       p = new((void*) gvp) CbmPVFinderKF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmPVFinderKF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmPVFinderKF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmPVFinderKF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmPVFinderKF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmPVFinderKF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmPVFinderKF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmPVFinderKF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmPVFinderKF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_798_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmPVFinderKF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_798_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmPVFinderKF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmPVFinderKF(*(CbmPVFinderKF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmPVFinderKF G__TCbmPVFinderKF;
static int G__BmnKFDict_798_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmPVFinderKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmPVFinderKF*) (soff+(sizeof(CbmPVFinderKF)*i)))->~G__TCbmPVFinderKF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmPVFinderKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmPVFinderKF*) (soff))->~G__TCbmPVFinderKF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_798_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmPVFinderKF* dest = (CbmPVFinderKF*) G__getstructoffset();
   *dest = *(CbmPVFinderKF*) libp->para[0].ref;
   const CbmPVFinderKF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmStsKFTrackFitter */
static int G__BmnKFDict_841_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmStsKFTrackFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmStsKFTrackFitter[n];
     } else {
       p = new((void*) gvp) CbmStsKFTrackFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmStsKFTrackFitter;
     } else {
       p = new((void*) gvp) CbmStsKFTrackFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmStsKFTrackFitter*) G__getstructoffset())->Extrapolate((FairTrackParam*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (FairTrackParam*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((CbmStsKFTrackFitter*) G__getstructoffset())->GetChiToVertex((CbmStsTrack*) G__int(libp->para[0]), (CbmVertex*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((CbmStsKFTrackFitter*) G__getstructoffset())->GetChiToVertex((CbmStsTrack*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CbmStsKFTrackFitter*) G__getstructoffset())->FitToVertex((CbmStsTrack*) G__int(libp->para[0]), (CbmVertex*) G__int(libp->para[1])
, (FairTrackParam*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmStsKFTrackFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmStsKFTrackFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmStsKFTrackFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmStsKFTrackFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmStsKFTrackFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmStsKFTrackFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmStsKFTrackFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmStsKFTrackFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_841_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmStsKFTrackFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmStsKFTrackFitter G__TCbmStsKFTrackFitter;
static int G__BmnKFDict_841_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmStsKFTrackFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmStsKFTrackFitter*) (soff+(sizeof(CbmStsKFTrackFitter)*i)))->~G__TCbmStsKFTrackFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmStsKFTrackFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmStsKFTrackFitter*) (soff))->~G__TCbmStsKFTrackFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KFParticleMatch */
static int G__BmnKFDict_846_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFParticleMatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFParticleMatch[n];
     } else {
       p = new((void*) gvp) KFParticleMatch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFParticleMatch;
     } else {
       p = new((void*) gvp) KFParticleMatch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFParticleMatch*) G__getstructoffset())->GetMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFParticleMatch*) G__getstructoffset())->SetMatch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFParticleMatch*) G__getstructoffset())->SetMatchType((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFParticleMatch*) G__getstructoffset())->IsCombinatorialBG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFParticleMatch*) G__getstructoffset())->IsPhysicsBG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFParticleMatch*) G__getstructoffset())->IsRecoParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KFParticleMatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFParticleMatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KFParticleMatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KFParticleMatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFParticleMatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFParticleMatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFParticleMatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFParticleMatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_846_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFParticleMatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_846_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KFParticleMatch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KFParticleMatch(*(KFParticleMatch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KFParticleMatch G__TKFParticleMatch;
static int G__BmnKFDict_846_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KFParticleMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KFParticleMatch*) (soff+(sizeof(KFParticleMatch)*i)))->~G__TKFParticleMatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KFParticleMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KFParticleMatch*) (soff))->~G__TKFParticleMatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_846_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFParticleMatch* dest = (KFParticleMatch*) G__getstructoffset();
   *dest = *(KFParticleMatch*) libp->para[0].ref;
   const KFParticleMatch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KFMCParticle */
static int G__BmnKFDict_848_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFMCParticle[n];
     } else {
       p = new((void*) gvp) KFMCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFMCParticle;
     } else {
       p = new((void*) gvp) KFMCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->AddDaughter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->NDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((const KFMCParticle*) G__getstructoffset())->GetDaughterIds();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->FindCommonMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetMCTrackID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetMotherId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetMCTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetMotherId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFMCParticle*) G__getstructoffset())->IsReconstructable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetAsReconstructable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KFMCParticle*) G__getstructoffset())->CalculateIsReconstructable((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KFMCParticle*) G__getstructoffset())->CalculateIsReconstructable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KFMCParticle*) G__getstructoffset())->CalculateIsRecRec((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KFMCParticle*) G__getstructoffset())->CalculateIsRecRec();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KFMCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KFMCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KFMCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFMCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_848_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFMCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_848_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KFMCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KFMCParticle(*(KFMCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KFMCParticle G__TKFMCParticle;
static int G__BmnKFDict_848_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KFMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KFMCParticle*) (soff+(sizeof(KFMCParticle)*i)))->~G__TKFMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KFMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KFMCParticle*) (soff))->~G__TKFMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_848_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFMCParticle* dest = (KFMCParticle*) G__getstructoffset();
   *dest = *(KFMCParticle*) libp->para[0].ref;
   const KFMCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CbmKFPartEfficiencies */
static int G__BmnKFDict_855_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPartEfficiencies* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPartEfficiencies[n];
     } else {
       p = new((void*) gvp) CbmKFPartEfficiencies[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CbmKFPartEfficiencies;
     } else {
       p = new((void*) gvp) CbmKFPartEfficiencies;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CbmKFPartEfficiencies*) G__getstructoffset())->GetParticleIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->AddCounter(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CbmKFPartEfficiencies& obj = ((CbmKFPartEfficiencies*) G__getstructoffset())->operator+=(*(CbmKFPartEfficiencies*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->CalcEff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->Inc((bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->IncReco((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->PrintEff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->AddFromFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CbmKFPartEfficiencies::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPartEfficiencies::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CbmKFPartEfficiencies::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CbmKFPartEfficiencies::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CbmKFPartEfficiencies*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPartEfficiencies::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPartEfficiencies::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CbmKFPartEfficiencies::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BmnKFDict_855_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CbmKFPartEfficiencies::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BmnKFDict_855_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CbmKFPartEfficiencies* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CbmKFPartEfficiencies(*(CbmKFPartEfficiencies*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CbmKFPartEfficiencies G__TCbmKFPartEfficiencies;
static int G__BmnKFDict_855_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CbmKFPartEfficiencies*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CbmKFPartEfficiencies*) (soff+(sizeof(CbmKFPartEfficiencies)*i)))->~G__TCbmKFPartEfficiencies();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CbmKFPartEfficiencies*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CbmKFPartEfficiencies*) (soff))->~G__TCbmKFPartEfficiencies();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BmnKFDict_855_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CbmKFPartEfficiencies* dest = (CbmKFPartEfficiencies*) G__getstructoffset();
   *dest = *(CbmKFPartEfficiencies*) libp->para[0].ref;
   const CbmKFPartEfficiencies& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CbmKFHit */

/* CbmKFVertexInterface */

/* CbmKFTrackInterface */

/* CbmKFMaterial */

/* CbmKFWall */

/* CbmKFTube */

/* CbmKFBox */

/* CbmKFCone */

/* CbmKF */

/* CbmKFFieldMath */

/* CbmKFMath */

/* CbmKFPixelMeasurement */

/* CbmKFPrimaryVertexFinder */

/* CbmKFUMeasurement */

/* CbmKFParticle */

/* CbmKFStsHit */

/* CbmKFTrack */

/* CbmKFVertex */

/* CbmPVFinderKF */

/* CbmStsKFTrackFitter */

/* KFParticleMatch */

/* KFMCParticle */

/* CbmKFPartEfficiencies */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBmnKFDict {
 public:
  G__Sizep2memfuncBmnKFDict(): p(&G__Sizep2memfuncBmnKFDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBmnKFDict::*p)();
};

size_t G__get_sizep2memfuncBmnKFDict()
{
  G__Sizep2memfuncBmnKFDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBmnKFDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit))) {
     CbmKFHit *G__Lderived;
     G__Lderived=(CbmKFHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface))) {
     CbmKFVertexInterface *G__Lderived;
     G__Lderived=(CbmKFVertexInterface*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial))) {
     CbmKFMaterial *G__Lderived;
     G__Lderived=(CbmKFMaterial*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall))) {
     CbmKFWall *G__Lderived;
     G__Lderived=(CbmKFWall*)0x1000;
     {
       CbmKFMaterial *G__Lpbase=(CbmKFMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube))) {
     CbmKFTube *G__Lderived;
     G__Lderived=(CbmKFTube*)0x1000;
     {
       CbmKFMaterial *G__Lpbase=(CbmKFMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox))) {
     CbmKFBox *G__Lderived;
     G__Lderived=(CbmKFBox*)0x1000;
     {
       CbmKFMaterial *G__Lpbase=(CbmKFMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone))) {
     CbmKFCone *G__Lderived;
     G__Lderived=(CbmKFCone*)0x1000;
     {
       CbmKFMaterial *G__Lpbase=(CbmKFMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF))) {
     CbmKF *G__Lderived;
     G__Lderived=(CbmKF*)0x1000;
     {
       FairTask *G__Lpbase=(FairTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF),G__get_linked_tagnum(&G__BmnKFDictLN_FairTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF),G__get_linked_tagnum(&G__BmnKFDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF),G__get_linked_tagnum(&G__BmnKFDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath))) {
     CbmKFFieldMath *G__Lderived;
     G__Lderived=(CbmKFFieldMath*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath))) {
     CbmKFMath *G__Lderived;
     G__Lderived=(CbmKFMath*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement))) {
     CbmKFPixelMeasurement *G__Lderived;
     G__Lderived=(CbmKFPixelMeasurement*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder))) {
     CbmKFPrimaryVertexFinder *G__Lderived;
     G__Lderived=(CbmKFPrimaryVertexFinder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement))) {
     CbmKFUMeasurement *G__Lderived;
     G__Lderived=(CbmKFUMeasurement*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle))) {
     CbmKFParticle *G__Lderived;
     G__Lderived=(CbmKFParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit))) {
     CbmKFStsHit *G__Lderived;
     G__Lderived=(CbmKFStsHit*)0x1000;
     {
       CbmKFHit *G__Lpbase=(CbmKFHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack))) {
     CbmKFTrack *G__Lderived;
     G__Lderived=(CbmKFTrack*)0x1000;
     {
       CbmKFTrackInterface *G__Lpbase=(CbmKFTrackInterface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex))) {
     CbmKFVertex *G__Lderived;
     G__Lderived=(CbmKFVertex*)0x1000;
     {
       CbmKFVertexInterface *G__Lpbase=(CbmKFVertexInterface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex),G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF))) {
     CbmPVFinderKF *G__Lderived;
     G__Lderived=(CbmPVFinderKF*)0x1000;
     {
       CbmPrimaryVertexFinder *G__Lpbase=(CbmPrimaryVertexFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF),G__get_linked_tagnum(&G__BmnKFDictLN_CbmPrimaryVertexFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter))) {
     CbmStsKFTrackFitter *G__Lderived;
     G__Lderived=(CbmStsKFTrackFitter*)0x1000;
     {
       CbmStsTrackFitter *G__Lpbase=(CbmStsTrackFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter),G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsTrackFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch))) {
     KFParticleMatch *G__Lderived;
     G__Lderived=(KFParticleMatch*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle))) {
     KFMCParticle *G__Lderived;
     G__Lderived=(KFMCParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies))) {
     CbmKFPartEfficiencies *G__Lderived;
     G__Lderived=(CbmKFPartEfficiencies*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies),G__get_linked_tagnum(&G__BmnKFDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies),G__get_linked_tagnum(&G__BmnKFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBmnKFDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TClonesArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<TClonesArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::queue<TClonesArray*> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TBranch*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*,less<int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TString>",117,G__get_linked_tagnum(&G__BmnKFDictLN_listlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::list<TString>*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI>",117,G__get_linked_tagnum(&G__BmnKFDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::multimap<TString,TArrayI> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,TChain*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*,less<unsigned int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,Double_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,CbmStsStation*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,CbmStsStation*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,CbmStsStation*,less<int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,CbmStsSensor*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOCbmStsSensormUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOCbmStsSensormUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,CbmStsSensor*,less<TString> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOCbmStsSensormUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOCbmStsSensormUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFMaterial*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFTube>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTubecOallocatorlECbmKFTubegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTubecOallocatorlECbmKFTubegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFWall>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFWallcOallocatorlECbmKFWallgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFWallcOallocatorlECbmKFWallgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFCone>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFConecOallocatorlECbmKFConegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFConecOallocatorlECbmKFConegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFBox>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFPixelMeasurement*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFTrackInterface*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFParticle*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFStsHit*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFHit*>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSymlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BmnKFDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CbmKFStsHit>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BmnKFDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float>",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float,less<int> >",117,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CbmKFHit */
static void G__setup_memvarCbmKFHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit));
   { CbmKFHit *p; p=(CbmKFHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MaterialIndex)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MaterialIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFVertexInterface */
static void G__setup_memvarCbmKFVertexInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface));
   { CbmKFVertexInterface *p; p=(CbmKFVertexInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFTrackInterface */
static void G__setup_memvarCbmKFTrackInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface));
   { CbmKFTrackInterface *p; p=(CbmKFTrackInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFMaterial */
static void G__setup_memvarCbmKFMaterial(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial));
   { CbmKFMaterial *p; p=(CbmKFMaterial*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZReference)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ZReference=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZThickness)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ZThickness=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RadLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"RadLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"F=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Fe)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Fe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFWall */
static void G__setup_memvarCbmKFWall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall));
   { CbmKFWall *p; p=(CbmKFWall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFTube */
static void G__setup_memvarCbmKFTube(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube));
   { CbmKFTube *p; p=(CbmKFTube*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"rr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RR)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"RR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFBox */
static void G__setup_memvarCbmKFBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox));
   { CbmKFBox *p; p=(CbmKFBox*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dx05)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dx05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dy05)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dy05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFCone */
static void G__setup_memvarCbmKFCone(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone));
   { CbmKFCone *p; p=(CbmKFCone*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->z1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"r1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"R1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"r2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"R2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKF */
static void G__setup_memvarCbmKF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF));
   { CbmKF *p; p=(CbmKF*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vMaterial)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR),G__defined_typename("vector<CbmKFMaterial*>"),-1,1,"vMaterial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vMvdMaterial)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR),G__defined_typename("vector<CbmKFTube>"),-1,1,"vMvdMaterial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vStsMaterial)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR),G__defined_typename("vector<CbmKFTube>"),-1,1,"vStsMaterial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vSttMaterial)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR),G__defined_typename("vector<CbmKFWall>"),-1,1,"vSttMaterial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vTargets)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR),G__defined_typename("vector<CbmKFTube>"),-1,1,"vTargets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vPipe)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR),G__defined_typename("vector<CbmKFCone>"),-1,1,"vPipe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vPassiveTube)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR),G__defined_typename("vector<CbmKFTube>"),-1,1,"vPassiveTube=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vPassiveWall)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR),G__defined_typename("vector<CbmKFWall>"),-1,1,"vPassiveWall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vPassiveBox)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR),G__defined_typename("vector<CbmKFBox>"),-1,1,"vPassiveBox=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MvdStationIDMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,1,"MvdStationIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StsStationIDMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,1,"StsStationIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SttStationIDMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,1,"SttStationIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StsDigi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsDigiScheme),-1,-1,1,"StsDigi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_FairField),-1,-1,4,"fMagneticField=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMethod=",0,"0 = straight line,");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,4,"fMaterialID2IndexMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFFieldMath */
static void G__setup_memvarCbmKFFieldMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath));
   { CbmKFFieldMath *p; p=(CbmKFFieldMath*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFMath */
static void G__setup_memvarCbmKFMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath));
   { CbmKFMath *p; p=(CbmKFMath*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFPixelMeasurement */
static void G__setup_memvarCbmKFPixelMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement));
   { CbmKFPixelMeasurement *p; p=(CbmKFPixelMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->V)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"V[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFPrimaryVertexFinder */
static void G__setup_memvarCbmKFPrimaryVertexFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder));
   { CbmKFPrimaryVertexFinder *p; p=(CbmKFPrimaryVertexFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR),G__defined_typename("vector<CbmKFTrackInterface*>"),-1,4,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFUMeasurement */
static void G__setup_memvarCbmKFUMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement));
   { CbmKFUMeasurement *p; p=(CbmKFUMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->u)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"u=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"sigma2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_s)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi_s=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_c)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi_c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_ss)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi_ss=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_cc)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi_cc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_2sc)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi_2sc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFParticle */
static void G__setup_memvarCbmKFParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle));
   { CbmKFParticle *p; p=(CbmKFParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fId=",0,"id of particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fDaughtersIds=",0,"id of particles it created from. if size == 1 then this is id of track. TODO use in functions. why unsigned short int doesn't work???");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fPDG=",0,"pdg hypothesis");
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"r[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->C)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"C[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDF)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NDF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Q=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AtProductionVertex)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"AtProductionVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fieldRegion)-(long)(p)),102,0,0,-1,-1,-1,1,"fieldRegion[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFStsHit */
static void G__setup_memvarCbmKFStsHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit));
   { CbmKFStsHit *p; p=(CbmKFStsHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FitPoint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement),-1,-1,1,"FitPoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tube)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube),-1,-1,1,"tube=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFTrack */
static void G__setup_memvarCbmKFTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   { CbmKFTrack *p; p=(CbmKFTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fC[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsElectron=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR),G__defined_typename("vector<CbmKFHit*>"),-1,1,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFVertex */
static void G__setup_memvarCbmKFVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex));
   { CbmKFVertex *p; p=(CbmKFVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fC[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmPVFinderKF */
static void G__setup_memvarCbmPVFinderKF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF));
   { CbmPVFinderKF *p; p=(CbmPVFinderKF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmStsKFTrackFitter */
static void G__setup_memvarCbmStsKFTrackFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter));
   { CbmStsKFTrackFitter *p; p=(CbmStsKFTrackFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR),G__defined_typename("vector<CbmKFStsHit>"),-1,4,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClonesArray),-1,-1,4,"fMvdHitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClonesArray),-1,-1,4,"fStsHitsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsInitialised=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KFParticleMatch */
static void G__setup_memvarKFParticleMatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch));
   { KFParticleMatch *p; p=(KFParticleMatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fMatchType=",0,"0 - combinatorial BG, 1 - physics BG, 2 - reconstructed particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KFMCParticle */
static void G__setup_memvarKFMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle));
   { KFMCParticle *p; p=(KFMCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fDaughterIds=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMCTrackID=",0,"sim id of MC track, which corresponds to the particle");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMotherId=",0,"index in L1 array of mother particle");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsReconstructable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CbmKFPartEfficiencies */
static void G__setup_memvarCbmKFPartEfficiencies(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies));
   { CbmKFPartEfficiencies *p; p=(CbmKFPartEfficiencies*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("nParticles=%lldLL",(long long)CbmKFPartEfficiencies::nParticles).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partPDG)-(long)(p)),105,0,0,-1,-1,-1,1,"partPDG[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TString),-1,-1,1,"partName[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partTitle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TString),-1,-1,1,"partTitle[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partDaughterPdg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,1,"partDaughterPdg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMHistoMin)-(long)(p)),102,0,0,-1,-1,-1,1,"partMHistoMin[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMHistoMax)-(long)(p)),102,0,0,-1,-1,-1,1,"partMHistoMax[60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"names=",0,"names counters indexed by index of counter");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),G__defined_typename("map<TString,int>"),-1,4,"indices=",0,"indices of counters indexed by a counter shortname");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fPdgToIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR),-1,-1,4,"ratio_reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR),-1,-1,4,"mc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR),-1,-1,4,"reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR),-1,-1,4,"ratio_ghost=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR),-1,-1,4,"ratio_bg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR),-1,-1,4,"ratio_clone=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR),-1,-1,4,"ghost=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR),-1,-1,4,"bg=",0,"background");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR),-1,-1,4,"clone=",0,"background");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBmnKFDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCbmKFHit(void) {
   /* CbmKFHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit));
   G__memfunc_setup("Filter",614,G__BmnKFDict_168_0_2, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BmnKFDict_168_0_3, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_168_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_168_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_168_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_168_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_168_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_168_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_168_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFHit", 838, G__BmnKFDict_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit), -1, 1, 1, 1, 1, 0, "u 'CbmKFHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFVertexInterface(void) {
   /* CbmKFVertexInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface));
   G__memfunc_setup("CbmKFVertexInterface",1970,G__BmnKFDict_169_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefX",661,G__BmnKFDict_169_0_2, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefY",662,G__BmnKFDict_169_0_3, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefZ",663,G__BmnKFDict_169_0_4, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovMatrix",1213,G__BmnKFDict_169_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "/ Array[6] of covariance matrix", (void*) NULL, 1);
   G__memfunc_setup("GetRefChi2",899,G__BmnKFDict_169_0_6, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", "/ Chi^2 after fit", (void*) NULL, 1);
   G__memfunc_setup("GetRefNDF",789,G__BmnKFDict_169_0_7, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", "/ Number of Degrees of Freedom after fit", (void*) NULL, 1);
   G__memfunc_setup("GetRefNTracks",1267,G__BmnKFDict_169_0_8, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", "/ Number of tracks used during fit", (void*) NULL, 1);
   G__memfunc_setup("SetVertex",938,G__BmnKFDict_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmVertex' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__BmnKFDict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmVertex' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_169_0_11, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFVertexInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_169_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertexInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_169_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFVertexInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_169_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFVertexInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_169_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_169_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertexInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_169_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFVertexInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_169_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertexInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_169_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFVertexInterface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFVertexInterface", 1970, G__BmnKFDict_169_0_23, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface), -1, 0, 1, 1, 1, 0, "u 'CbmKFVertexInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFVertexInterface", 2096, G__BmnKFDict_169_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_169_0_25, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertexInterface), -1, 1, 1, 1, 1, 0, "u 'CbmKFVertexInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFTrackInterface(void) {
   /* CbmKFTrackInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface));
   G__memfunc_setup("CbmKFTrackInterface",1833,G__BmnKFDict_170_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__BmnKFDict_170_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "/ Mass hypothesis", (void*) NULL, 1);
   G__memfunc_setup("IsElectron",1016,G__BmnKFDict_170_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "/ Is it electron", (void*) NULL, 1);
   G__memfunc_setup("GetTrack",789,G__BmnKFDict_170_0_4, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "/ array[6] of track parameters(x,y,tx,ty,qp,z)", (void*) NULL, 1);
   G__memfunc_setup("GetCovMatrix",1213,G__BmnKFDict_170_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "/ array[15] of covariance matrix", (void*) NULL, 1);
   G__memfunc_setup("GetRefChi2",899,G__BmnKFDict_170_0_6, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", "/ Chi^2 after fit", (void*) NULL, 1);
   G__memfunc_setup("GetRefNDF",789,G__BmnKFDict_170_0_7, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", "/ Number of Degrees of Freedom after fit", (void*) NULL, 1);
   G__memfunc_setup("GetNOfHits",955,G__BmnKFDict_170_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "/ Number of hits", (void*) NULL, 1);
   G__memfunc_setup("GetHit",581,G__BmnKFDict_170_0_9, 85, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "/ Access to i-th hit", (void*) NULL, 1);
   G__memfunc_setup("Extrapolate",1161,G__BmnKFDict_170_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - z D - 'Double_t' 0 '0' QP0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__BmnKFDict_170_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' downstream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smooth",634,G__BmnKFDict_170_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit2Vertex",979,G__BmnKFDict_170_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmKFVertexInterface' - 1 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Propagate",931,G__BmnKFDict_170_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - z_out d - 'Double_t' 0 - QP0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Propagate",931,G__BmnKFDict_170_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z_out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Id",173,G__BmnKFDict_170_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__BmnKFDict_170_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_170_0_18, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFTrackInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_170_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrackInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_170_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFTrackInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_170_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFTrackInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BmnKFDict_170_0_22, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BmnKFDict_170_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BmnKFDict_170_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_170_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_170_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrackInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_170_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTrackInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_170_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrackInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_170_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTrackInterface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFTrackInterface", 1833, G__BmnKFDict_170_0_30, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface), -1, 0, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFTrackInterface", 1959, G__BmnKFDict_170_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_170_0_32, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrackInterface), -1, 1, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFMaterial(void) {
   /* CbmKFMaterial */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial));
   G__memfunc_setup("CbmKFMaterial",1234,G__BmnKFDict_171_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOutside",921,G__BmnKFDict_171_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pass",407,G__BmnKFDict_171_0_3, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - ZCross d - 'Double_t' 0 - ZThick "
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pass",407,G__BmnKFDict_171_0_4, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pass",407,G__BmnKFDict_171_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Info",396,G__BmnKFDict_171_0_6, 117, G__get_linked_tagnum(&G__BmnKFDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("comparePDown",1231,G__BmnKFDict_171_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'CbmKFMaterial' - 10 - a U 'CbmKFMaterial' - 10 - b", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const CbmKFMaterial*, const CbmKFMaterial*))(&CbmKFMaterial::comparePDown) ), 0);
   G__memfunc_setup("compareP_z",1040,G__BmnKFDict_171_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'CbmKFMaterial' - 10 - a d - 'Double_t' 0 - z", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const CbmKFMaterial*, Double_t))(&CbmKFMaterial::compareP_z) ), 0);
   G__memfunc_setup("compareP_Z",1008,G__BmnKFDict_171_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - z U 'CbmKFMaterial' - 10 - a", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Double_t, const CbmKFMaterial*))(&CbmKFMaterial::compareP_Z) ), 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_171_0_10, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFMaterial::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_171_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMaterial::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_171_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFMaterial::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_171_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFMaterial::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_171_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_171_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMaterial::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_171_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFMaterial::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_171_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMaterial::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_171_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFMaterial::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFMaterial", 1234, G__BmnKFDict_171_0_22, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial), -1, 0, 1, 1, 1, 0, "u 'CbmKFMaterial' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFMaterial", 1360, G__BmnKFDict_171_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_171_0_24, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial), -1, 1, 1, 1, 1, 0, "u 'CbmKFMaterial' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFWall(void) {
   /* CbmKFWall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall));
   G__memfunc_setup("CbmKFWall",819,G__BmnKFDict_172_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_172_0_2, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFWall::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_172_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFWall::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_172_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFWall::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_172_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFWall::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_172_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_172_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFWall::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_172_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFWall::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_172_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFWall::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_172_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFWall::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFWall", 819, G__BmnKFDict_172_0_14, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall), -1, 0, 1, 1, 1, 0, "u 'CbmKFWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFWall", 945, G__BmnKFDict_172_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_172_0_16, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFWall), -1, 1, 1, 1, 1, 0, "u 'CbmKFWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFTube(void) {
   /* CbmKFTube */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube));
   G__memfunc_setup("CbmKFTube",819,G__BmnKFDict_173_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFTube",819,G__BmnKFDict_173_0_2, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - ID d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - dz d - 'Double_t' 0 - r "
"d - 'Double_t' 0 - R d - 'Double_t' 0 - radL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Info",396,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BmnKFDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - X d - 'Double_t' 0 - Y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_173_0_5, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFTube::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_173_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTube::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_173_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFTube::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_173_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFTube::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_173_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_173_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTube::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_173_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTube::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_173_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTube::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_173_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTube::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFTube", 819, G__BmnKFDict_173_0_17, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube), -1, 0, 1, 1, 1, 0, "u 'CbmKFTube' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFTube", 945, G__BmnKFDict_173_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_173_0_19, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTube), -1, 1, 1, 1, 1, 0, "u 'CbmKFTube' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFBox(void) {
   /* CbmKFBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox));
   G__memfunc_setup("CbmKFBox",716,G__BmnKFDict_174_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFBox",716,G__BmnKFDict_174_0_2, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - ID d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - dx d - 'Double_t' 0 - dy "
"d - 'Double_t' 0 - dz d - 'Double_t' 0 - radL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Info",396,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BmnKFDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - X d - 'Double_t' 0 - Y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_174_0_5, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_174_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_174_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_174_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_174_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_174_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_174_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_174_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_174_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFBox::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFBox", 716, G__BmnKFDict_174_0_17, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox), -1, 0, 1, 1, 1, 0, "u 'CbmKFBox' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFBox", 842, G__BmnKFDict_174_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_174_0_19, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFBox), -1, 1, 1, 1, 1, 0, "u 'CbmKFBox' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFCone(void) {
   /* CbmKFCone */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone));
   G__memfunc_setup("CbmKFCone",808,G__BmnKFDict_175_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pass",407,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - ZCross d - 'Double_t' 0 - ZThick "
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pass",407,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pass",407,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_175_0_5, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFCone::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_175_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFCone::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_175_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFCone::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_175_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFCone::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_175_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_175_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFCone::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_175_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFCone::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_175_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFCone::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_175_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFCone::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFCone", 808, G__BmnKFDict_175_0_17, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone), -1, 0, 1, 1, 1, 0, "u 'CbmKFCone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFCone", 934, G__BmnKFDict_175_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_175_0_19, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFCone), -1, 1, 1, 1, 1, 0, "u 'CbmKFCone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKF(void) {
   /* CbmKF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF));
   G__memfunc_setup("CbmKF",419,G__BmnKFDict_739_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"KF\"' name i - 'Int_t' 0 '1' iVerbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__BmnKFDict_739_0_2, 85, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (CbmKF* (*)())(&CbmKF::Instance) ), 0);
   G__memfunc_setup("SetParContainers",1637,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BmnKFDictLN_InitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BmnKFDictLN_InitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaterialIndex",1607,G__BmnKFDict_739_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - uid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Propagate",931,G__BmnKFDict_739_0_7, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 - T D - 'Double_t' 0 - C "
"d - 'Double_t' 0 - z_out d - 'Double_t' 0 - QP0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassMaterial",1222,G__BmnKFDict_739_0_8, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track d - 'Double_t' 1 - QP0 "
"i - 'Int_t' 0 - ifst i - 'Int_t' 0 - ilst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassMaterialBetween",1936,G__BmnKFDict_739_0_9, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track d - 'Double_t' 1 - QP0 "
"i - 'Int_t' 0 - ifst i - 'Int_t' 0 - ilst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassMaterialBetween",1936,G__BmnKFDict_739_0_10, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track d - 'Double_t' 1 - QP0 "
"U 'CbmKFHit' - 0 - fst U 'CbmKFHit' - 0 - lst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMagneticField",1580,G__BmnKFDict_739_0_11, 85, G__get_linked_tagnum(&G__BmnKFDictLN_FairField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMethod",897,G__BmnKFDict_739_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMvdStations",1514,G__BmnKFDict_739_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStsStations",1533,G__BmnKFDict_739_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTube",780,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"u 'CbmKFTube' - 1 - tube U 'FairGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPassive",1111,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMaterial), -1, 0, 1, 1, 4, 0, "U 'FairGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKF",419,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKF), -1, 0, 1, 1, 4, 0, "u 'CbmKF' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'CbmKF' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_739_0_19, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_739_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_739_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_739_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_739_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_739_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_739_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_739_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_739_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKF::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CbmKF", 545, G__BmnKFDict_739_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFFieldMath(void) {
   /* CbmKFFieldMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath));
   G__memfunc_setup("CbmKFFieldMath",1297,G__BmnKFDict_761_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtrapolateLine",1553,G__BmnKFDict_761_0_2, 121, -1, -1, 0, 5, 3, 1, 0, 
"D - 'Double_t' 10 - T_in D - 'Double_t' 10 - C_in "
"D - 'Double_t' 0 - T_out D - 'Double_t' 0 - C_out "
"d - 'Double_t' 0 - z_out", (char*)NULL, (void*) G__func2void( (void (*)(const Double_t*, const Double_t*, Double_t*, Double_t*, Double_t))(&CbmKFFieldMath::ExtrapolateLine) ), 0);
   G__memfunc_setup("ExtrapolateRK4",1370,G__BmnKFDict_761_0_3, 105, -1, G__defined_typename("Int_t"), 0, 7, 3, 1, 0, 
"D - 'Double_t' 10 - T_in D - 'Double_t' 10 - C_in "
"D - 'Double_t' 0 - T_out D - 'Double_t' 0 - C_out "
"d - 'Double_t' 0 - z_out d - 'Double_t' 0 - qp0 "
"U 'FairField' - 0 - MF", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Double_t*, const Double_t*, Double_t*, Double_t*, Double_t, Double_t, FairField*))(&CbmKFFieldMath::ExtrapolateRK4) ), 0);
   G__memfunc_setup("ExtrapolateALight",1730,G__BmnKFDict_761_0_4, 105, -1, G__defined_typename("Int_t"), 0, 7, 3, 1, 0, 
"D - 'Double_t' 10 - T_in D - 'Double_t' 10 - C_in "
"D - 'Double_t' 0 - T_out D - 'Double_t' 0 - C_out "
"d - 'Double_t' 0 - z_out d - 'Double_t' 0 - qp0 "
"U 'FairField' - 0 - MF", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Double_t*, const Double_t*, Double_t*, Double_t*, Double_t, Double_t, FairField*))(&CbmKFFieldMath::ExtrapolateALight) ), 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_761_0_5, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFFieldMath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_761_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFFieldMath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_761_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFFieldMath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_761_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFFieldMath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_761_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_761_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFFieldMath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_761_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFFieldMath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_761_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFFieldMath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_761_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFFieldMath::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFFieldMath", 1297, G__BmnKFDict_761_0_17, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath), -1, 0, 1, 1, 1, 0, "u 'CbmKFFieldMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFFieldMath", 1423, G__BmnKFDict_761_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_761_0_19, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFFieldMath), -1, 1, 1, 1, 1, 0, "u 'CbmKFFieldMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFMath(void) {
   /* CbmKFMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath));
   G__memfunc_setup("CbmKFMath",813,G__BmnKFDict_762_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThickness",1228,G__BmnKFDict_762_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - z1 d - 'Double_t' 0 - z2 "
"d - 'Double_t' 0 - mz d - 'Double_t' 0 - mthick "
"D - 'Double_t' 0 - mz_out D - 'Double_t' 0 - mthick_out", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t*, Double_t*))(&CbmKFMath::GetThickness) ), 0);
   G__memfunc_setup("intersectCone",1366,G__BmnKFDict_762_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 7, 3, 1, 0, 
"d - 'Double_t' 0 - zCone d - 'Double_t' 0 - ZCone "
"d - 'Double_t' 0 - rCone d - 'Double_t' 0 - RCone "
"D - 'Double_t' 10 - x D - 'Double_t' 0 - z1 "
"D - 'Double_t' 0 - z2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Double_t, Double_t, Double_t, Double_t, const Double_t*, Double_t*, Double_t*))(&CbmKFMath::intersectCone) ), 0);
   G__memfunc_setup("indexS",619,G__BmnKFDict_762_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t, Int_t))(&CbmKFMath::indexS) ), 0);
   G__memfunc_setup("multQSQt",811,G__BmnKFDict_762_0_5, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 10 - Q "
"D - 'Double_t' 10 - S D - 'Double_t' 0 - S_out", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, const Double_t*, const Double_t*, Double_t*))(&CbmKFMath::multQSQt) ), 0);
   G__memfunc_setup("multQtSQ",811,G__BmnKFDict_762_0_6, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - N D - 'Double_t' 10 - Q "
"D - 'Double_t' 10 - S D - 'Double_t' 0 - S_out", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, const Double_t*, const Double_t*, Double_t*))(&CbmKFMath::multQtSQ) ), 0);
   G__memfunc_setup("multSSQ",697,G__BmnKFDict_762_0_7, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - 'Double_t' 10 - A D - 'Double_t' 10 - B "
"D - 'Double_t' 0 - C i - 'Int_t' 0 - n", (char*)NULL, (void*) G__func2void( (void (*)(const Double_t*, const Double_t*, Double_t*, Int_t))(&CbmKFMath::multSSQ) ), 0);
   G__memfunc_setup("four_dim_inv",1281,G__BmnKFDict_762_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "D - 'Double_t' 2 - a", (char*)NULL, (void*) G__func2void( (void (*)(Double_t**))(&CbmKFMath::four_dim_inv) ), 0);
   G__memfunc_setup("five_dim_inv",1263,G__BmnKFDict_762_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "D - 'Double_t' 2 - a", (char*)NULL, (void*) G__func2void( (void (*)(Double_t**))(&CbmKFMath::five_dim_inv) ), 0);
   G__memfunc_setup("invS",416,G__BmnKFDict_762_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - A i - 'Int_t' 0 - N", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Double_t*, Int_t))(&CbmKFMath::invS) ), 0);
   G__memfunc_setup("getDeviation",1251,G__BmnKFDict_762_0_11, 100, -1, G__defined_typename("Double_t"), 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"D - 'Double_t' 0 - C d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy D - 'Double_t' 0 '0' Cv", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t*, Double_t, Double_t, Double_t*))(&CbmKFMath::getDeviation) ), 0);
   G__memfunc_setup("AnalyticQP",982,G__BmnKFDict_762_0_12, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"D - 'Double_t' 10 - T D - 'Double_t' 10 - V "
"U 'FairField' - 0 - MagneticField", (char*)NULL, (void*) G__func2void( (Double_t (*)(const Double_t*, const Double_t*, FairField*))(&CbmKFMath::AnalyticQP) ), 0);
   G__memfunc_setup("GetNoise",798,G__BmnKFDict_762_0_13, 105, -1, G__defined_typename("Int_t"), 0, 13, 3, 1, 0, 
"d - 'Double_t' 0 - Lrl d - 'Double_t' 0 - F "
"d - 'Double_t' 0 - Fe d - 'Double_t' 0 - tx "
"d - 'Double_t' 0 - ty d - 'Double_t' 0 - qp "
"d - 'Double_t' 0 - mass g - 'Bool_t' 0 - is_electron "
"g - 'Bool_t' 0 - downstream_direction D - 'Double_t' 0 - Q5 "
"D - 'Double_t' 0 - Q8 D - 'Double_t' 0 - Q9 "
"D - 'Double_t' 0 - Ecor", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Bool_t, Bool_t, Double_t*, Double_t*, Double_t*, Double_t*))(&CbmKFMath::GetNoise) ), 0);
   G__memfunc_setup("CopyTrackParam2TC",1610,G__BmnKFDict_762_0_14, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'FairTrackParam' - 0 - par D - 'Double_t' 0 - T "
"D - 'Double_t' 0 - C", (char*)NULL, (void*) G__func2void( (void (*)(FairTrackParam*, Double_t*, Double_t*))(&CbmKFMath::CopyTrackParam2TC) ), 0);
   G__memfunc_setup("CopyTC2TrackParam",1610,G__BmnKFDict_762_0_15, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'FairTrackParam' - 0 - par D - 'Double_t' 0 - T "
"D - 'Double_t' 0 - C", (char*)NULL, (void*) G__func2void( (void (*)(FairTrackParam*, Double_t*, Double_t*))(&CbmKFMath::CopyTC2TrackParam) ), 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_762_0_16, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFMath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_762_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_762_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFMath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_762_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFMath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_762_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_762_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_762_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFMath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_762_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFMath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_762_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFMath::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFMath", 813, G__BmnKFDict_762_0_28, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath), -1, 0, 1, 1, 1, 0, "u 'CbmKFMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFMath", 939, G__BmnKFDict_762_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_762_0_30, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFMath), -1, 1, 1, 1, 1, 0, "u 'CbmKFMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFPixelMeasurement(void) {
   /* CbmKFPixelMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement));
   G__memfunc_setup("CbmKFPixelMeasurement",2091,G__BmnKFDict_763_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Filter",614,G__BmnKFDict_763_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPDAF",897,G__BmnKFDict_763_0_3, 121, -1, -1, 0, 5, 3, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track u 'vector<CbmKFPixelMeasurement*,allocator<CbmKFPixelMeasurement*> >' 'vector<CbmKFPixelMeasurement*>' 1 - vm "
"d - - 0 - gateX d - - 0 - gateY "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - vProb", (char*)NULL, (void*) G__func2void( (void (*)(CbmKFTrackInterface&, vector<CbmKFPixelMeasurement*>&, double, double, vector<double>&))(&CbmKFPixelMeasurement::FilterPDAF) ), 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_763_0_4, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFPixelMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_763_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPixelMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_763_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFPixelMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_763_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFPixelMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_763_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_763_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPixelMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_763_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPixelMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_763_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPixelMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_763_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPixelMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFPixelMeasurement", 2091, G__BmnKFDict_763_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement), -1, 0, 1, 1, 1, 0, "u 'CbmKFPixelMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFPixelMeasurement", 2217, G__BmnKFDict_763_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_763_0_18, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPixelMeasurement), -1, 1, 1, 1, 1, 0, "u 'CbmKFPixelMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFPrimaryVertexFinder(void) {
   /* CbmKFPrimaryVertexFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder));
   G__memfunc_setup("CbmKFPrimaryVertexFinder",2397,G__BmnKFDict_769_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__BmnKFDict_769_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__BmnKFDict_769_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CbmKFTrackInterface' - 0 - Track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTracks",916,G__BmnKFDict_769_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<CbmKFTrackInterface*,allocator<CbmKFTrackInterface*> >' 'vector<CbmKFTrackInterface*>' 1 - vTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__BmnKFDict_769_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmKFVertexInterface' - 1 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_769_0_6, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFPrimaryVertexFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_769_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPrimaryVertexFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_769_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFPrimaryVertexFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_769_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFPrimaryVertexFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_769_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_769_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPrimaryVertexFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_769_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPrimaryVertexFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_769_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPrimaryVertexFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_769_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPrimaryVertexFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFPrimaryVertexFinder", 2397, G__BmnKFDict_769_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder), -1, 0, 1, 1, 1, 0, "u 'CbmKFPrimaryVertexFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFPrimaryVertexFinder", 2523, G__BmnKFDict_769_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_769_0_20, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder), -1, 1, 1, 1, 1, 0, "u 'CbmKFPrimaryVertexFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFUMeasurement(void) {
   /* CbmKFUMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement));
   G__memfunc_setup("CbmKFUMeasurement",1662,G__BmnKFDict_774_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__BmnKFDict_774_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - z d - 'Double_t' 0 - u "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - sigma2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Filter",614,G__BmnKFDict_774_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_774_0_4, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFUMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_774_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFUMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_774_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFUMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_774_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFUMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_774_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_774_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFUMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_774_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFUMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_774_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFUMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_774_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFUMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFUMeasurement", 1662, G__BmnKFDict_774_0_16, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement), -1, 0, 1, 1, 1, 0, "u 'CbmKFUMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFUMeasurement", 1788, G__BmnKFDict_774_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_774_0_18, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFUMeasurement), -1, 1, 1, 1, 1, 0, "u 'CbmKFUMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFParticle(void) {
   /* CbmKFParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle));
   G__memfunc_setup("Id",173,G__BmnKFDict_775_0_1, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDaughters",1013,G__BmnKFDict_775_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DaughterIds",1108,G__BmnKFDict_775_0_3, 117, G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__BmnKFDict_775_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", "should be always used (manualy)", (void*) NULL, 0);
   G__memfunc_setup("SetNDaughters",1313,G__BmnKFDict_775_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__BmnKFDict_775_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanDaughtersId",1591,G__BmnKFDict_775_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFParticle",1239,G__BmnKFDict_775_0_8, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFParticle",1239,G__BmnKFDict_775_0_9, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle), -1, 0, 4, 1, 1, 0, 
"U 'CbmKFTrackInterface' - 0 - Track D - 'Double_t' 0 '0' z0 "
"I - 'Int_t' 0 '0' qHypo I - 'Int_t' 0 '0' pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,G__BmnKFDict_775_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<CbmKFTrackInterface*,allocator<CbmKFTrackInterface*> >' 'vector<CbmKFTrackInterface*>' 1 - vDaughters U 'CbmKFVertexInterface' - 0 '0' Parent "
"d - 'Double_t' 0 '-1' Mass d - 'Double_t' 0 '-1' CutChi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFromKFParticle",2334,G__BmnKFDict_775_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<CbmKFParticle*,allocator<CbmKFParticle*> >' 'vector<CbmKFParticle*>' 1 - vDaughters U 'CbmKFVertexInterface' - 0 '0' Parent "
"d - 'Double_t' 0 '-1' Mass d - 'Double_t' 0 '-1' CutChi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransportToProductionVertex",2869,G__BmnKFDict_775_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransportToDecayVertex",2292,G__BmnKFDict_775_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDStoPoint",1188,G__BmnKFDict_775_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - xyz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BmnKFDict_775_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BmnKFDict_775_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__BmnKFDict_775_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__BmnKFDict_775_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__BmnKFDict_775_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__BmnKFDict_775_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__BmnKFDict_775_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetS",371,G__BmnKFDict_775_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__BmnKFDict_775_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__BmnKFDict_775_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDF",504,G__BmnKFDict_775_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__BmnKFDict_775_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovMatrix",1213,G__BmnKFDict_775_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtProductionVertex",2170,G__BmnKFDict_775_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__BmnKFDict_775_0_29, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovariance",1307,G__BmnKFDict_775_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovariance",1307,G__BmnKFDict_775_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rX",202,G__BmnKFDict_775_0_32, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rY",203,G__BmnKFDict_775_0_33, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rZ",204,G__BmnKFDict_775_0_34, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rPx",314,G__BmnKFDict_775_0_35, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rPy",315,G__BmnKFDict_775_0_36, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rPz",316,G__BmnKFDict_775_0_37, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rE",183,G__BmnKFDict_775_0_38, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rS",197,G__BmnKFDict_775_0_39, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rQ",195,G__BmnKFDict_775_0_40, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rChi2",440,G__BmnKFDict_775_0_41, 100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rNDF",330,G__BmnKFDict_775_0_42, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rParameter",1043,G__BmnKFDict_775_0_43, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rCovariance",1133,G__BmnKFDict_775_0_44, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rCovariance",1133,G__BmnKFDict_775_0_45, 100, -1, G__defined_typename("Double_t"), 1, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKFTrack",934,G__BmnKFDict_775_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CbmKFTrackInterface' - 0 - Track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKFVertex",1071,G__BmnKFDict_775_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmKFVertexInterface' - 1 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__BmnKFDict_775_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - P d - 'Double_t' 1 - Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__BmnKFDict_775_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - M d - 'Double_t' 1 - Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayLength",1384,G__BmnKFDict_775_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - L d - 'Double_t' 1 - Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLifeTime",1071,G__BmnKFDict_775_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - T d - 'Double_t' 1 - Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRapidity",1126,G__BmnKFDict_775_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPt",484,G__BmnKFDict_775_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__BmnKFDict_775_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__BmnKFDict_775_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Extrapolate",1161,G__BmnKFDict_775_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - r0 d - - 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtrapolateLine",1553,G__BmnKFDict_775_0_57, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - r0 d - - 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__BmnKFDict_775_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__BmnKFDict_775_0_59, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cij",278,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 1, 2, 1, 2, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IJ",147,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 2, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeasureMass",1126,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - r0 d - 'Double_t' 0 - Mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeasureProductionVertex",2423,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - r0 U 'CbmKFVertexInterface' - 0 - Parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - r0 g - - 0 - ToProduction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_775_0_65, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_775_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_775_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_775_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_775_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_775_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_775_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_775_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_775_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFParticle", 1239, G__BmnKFDict_775_0_77, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle), -1, 0, 1, 1, 1, 0, "u 'CbmKFParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFParticle", 1365, G__BmnKFDict_775_0_78, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_775_0_79, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFParticle), -1, 1, 1, 1, 1, 0, "u 'CbmKFParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFStsHit(void) {
   /* CbmKFStsHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit));
   G__memfunc_setup("CbmKFStsHit",1026,G__BmnKFDict_785_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,G__BmnKFDict_785_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CbmStsHit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,G__BmnKFDict_785_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CbmMvdHit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Filter",614,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track g - 'Bool_t' 0 - downstream "
"d - 'Double_t' 1 - QP0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FilterPDAF",897,G__BmnKFDict_785_0_5, 121, -1, -1, 0, 7, 3, 1, 0, 
"u 'CbmKFTrackInterface' - 1 - track u 'vector<CbmKFStsHit*,allocator<CbmKFStsHit*> >' 'vector<CbmKFStsHit*>' 1 - vpHits "
"g - 'Bool_t' 0 - downstream D - 'Double_t' 0 - QP0 "
"d - - 0 - gateX d - - 0 - gateY "
"i - - 1 - best_hit_idx", (char*)NULL, (void*) G__func2void( (void (*)(CbmKFTrackInterface&, vector<CbmKFStsHit*>&, Bool_t, Double_t*, double, double, int&))(&CbmKFStsHit::FilterPDAF) ), 0);
   G__memfunc_setup("operator=",937,G__BmnKFDict_785_0_6, 117, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit), -1, 1, 1, 1, 1, 1, "u 'CbmKFStsHit' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFStsHit",1026,G__BmnKFDict_785_0_7, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFStsHit), -1, 0, 1, 1, 1, 0, "u 'CbmKFStsHit' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_785_0_8, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFStsHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_785_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFStsHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_785_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFStsHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_785_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFStsHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_785_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_785_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFStsHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_785_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFStsHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_785_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFStsHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_785_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFStsHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFStsHit", 1152, G__BmnKFDict_785_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFTrack(void) {
   /* CbmKFTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack));
   G__memfunc_setup("CbmKFTrack",920,G__BmnKFDict_791_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFTrack",920,G__BmnKFDict_791_0_2, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 0, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFTrack",920,G__BmnKFDict_791_0_3, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 0, 1, 1, 1, 0, "u 'FairTrackParam' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFTrack",920,G__BmnKFDict_791_0_4, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 0, 2, 1, 1, 0, 
"u 'CbmStsTrack' - 1 - track g - - 0 '1' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__BmnKFDict_791_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CbmKFTrackInterface' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackParam",1298,G__BmnKFDict_791_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'FairTrackParam' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStsTrack",1115,G__BmnKFDict_791_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CbmStsTrack' - 1 - track g - - 0 '1' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackParam",1286,G__BmnKFDict_791_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'FairTrackParam' - 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStsTrack",1103,G__BmnKFDict_791_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CbmStsTrack' - 1 - track g - - 0 '1' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPID",521,G__BmnKFDict_791_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pidHypo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovMatrix",1213,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefChi2",899,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefNDF",789,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMass",692,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsElectron",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNOfHits",955,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHit",581,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_791_0_19, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_791_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_791_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_791_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_791_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_791_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_791_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_791_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_791_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFTrack", 920, G__BmnKFDict_791_0_31, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 0, 1, 1, 1, 0, "u 'CbmKFTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFTrack", 1046, G__BmnKFDict_791_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_791_0_33, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFTrack), -1, 1, 1, 1, 1, 0, "u 'CbmKFTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFVertex(void) {
   /* CbmKFVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex));
   G__memfunc_setup("CbmKFVertex",1057,G__BmnKFDict_796_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CbmKFVertex",1057,G__BmnKFDict_796_0_2, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex), -1, 0, 1, 1, 1, 0, "u 'CbmVertex' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefX",661,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefY",662,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefZ",663,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovMatrix",1213,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefChi2",899,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefNDF",789,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefNTracks",1267,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_796_0_10, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_796_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_796_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_796_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_796_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_796_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_796_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_796_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_796_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFVertex", 1057, G__BmnKFDict_796_0_22, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex), -1, 0, 1, 1, 1, 0, "u 'CbmKFVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFVertex", 1183, G__BmnKFDict_796_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_796_0_24, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFVertex), -1, 1, 1, 1, 1, 0, "u 'CbmKFVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmPVFinderKF(void) {
   /* CbmPVFinderKF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF));
   G__memfunc_setup("CbmPVFinderKF",1185,G__BmnKFDict_798_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPrimaryVertex",1763,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TClonesArray' - 0 - tracks U 'CbmVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BmnKFDict_798_0_3, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmPVFinderKF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_798_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmPVFinderKF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_798_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmPVFinderKF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_798_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmPVFinderKF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_798_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_798_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmPVFinderKF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_798_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmPVFinderKF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_798_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmPVFinderKF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_798_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmPVFinderKF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmPVFinderKF", 1185, G__BmnKFDict_798_0_15, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF), -1, 0, 1, 1, 1, 0, "u 'CbmPVFinderKF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmPVFinderKF", 1311, G__BmnKFDict_798_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_798_0_17, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmPVFinderKF), -1, 1, 1, 1, 1, 0, "u 'CbmPVFinderKF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmStsKFTrackFitter(void) {
   /* CbmStsKFTrackFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter));
   G__memfunc_setup("CbmStsKFTrackFitter",1856,G__BmnKFDict_841_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoFit",470,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'CbmStsTrack' - 0 - track i - 'Int_t' 0 '211' pidHypo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extrapolate",1161,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'CbmStsTrack' - 0 - track d - 'Double_t' 0 - z "
"U 'FairTrackParam' - 0 - e_track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extrapolate",1161,G__BmnKFDict_841_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'FairTrackParam' - 0 - trackPar d - 'Double_t' 0 - z "
"U 'FairTrackParam' - 0 - e_track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiToVertex",1397,G__BmnKFDict_841_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'CbmStsTrack' - 0 - track U 'CbmVertex' - 0 '0' vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitToVertex",1124,G__BmnKFDict_841_0_7, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'CbmStsTrack' - 0 - track U 'CbmVertex' - 0 - vtx "
"U 'FairTrackParam' - 0 - v_track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKFHits",853,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'CbmKFTrack' - 1 - T U 'CbmStsTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTrack",979,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'CbmKFTrack' - 1 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_841_0_10, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmStsKFTrackFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_841_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmStsKFTrackFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_841_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmStsKFTrackFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_841_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmStsKFTrackFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_841_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_841_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmStsKFTrackFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_841_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmStsKFTrackFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_841_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmStsKFTrackFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_841_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmStsKFTrackFitter::DeclFileLine) ), 0);
   G__memfunc_setup("CbmStsKFTrackFitter",1856,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmStsKFTrackFitter), -1, 0, 1, 1, 4, 0, "u 'CbmStsKFTrackFitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'CbmStsKFTrackFitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmStsKFTrackFitter", 1982, G__BmnKFDict_841_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKFParticleMatch(void) {
   /* KFParticleMatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch));
   G__memfunc_setup("KFParticleMatch",1458,G__BmnKFDict_846_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatch",781,G__BmnKFDict_846_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatch",793,G__BmnKFDict_846_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatchType",1211,G__BmnKFDict_846_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCombinatorialBG",1673,G__BmnKFDict_846_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPhysicsBG",1064,G__BmnKFDict_846_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRecoParticle",1401,G__BmnKFDict_846_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_846_0_8, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KFParticleMatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_846_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFParticleMatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_846_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KFParticleMatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_846_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KFParticleMatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_846_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_846_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFParticleMatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_846_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFParticleMatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_846_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFParticleMatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_846_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFParticleMatch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KFParticleMatch", 1458, G__BmnKFDict_846_0_20, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch), -1, 0, 1, 1, 1, 0, "u 'KFParticleMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KFParticleMatch", 1584, G__BmnKFDict_846_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_846_0_22, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_KFParticleMatch), -1, 1, 1, 1, 1, 0, "u 'KFParticleMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKFMCParticle(void) {
   /* KFMCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle));
   G__memfunc_setup("KFMCParticle",1109,G__BmnKFDict_848_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__BmnKFDict_848_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDaughters",1013,G__BmnKFDict_848_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughterIds",1396,G__BmnKFDict_848_0_4, 117, G__get_linked_tagnum(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCommonMC",1146,G__BmnKFDict_848_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__BmnKFDict_848_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCTrackID",1086,G__BmnKFDict_848_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMotherId",1096,G__BmnKFDict_848_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCTrackID",1074,G__BmnKFDict_848_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMotherId",1084,G__BmnKFDict_848_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__BmnKFDict_848_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsReconstructable",1772,G__BmnKFDict_848_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsReconstructable",2064,G__BmnKFDict_848_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateIsReconstructable",2682,G__BmnKFDict_848_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '2' NDaughters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateIsRecRec",1662,G__BmnKFDict_848_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '2' NDaughters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_848_0_16, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KFMCParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_848_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_848_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KFMCParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_848_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KFMCParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_848_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_848_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_848_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFMCParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_848_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_848_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFMCParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KFMCParticle", 1109, G__BmnKFDict_848_0_28, (int) ('i'), G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle), -1, 0, 1, 1, 1, 0, "u 'KFMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KFMCParticle", 1235, G__BmnKFDict_848_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_848_0_30, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_KFMCParticle), -1, 1, 1, 1, 1, 0, "u 'KFMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCbmKFPartEfficiencies(void) {
   /* CbmKFPartEfficiencies */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies));
   G__memfunc_setup("CbmKFPartEfficiencies",2039,G__BmnKFDict_855_0_1, 105, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleIndex",1612,G__BmnKFDict_855_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCounter",1001,G__BmnKFDict_855_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - shortname u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator+=",980,G__BmnKFDict_855_0_4, 117, G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies), -1, 1, 1, 1, 1, 0, "u 'CbmKFPartEfficiencies' - 1 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcEff",644,G__BmnKFDict_855_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inc",282,G__BmnKFDict_855_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - isReco i - - 0 - nClones "
"u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncReco",675,G__BmnKFDict_855_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - isGhost g - - 0 - isBg "
"u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEff",798,G__BmnKFDict_855_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFromFile",1053,G__BmnKFDict_855_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BmnKFDict_855_0_10, 85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CbmKFPartEfficiencies::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BmnKFDict_855_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPartEfficiencies::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BmnKFDict_855_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CbmKFPartEfficiencies::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BmnKFDict_855_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CbmKFPartEfficiencies::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BmnKFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BmnKFDict_855_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BmnKFDict_855_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPartEfficiencies::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BmnKFDict_855_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPartEfficiencies::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BmnKFDict_855_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CbmKFPartEfficiencies::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BmnKFDict_855_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CbmKFPartEfficiencies::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CbmKFPartEfficiencies", 2039, G__BmnKFDict_855_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies), -1, 0, 1, 1, 1, 0, "u 'CbmKFPartEfficiencies' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CbmKFPartEfficiencies", 2165, G__BmnKFDict_855_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BmnKFDict_855_0_24, (int) ('u'), G__get_linked_tagnum(&G__BmnKFDictLN_CbmKFPartEfficiencies), -1, 1, 1, 1, 1, 0, "u 'CbmKFPartEfficiencies' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBmnKFDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBmnKFDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBmnKFDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BmnKFDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFHit = { "CbmKFHit" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFVertexInterface = { "CbmKFVertexInterface" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFTrackInterface = { "CbmKFTrackInterface" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFMaterial = { "CbmKFMaterial" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFWall = { "CbmKFWall" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFTube = { "CbmKFTube" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFBox = { "CbmKFBox" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFCone = { "CbmKFCone" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_FairField = { "FairField" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_FairGeoNode = { "FairGeoNode" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR = { "map<TString,TObject*,less<TString>,allocator<pair<const TString,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR = { "deque<TClonesArray*,allocator<TClonesArray*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR = { "queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString>,allocator<pair<const TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > > > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR = { "map<TString,TClonesArray*,less<TString>,allocator<pair<const TString,TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR = { "map<TString,FairTSBufferFunctional*,less<TString>,allocator<pair<const TString,FairTSBufferFunctional*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR = { "map<TString,FairWriteoutBuffer*,less<TString>,allocator<pair<const TString,FairWriteoutBuffer*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR = { "map<int,TBranch*,less<int>,allocator<pair<const int,TBranch*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_listlETStringcOallocatorlETStringgRsPgR = { "list<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR = { "map<TString,TChain*,less<TString>,allocator<pair<const TString,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR = { "map<TString,list<TString,allocator<TString> >*,less<TString>,allocator<pair<const TString,list<TString,allocator<TString> >*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR = { "multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString>,allocator<pair<const TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > > > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR = { "map<unsigned int,TChain*,less<unsigned int>,allocator<pair<const unsigned int,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_InitStatus = { "InitStatus" , 101 , -1 };
G__linked_taginfo G__BmnKFDictLN_FairTask = { "FairTask" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmStsDigiScheme = { "CbmStsDigiScheme" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR = { "map<int,CbmStsStation*,less<int>,allocator<pair<const int,CbmStsStation*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplETStringcOCbmStsSensormUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOCbmStsSensormUgRsPgRsPgR = { "map<TString,CbmStsSensor*,less<TString>,allocator<pair<const TString,CbmStsSensor*> > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKF = { "CbmKF" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR = { "vector<CbmKFMaterial*,allocator<CbmKFMaterial*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFMaterial*,allocator<CbmKFMaterial*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR = { "vector<CbmKFTube,allocator<CbmKFTube> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTubecOallocatorlECbmKFTubegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFTube,allocator<CbmKFTube> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR = { "vector<CbmKFWall,allocator<CbmKFWall> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFWallcOallocatorlECbmKFWallgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFWall,allocator<CbmKFWall> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR = { "vector<CbmKFCone,allocator<CbmKFCone> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFConecOallocatorlECbmKFConegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFCone,allocator<CbmKFCone> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR = { "vector<CbmKFBox,allocator<CbmKFBox> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFBox,allocator<CbmKFBox> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_FairTrackParam = { "FairTrackParam" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFFieldMath = { "CbmKFFieldMath" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFMath = { "CbmKFMath" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFPixelMeasurement = { "CbmKFPixelMeasurement" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR = { "vector<CbmKFPixelMeasurement*,allocator<CbmKFPixelMeasurement*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFPixelMeasurement*,allocator<CbmKFPixelMeasurement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmVertex = { "CbmVertex" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFPrimaryVertexFinder = { "CbmKFPrimaryVertexFinder" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR = { "vector<CbmKFTrackInterface*,allocator<CbmKFTrackInterface*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFTrackInterface*,allocator<CbmKFTrackInterface*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFUMeasurement = { "CbmKFUMeasurement" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFParticle = { "CbmKFParticle" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR = { "vector<CbmKFParticle*,allocator<CbmKFParticle*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFParticle*,allocator<CbmKFParticle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmStsHit = { "CbmStsHit" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmMvdHit = { "CbmMvdHit" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFStsHit = { "CbmKFStsHit" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR = { "vector<CbmKFStsHit*,allocator<CbmKFStsHit*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFStsHit*,allocator<CbmKFStsHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmStsTrack = { "CbmStsTrack" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFTrack = { "CbmKFTrack" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR = { "vector<CbmKFHit*,allocator<CbmKFHit*> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFHit*,allocator<CbmKFHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFVertex = { "CbmKFVertex" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmPrimaryVertexFinder = { "CbmPrimaryVertexFinder" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmPVFinderKF = { "CbmPVFinderKF" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSymlEfloatgR = { "TMatrixTSym<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmStsTrackFitter = { "CbmStsTrackFitter" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmStsKFTrackFitter = { "CbmStsKFTrackFitter" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR = { "vector<CbmKFStsHit,allocator<CbmKFStsHit> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CbmKFStsHit,allocator<CbmKFStsHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_KFParticleMatch = { "KFParticleMatch" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_KFMCParticle = { "KFMCParticle" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR = { "TL1TracksCatCounters<double>" , 115 , -1 };
G__linked_taginfo G__BmnKFDictLN_TL1TracksCatCounterslEintgR = { "TL1TracksCatCounters<int>" , 115 , -1 };
G__linked_taginfo G__BmnKFDictLN_CbmKFPartEfficiencies = { "CbmKFPartEfficiencies" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BmnKFDictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR = { "map<int,float,less<int>,allocator<pair<const int,float> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBmnKFDict() {
  G__BmnKFDictLN_TClass.tagnum = -1 ;
  G__BmnKFDictLN_TBuffer.tagnum = -1 ;
  G__BmnKFDictLN_TMemberInspector.tagnum = -1 ;
  G__BmnKFDictLN_TObject.tagnum = -1 ;
  G__BmnKFDictLN_TNamed.tagnum = -1 ;
  G__BmnKFDictLN_TString.tagnum = -1 ;
  G__BmnKFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_TClonesArray.tagnum = -1 ;
  G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFHit.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFVertexInterface.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFTrackInterface.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFMaterial.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFWall.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFTube.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFBox.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFCone.tagnum = -1 ;
  G__BmnKFDictLN_FairField.tagnum = -1 ;
  G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_FairGeoNode.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_listlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_TTask.tagnum = -1 ;
  G__BmnKFDictLN_InitStatus.tagnum = -1 ;
  G__BmnKFDictLN_FairTask.tagnum = -1 ;
  G__BmnKFDictLN_CbmStsDigiScheme.tagnum = -1 ;
  G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_maplETStringcOCbmStsSensormUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOCbmStsSensormUgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmKF.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTubecOallocatorlECbmKFTubegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFWallcOallocatorlECbmKFWallgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFConecOallocatorlECbmKFConegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_FairTrackParam.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFFieldMath.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFMath.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFPixelMeasurement.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmVertex.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFPrimaryVertexFinder.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFUMeasurement.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFParticle.tagnum = -1 ;
  G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmStsHit.tagnum = -1 ;
  G__BmnKFDictLN_CbmMvdHit.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFStsHit.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmStsTrack.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFTrack.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFVertex.tagnum = -1 ;
  G__BmnKFDictLN_CbmPrimaryVertexFinder.tagnum = -1 ;
  G__BmnKFDictLN_CbmPVFinderKF.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BmnKFDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BmnKFDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSymlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmStsTrackFitter.tagnum = -1 ;
  G__BmnKFDictLN_CbmStsKFTrackFitter.tagnum = -1 ;
  G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_KFParticleMatch.tagnum = -1 ;
  G__BmnKFDictLN_KFMCParticle.tagnum = -1 ;
  G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR.tagnum = -1 ;
  G__BmnKFDictLN_TL1TracksCatCounterslEintgR.tagnum = -1 ;
  G__BmnKFDictLN_CbmKFPartEfficiencies.tagnum = -1 ;
  G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BmnKFDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BmnKFDictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBmnKFDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TString);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFHit),sizeof(CbmKFHit),-1,292097,(char*)NULL,G__setup_memvarCbmKFHit,G__setup_memfuncCbmKFHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFVertexInterface),sizeof(CbmKFVertexInterface),-1,292096,(char*)NULL,G__setup_memvarCbmKFVertexInterface,G__setup_memfuncCbmKFVertexInterface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFTrackInterface),sizeof(CbmKFTrackInterface),-1,263424,(char*)NULL,G__setup_memvarCbmKFTrackInterface,G__setup_memfuncCbmKFTrackInterface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFMaterial),sizeof(CbmKFMaterial),-1,292096,(char*)NULL,G__setup_memvarCbmKFMaterial,G__setup_memfuncCbmKFMaterial);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFWall),sizeof(CbmKFWall),-1,292096,(char*)NULL,G__setup_memvarCbmKFWall,G__setup_memfuncCbmKFWall);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFTube),sizeof(CbmKFTube),-1,324864,(char*)NULL,G__setup_memvarCbmKFTube,G__setup_memfuncCbmKFTube);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFBox),sizeof(CbmKFBox),-1,324864,(char*)NULL,G__setup_memvarCbmKFBox,G__setup_memfuncCbmKFBox);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFCone),sizeof(CbmKFCone),-1,292096,(char*)NULL,G__setup_memvarCbmKFCone,G__setup_memfuncCbmKFCone);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_FairField);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_FairGeoNode);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_listlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TTask);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_InitStatus);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_FairTask);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmStsDigiScheme);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEintcOCbmStsStationmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOCbmStsStationmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplETStringcOCbmStsSensormUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOCbmStsSensormUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKF),sizeof(CbmKF),-1,327424,(char*)NULL,G__setup_memvarCbmKF,G__setup_memfuncCbmKF);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFMaterialmUcOallocatorlECbmKFMaterialmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFTubecOallocatorlECbmKFTubegRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTubecOallocatorlECbmKFTubegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFWallcOallocatorlECbmKFWallgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFWallcOallocatorlECbmKFWallgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFConecOallocatorlECbmKFConegRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFConecOallocatorlECbmKFConegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFBoxcOallocatorlECbmKFBoxgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_FairTrackParam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFFieldMath),sizeof(CbmKFFieldMath),-1,292096,(char*)NULL,G__setup_memvarCbmKFFieldMath,G__setup_memfuncCbmKFFieldMath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFMath),sizeof(CbmKFMath),-1,292096,(char*)NULL,G__setup_memvarCbmKFMath,G__setup_memfuncCbmKFMath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFPixelMeasurement),sizeof(CbmKFPixelMeasurement),-1,292096,(char*)NULL,G__setup_memvarCbmKFPixelMeasurement,G__setup_memfuncCbmKFPixelMeasurement);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFPixelMeasurementmUcOallocatorlECbmKFPixelMeasurementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFPrimaryVertexFinder),sizeof(CbmKFPrimaryVertexFinder),-1,292096,(char*)NULL,G__setup_memvarCbmKFPrimaryVertexFinder,G__setup_memfuncCbmKFPrimaryVertexFinder);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFTrackInterfacemUcOallocatorlECbmKFTrackInterfacemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFUMeasurement),sizeof(CbmKFUMeasurement),-1,292096,(char*)NULL,G__setup_memvarCbmKFUMeasurement,G__setup_memfuncCbmKFUMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFParticle),sizeof(CbmKFParticle),-1,324864,(char*)NULL,G__setup_memvarCbmKFParticle,G__setup_memfuncCbmKFParticle);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFParticlemUcOallocatorlECbmKFParticlemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmStsHit);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmMvdHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFStsHit),sizeof(CbmKFStsHit),-1,294656,(char*)NULL,G__setup_memvarCbmKFStsHit,G__setup_memfuncCbmKFStsHit);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitmUcOallocatorlECbmKFStsHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmStsTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFTrack),sizeof(CbmKFTrack),-1,296192,(char*)NULL,G__setup_memvarCbmKFTrack,G__setup_memfuncCbmKFTrack);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFHitmUcOallocatorlECbmKFHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFVertex),sizeof(CbmKFVertex),-1,324864,(char*)NULL,G__setup_memvarCbmKFVertex,G__setup_memfuncCbmKFVertex);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmPrimaryVertexFinder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmPVFinderKF),sizeof(CbmPVFinderKF),-1,292096,(char*)NULL,G__setup_memvarCbmPVFinderKF,G__setup_memfuncCbmPVFinderKF);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSymlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmStsTrackFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmStsKFTrackFitter),sizeof(CbmStsKFTrackFitter),-1,294656,(char*)NULL,G__setup_memvarCbmStsKFTrackFitter,G__setup_memfuncCbmStsKFTrackFitter);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlECbmKFStsHitcOallocatorlECbmKFStsHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_KFParticleMatch),sizeof(KFParticleMatch),-1,292096,(char*)NULL,G__setup_memvarKFParticleMatch,G__setup_memfuncKFParticleMatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_KFMCParticle),sizeof(KFMCParticle),-1,292096,(char*)NULL,G__setup_memvarKFMCParticle,G__setup_memfuncKFMCParticle);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TL1TracksCatCounterslEdoublegR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_TL1TracksCatCounterslEintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BmnKFDictLN_CbmKFPartEfficiencies),sizeof(CbmKFPartEfficiencies),-1,324864,(char*)NULL,G__setup_memvarCbmKFPartEfficiencies,G__setup_memfuncCbmKFPartEfficiencies);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BmnKFDictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR);
}
extern "C" void G__cpp_setupBmnKFDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBmnKFDict()");
  G__set_cpp_environmentBmnKFDict();
  G__cpp_setup_tagtableBmnKFDict();

  G__cpp_setup_inheritanceBmnKFDict();

  G__cpp_setup_typetableBmnKFDict();

  G__cpp_setup_memvarBmnKFDict();

  G__cpp_setup_memfuncBmnKFDict();
  G__cpp_setup_globalBmnKFDict();
  G__cpp_setup_funcBmnKFDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBmnKFDict();
  return;
}
class G__cpp_setup_initBmnKFDict {
  public:
    G__cpp_setup_initBmnKFDict() { G__add_setup_func("BmnKFDict",(G__incsetup)(&G__cpp_setupBmnKFDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBmnKFDict() { G__remove_setup_func("BmnKFDict"); }
};
G__cpp_setup_initBmnKFDict G__cpp_setup_initializerBmnKFDict;

